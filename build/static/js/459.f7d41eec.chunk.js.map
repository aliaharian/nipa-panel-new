{"version":3,"file":"static/js/459.f7d41eec.chunk.js","mappings":"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","sources":["app/redux/hooks.ts","components/form/TextField.tsx","components/popup/DeletePopup.tsx","components/popup/Popup.tsx","components/skeleton/TableSkeleton.tsx","app/redux/translations/service.ts","app/redux/translations/actions.ts","components/translations/AddKeywordDialog.tsx","pages/translations/index.tsx"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import React from \"react\";\nimport ReactInputMask from \"react-input-mask\";\nimport { Input, InputAdornment, TextField as MuiTextField, OutlinedInput } from \"@mui/material\";\nimport transform from \"app/utils/transform\";\nimport { useTranslation } from \"react-i18next\";\n\ntype TextFieldProps = {\n  name: string;\n  label?: any;\n  type?: string;\n  placeholder?: string | null;\n  formik?: any;\n  mask?: string;\n  maskChar?: string;\n  inputActions?: any;\n  className?: string;\n  normal?: boolean;\n  endEndorement?: any;\n  multiline?: boolean;\n  readonly?: boolean;\n  value?: any;\n};\nconst TextField = ({\n  name,\n  label,\n  formik,\n  type = \"text\",\n  placeholder,\n  maskChar,\n  className,\n  mask,\n  inputActions,\n  normal,\n  endEndorement,\n  multiline,\n  readonly,\n  value\n}: TextFieldProps) => {\n  const { i18n } = useTranslation();\n  return (\n    <div\n      className={`flex flex-col w-full items-start justify-start ${className}`}\n    >\n      {label && <div className=\"text-sm mb-2 flex justify-between w-full\">\n        <label htmlFor={name} className=\"font-normal !text-xs\">{label}</label>\n        {inputActions?.()}\n      </div>}\n\n      {!normal ? <ReactInputMask\n        mask={mask ? mask : \"\"}\n        maskChar={maskChar ? maskChar : \" \"}\n        value={value || formik?.values?.[name]}\n        type={type}\n        dir={i18n.dir()}\n        className={`w-full h-12 border border-text-400 rounded-[8px] p-2 text-sm focus:border-primary-main !outline-none invalid:border-error-primary ${formik?.errors?.[name] && formik?.touched?.[name]\n          ? \"!border-error-primary\"\n          : \"\"\n          }`}\n        id={name}\n        name={name}\n        style={{ direction: type == \"tel\" ? \"ltr\" : i18n.dir() }}\n        placeholder={placeholder || \"\"}\n        readOnly={readonly}\n        onChange={(e) => {\n          //formik handlechange without mask\n          formik?.handleChange({\n            target: {\n              name,\n              value: e.target.value,\n              // value: e.target.value.replace(/ /g, \"\"),\n            },\n          });\n        }}\n      ></ReactInputMask> :\n\n        <Input\n          value={type == \"number\" ?\n            //convert to persian digits put commas\n            transform.toPersianDigitsPutCommas(\n            formik?.values?.[name]\n            )\n            : formik?.values?.[name]\n          }\n          type={\"text\"}\n          readOnly={readonly}\n          id={name}\n          name={name}\n          multiline={multiline}\n          rows={multiline ? 4 : 1}\n          placeholder={placeholder || \"\"}\n          onChange={(e) => {\n            const value = transform.convetToEnglishDigitsRemoveCommas(e.target.value);\n            let res = \"\";\n            if (type == \"number\") {\n              //replace all except numbers and dots with \"\"\n              let tmp = value.replace(/[^0-9.]/g, \"\").split(\".\");\n              if (tmp.length > 1) {\n                res = (tmp[0] || \"0\") + \".\" + (tmp[1] || \"\");\n              } else {\n                res = tmp[0];\n              }\n              \n            } else {\n              res = e.target.value\n            }\n\n            formik?.handleChange({\n              target: {\n                name,\n                value: res\n              },\n            });\n          }}\n\n          disableUnderline\n          endAdornment={<InputAdornment position=\"end\" >{endEndorement}</InputAdornment>}\n          className={`!text-sm text-text-400 w-full ${multiline ? \"h-[100px] resize-none !p-2\" : \"h-12\"\n            } border border-text-400 rounded-[8px] p-2 focus:border-primary-main !outline-none invalid:border-error-primary ${formik?.errors?.[name] && formik?.touched?.[name]\n              ? \"!border-error-primary\"\n              : \"\"\n            }`}\n        />\n      }\n\n      {formik?.errors?.[name] && formik?.touched?.[name] && (\n        <p className=\"text-error-primary text-[10px] mt-1\">\n          {formik?.errors?.[name]}\n        </p>\n      )}\n    </div>\n  );\n};\nexport default TextField;\n","import React from \"react\";\nimport Popup from \"./Popup\";\nimport { Trash } from \"iconsax-react\";\nimport { useTranslation } from \"react-i18next\";\nimport Button from \"../button/Button\";\nimport { CircularProgress } from \"@mui/material\";\n\ntype PopupProps = {\n  open: boolean;\n  title?: string | null;\n  onClose: () => void;\n  handleConfirm: () => void;\n  loading?: boolean;\n};\nconst DeletePopup = ({\n  open,\n  onClose,\n  title,\n  handleConfirm,\n  loading,\n}: PopupProps) => {\n  const { t } = useTranslation([\"common\", \"validations\"]);\n  return (\n    <Popup open={open} onClose={onClose}>\n      <div className=\"w-14 h-14 mb-[10px] bg-primary-250 rounded-full items-center justify-center flex text-primary-main\">\n        <Trash variant=\"Bold\" />\n      </div>\n      <div>\n        <p className=\"text-center text-[16px] font-semibold mb-[35px]\">{title}</p>\n      </div>\n      <div className=\"flex items-center justify-between w-full max-w-[236px]\">\n        <div className=\"w-[102px]\">\n          <Button\n            disabled={loading}\n            text={\n              loading ? (\n                <CircularProgress color=\"inherit\" size={24} />\n              ) : (\n                t(\"yes\")\n              )\n            }\n            onClick={!loading ? handleConfirm : () => {}}\n          />\n        </div>\n        <div className=\"w-[102px]\">\n          <Button\n            disabled={loading}\n            text={t(\"no\")}\n            onClick={!loading ? onClose : () => {}}\n            bordered\n          />\n        </div>\n      </div>\n    </Popup>\n  );\n};\nexport default DeletePopup;\n","import { Dialog, DialogContent, Slide } from \"@mui/material\";\nimport { TransitionProps } from \"@mui/material/transitions\";\nimport React from \"react\";\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ntype PopupProps = {\n  open: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n};\nconst Popup = ({ open, onClose, children }: PopupProps) => {\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={onClose}\n      aria-describedby=\"alert-dialog-slide-description\"\n      //set width 452px\n      sx={{\n        \"& .MuiDialog-paper\": {\n          width: \"452px\",\n        },\n      }}\n    >\n      <DialogContent className=\"flex items-center justify-center flex-col\">{children}</DialogContent>\n    </Dialog>\n  );\n};\nexport default Popup;\n","import { Skeleton } from \"@mui/material\";\n\nconst TableSkeleton = () => {\n  return (\n    <div className=\"grid\">\n      <div className=\"w-full h-[71px] bg-text-200 border border-text-300 rounded-t-[4px] grid grid-cols-6 items-center justify-center px-4\">\n        {Array.from(Array(5).keys()).map((item, index) => (\n          <Skeleton\n            variant=\"rounded\"\n            width={\"37px\"}\n            height={18}\n            key={index}\n            animation=\"wave\"\n          />\n        ))}\n      </div>\n\n      {Array.from(Array(5).keys()).map((item, index) => (\n        <div key={index} className=\"w-full h-[71px] border border-text-300 border-t-0 rounded-t-[4px] grid grid-cols-6 items-center justify-center px-4\">\n          {Array.from(Array(5).keys()).map((item, index) => (\n            <Skeleton\n              variant=\"rounded\"\n              width={\"45px\"}\n              height={18}\n              key={index}\n              animation=\"wave\"\n            />\n          ))}\n          <div className=\"w-[120px] flex items-cente justify-center\">\n            <div className=\"w-[92px] h-[38px] rounded-full border border-text-400 flex items-center justify-center\">\n              <Skeleton\n                variant=\"rounded\"\n                width={\"47px\"}\n                height={14}\n                animation=\"wave\"\n              />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default TableSkeleton;\n","/* eslint-disable import/no-anonymous-default-export */\n\nimport Api from \"../../../app/service/Api\";\n\nasync function keywordsList() {\n  let response = await Api()?.get(\"/keywords\");\n  return response?.data;\n}\nasync function languagesList() {\n  let response = await Api()?.get(\"/languages\");\n  return response?.data;\n}\nasync function saveKeyword(keyword: string) {\n  let response = await Api()?.post(\"/keywords\", { keyword });\n  return response?.data;\n}\nasync function updateKeyword(id: number, keyword: string) {\n  let response = await Api()?.put(\"/keywords/\" + id, { keyword });\n  return response?.data;\n}\nasync function saveTranslation(keyword_id: number, language_id: number, translation: any) {\n  let response = await Api()?.post(\"/translations\", { keyword_id, language_id, translation });\n  return response?.data;\n}\nasync function deleteKeyword(keyword_id: number) {\n  let response = await Api()?.delete(\"/keywords/\" + keyword_id);\n  return response?.data;\n}\n\nexport default {\n  keywordsList,\n  languagesList,\n  saveKeyword,\n  saveTranslation,\n  updateKeyword,\n  deleteKeyword\n};\n","import { AnyAction, ThunkAction } from \"@reduxjs/toolkit\";\nimport translationService from \"./service\";\nimport { RootState } from \"app/redux/store\";\nimport translationSlice from \"./slice\";\n\nconst translationActions = translationSlice.actions;\n\nexport const keywordsList = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  AnyAction\n> => {\n  return async (dispatch, getState) => {\n    const response = await translationService.keywordsList();\n    dispatch(translationActions.keywordsList(response));\n  };\n};\n\nexport const languagesList = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  AnyAction\n> => {\n  return async (dispatch, getState) => {\n    const response = await translationService.languagesList();\n    dispatch(translationActions.languagesList(response));\n  };\n};\nexport const addKeyword = (values: any): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  AnyAction\n> => {\n  return async (dispatch, getState) => {\n    //first save keyword\n    dispatch(translationActions.saveSuccess(false));\n    try {\n      const response = await translationService.saveKeyword(values.keyword);\n      //then save translation\n      // iterate rest values except keyword\n      for (const [key, translation] of Object.entries(values)) {\n        const language = getState().translations.languages?.find(\n          (language) => language.language === key\n        );\n        console.log(`${key}: ${translation}`);\n        if (translation !== \"\" && language) {\n          //find language id\n          await translationService.saveTranslation(response.id, language.id, translation);\n        }\n      }\n    } catch (e) {\n    } finally {\n      dispatch(translationActions.saveSuccess(true));\n      dispatch(keywordsList());\n    }\n  };\n};\nexport const editKeyword = (values: any): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  AnyAction\n> => {\n  return async (dispatch, getState) => {\n    //first save keyword\n    dispatch(translationActions.saveSuccess(false));\n    try {\n      const response = await translationService.updateKeyword(values.id, values.keyword);\n      //then save translation\n      // iterate rest values except keyword\n      for (const [key, translation] of Object.entries(values)) {\n        const language = getState().translations.languages?.find(\n          (language) => language.language === key\n        );\n        console.log(`${key}: ${translation}`);\n        if (translation !== \"\" && language) {\n          //find language id\n          await translationService.saveTranslation(response.id, language.id, translation);\n        }\n      }\n    } catch (e) {\n    } finally {\n      dispatch(translationActions.saveSuccess(true));\n      dispatch(keywordsList());\n    }\n  };\n};\n","import { Add } from \"iconsax-react\";\nimport SideDialog from \"../sideDialog/SideDialog\";\nimport TextField from \"../form/TextField\";\nimport { useFormik } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport Button from \"../button/Button\";\nimport * as Yup from \"yup\";\nimport { setSaveSuccess } from \"app/redux/products/actions\";\nimport { useAppDispatch, useAppSelector } from \"app/redux/hooks\";\nimport { useEffect, useState } from \"react\";\nimport SnackbarUtils from \"app/utils/SnackbarUtils\";\nimport { addKeyword, editKeyword } from \"app/redux/translations/actions\";\n\ntype AddKeywordDialogProps = {\n  open: boolean;\n  handleClose?: () => void;\n  langs: any[];\n  keyword?: any;\n};\n\nconst AddKeywordDialog = ({\n  open,\n  handleClose,\n  keyword,\n  langs\n}: AddKeywordDialogProps) => {\n  const { t } = useTranslation([\"common\", \"validations\"]);\n  const Dispatch = useAppDispatch();\n  const saveSuccess = useAppSelector(\n    (state: any) => state.translations.saveSuccess\n  );\n\n  const validationSchema = Yup.object().shape({\n    keyword: Yup.string().required(\n      t(\"keyword.required\", { ns: \"validations\" }) || \"\"\n    ),\n  });\n\n  let initialValues: any = {\n    id: 0,\n    keyword: \"\",\n\n  };\n  //append langs\n  langs.map((lang: any) => {\n    initialValues[lang.language] = \"\";\n  })\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit: async (values) => {\n      values.id ? Dispatch(editKeyword(values)) : Dispatch(addKeyword(values));\n    },\n  });\n\n  const handleSubmitForm = () => {\n    formik.handleSubmit();\n  };\n  const _handleClose = () => {\n    handleClose && handleClose();\n    formik.resetForm();\n    formik.setValues(initialValues);\n  };\n\n  useEffect(() => {\n    if (keyword) {\n      formik.setFieldValue(\"id\", keyword.id);\n      formik.setFieldValue(\"keyword\", keyword.keyword);\n      keyword.translations.map((t: any) => {\n        formik.setFieldValue(`${t.lang}`, t.translation);\n      })\n    }\n  }, [keyword])\n\n  useEffect(() => {\n    handleClose && handleClose();\n    formik.resetForm();\n    formik.setValues(initialValues);\n  }, [saveSuccess])\n\n  // console.log(\"edit\", editData);\n  // console.log(\"keyord\", keyword);\n  console.log(\"formik.values\", formik.values);\n  return (\n    <SideDialog\n      headerText={t(\"addBasicData\")}\n      headerIcon={<Add />}\n      open={open}\n      handleClose={_handleClose}\n    >\n      <SideDialog.Content>\n        <div className=\"p-7 font-bold text-[18px]\">\n          <p className=\"text-start\">{t(\"enterBasicDataDetail\")}</p>\n          <form onSubmit={formik.handleSubmit} className=\"w-full\">\n            <div className=\"mt-7 w-full grid grid-cols-2 gap-x-5 gap-y-7\">\n              <TextField\n                name=\"keyword\"\n                label={t(\"keyword\")}\n                type={\"text\"}\n                placeholder={t(\"keyword\")}\n                formik={formik}\n              />\n\n              {\n                langs?.map((lang: any, index) => (\n                  <TextField\n                    key={lang.id}\n                    name={lang.language}\n                    label={t(\"translateIn\") + \" \" + t(lang.language)}\n                    type={\"text\"}\n                    placeholder={t(lang.language)}\n                    formik={formik}\n                  />\n                ))\n              }\n            </div>\n          </form>\n        </div>\n      </SideDialog.Content>\n      <SideDialog.Footer>\n        <div className=\"py-[24px] border-t border-text-300 px-7 flex justify-between\">\n          <div className=\"w-[126px]\">\n            <Button\n              disabled={!saveSuccess}\n              text={t(\"cancel\")}\n              onClick={_handleClose}\n              gray\n            />\n          </div>\n          <div className=\"w-[207px]\">\n            <Button\n              disabled={!saveSuccess}\n              icon={saveSuccess ? <Add /> : null}\n              text={t(\"submit\")}\n              onClick={handleSubmitForm}\n              loading={!saveSuccess}\n            />\n          </div>\n        </div>\n      </SideDialog.Footer>\n    </SideDialog>\n  );\n};\n\nexport default AddKeywordDialog;\n","import Button from \"components/button/Button\";\nimport Breadcrumb from \"components/breadcrumb/Breadcrumb\";\nimport { Add, Edit, Trash } from \"iconsax-react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useEffect, useState } from \"react\";\nimport TableSkeleton from \"components/skeleton/TableSkeleton\";\nimport Table from \"components/table/Table\";\nimport { useAppDispatch, useAppSelector } from \"app/redux/hooks\";\nimport TableAction from \"components/table/TableAction\";\nimport { keywordsList, languagesList } from \"app/redux/translations/actions\";\nimport AddKeywordDialog from \"components/translations/AddKeywordDialog\";\nimport DeletePopup from \"components/popup/DeletePopup\";\nimport translationService from \"app/redux/translations/service\";\n\nconst TranslationsPage = () => {\n    const { t } = useTranslation();\n    const [openAddKeyword, setOpenAddKeyword] = useState<boolean>(false);\n    const data = useAppSelector(state => state.translations.keywords);\n    const langs = useAppSelector(state => state.translations.languages);\n    const [selectedKeyword, setSelectedKeyword] = useState<any>(null);\n    const Dispatch = useAppDispatch();\n    const [openDeletePopup, setOpenDeletePopup] = useState<boolean>(false);\n    const [deleteLoading, setDeleteLoading] = useState<boolean>(false);\n\n    useEffect(() => {\n        Dispatch(keywordsList())\n        !langs && Dispatch(languagesList())\n    }, [])\n    const columns = [\n        {\n            name: t(\"#\"),\n            selector: (row: any) => row.id,\n            sortable: true,\n        },\n        {\n            name: t(\"keyword\"),\n            selector: (row: any) => row.keyword,\n            sortable: true,\n        },\n        {\n            name: t(\"translateIn\") + \" \" + t(\"en\"),\n            selector: (row: any) => row.translations.find((item: any) => item.lang == \"en\")?.translation||t(\"dontHave\"),\n            sortable: true,\n        },\n        {\n            allowOverflow: true,\n            button: true,\n            width: \"120px\",\n            cell: (row: any) => (\n                <TableAction\n                    items={[\n                        {\n                            icon: <Edit variant=\"Bold\" />,\n                            text: t('edit'),\n                            name: \"edit\",\n                        },\n                        {\n                            icon: <Trash variant={\"Bold\"} />,\n                            text: t('delete'),\n                            name: \"delete\",\n                        },\n                    ].filter(Boolean)}\n                    handleAction={handleTableAction}\n                    row={row}\n                />\n            ),\n        }\n    ];\n    const handleTableAction = (\n        row: any,\n        action: string\n    ) => {\n        switch (action) {\n            case \"edit\":\n                setSelectedKeyword(row);\n                setOpenAddKeyword(true);\n                break;\n            case \"delete\":\n                setSelectedKeyword(row);\n                setOpenDeletePopup(true);\n                break;\n            default:\n                break;\n        }\n    }\n    const handleClosedeletePopup = () => {\n        setOpenDeletePopup(false);\n        setSelectedKeyword(null);\n    }\n    const handleDeleteProduct = async () => {\n        setDeleteLoading(true);\n        await translationService.deleteKeyword(selectedKeyword.id);\n        setDeleteLoading(false);\n        setOpenDeletePopup(false);\n        setSelectedKeyword(null);\n        Dispatch(keywordsList())\n    }\n\n    return (\n        <div className=\"w-full h-full\">\n            {langs &&\n                <AddKeywordDialog\n                    open={openAddKeyword}\n                    handleClose={() => { setOpenAddKeyword(false); setSelectedKeyword(null) }}\n                    // getKeywords={() => Dispatch(keywordsList())}\n                    langs={langs}\n                    keyword={selectedKeyword}\n\n                />}\n            <DeletePopup\n                title={t(\"deleteKeywordConfirmation\")}\n                open={openDeletePopup}\n                onClose={handleClosedeletePopup}\n                handleConfirm={handleDeleteProduct}\n                loading={deleteLoading}\n            />\n            <Breadcrumb\n                actions={\n                    <>\n                        <div className=\"w-[186px] ms-4\">\n                            <Button\n                                icon={<Add />}\n                                text={t(\"addKeyword\")}\n                                onClick={() => setOpenAddKeyword(true)}\n                            />\n                        </div>\n                    </>\n                }\n                title={t(\"translations\")}\n            />\n            <div>\n\n                {data ? (\n                    <Table columns={columns} data={data || []} />\n                ) : (\n                    <TableSkeleton />\n                )}\n            </div>\n        </div>\n    )\n}\nexport default TranslationsPage;"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","name","label","formik","type","placeholder","maskChar","className","mask","inputActions","normal","endEndorement","multiline","readonly","value","i18n","useTranslation","htmlFor","transform","values","readOnly","id","rows","onChange","e","target","res","tmp","replace","split","length","handleChange","disableUnderline","endAdornment","position","errors","touched","dir","style","direction","open","onClose","title","handleConfirm","loading","t","variant","disabled","text","color","size","onClick","bordered","Transition","React","props","ref","children","TransitionComponent","keepMounted","sx","width","Array","from","keys","map","item","index","height","animation","Api","get","response","data","keyword","post","put","keyword_id","language_id","translation","delete","keywordsList","languagesList","saveKeyword","saveTranslation","updateKeyword","deleteKeyword","translationActions","translationSlice","dispatch","getState","translationService","addKeyword","saveSuccess","key","language","translations","languages","find","console","log","Object","entries","editKeyword","handleClose","langs","Dispatch","state","validationSchema","Yup","shape","required","ns","initialValues","lang","useFormik","onSubmit","_handleClose","resetForm","setValues","useEffect","setFieldValue","SideDialog","headerText","headerIcon","Add","handleSubmit","TextField","Button","gray","icon","useState","openAddKeyword","setOpenAddKeyword","keywords","selectedKeyword","setSelectedKeyword","openDeletePopup","setOpenDeletePopup","deleteLoading","setDeleteLoading","columns","selector","row","sortable","allowOverflow","button","cell","TableAction","items","Edit","Trash","filter","Boolean","handleAction","handleTableAction","action","handleDeleteProduct","DeletePopup","Breadcrumb","actions","Table","TableSkeleton"],"sourceRoot":""}