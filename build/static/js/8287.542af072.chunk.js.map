{"version":3,"file":"static/js/8287.542af072.chunk.js","mappings":"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","sources":["app/redux/hooks.ts","app/redux/orders/service.ts","app/redux/products/actions.ts","app/redux/products/service.ts","app/redux/users/service.ts","app/redux/users/actions.ts","components/addOrder/SelectProduct.tsx","components/addOrder/OrderCreateForm.tsx","components/addOrder/ProductSidebarItem.tsx","components/addOrder/AddOrderSidebar.tsx","pages/orders/AddOrder.tsx"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","/* eslint-disable import/no-anonymous-default-export */\n\nimport Api from \"../../../app/service/Api\";\n\nasync function ordersList() {\n  let response = await Api()?.get(\"/order\");\n  return response?.data;\n}\nasync function orderDetail(orderId: number) {\n  let response = await Api()?.get(\"/order/\" + orderId);\n  return response?.data;\n}\n\nasync function orderGroupsList() {\n  let response = await Api()?.get(\"/orderGroup\");\n  return response?.data;\n}\n\nasync function createOrderGroup(selectedCustomer: string) {\n  let response = await Api()?.post(\"/orderGroup\", {\n    customer_code: selectedCustomer,\n  });\n  return response?.data;\n}\n\n// async function createOrder(\n//   orderGroupId: number,\n//   productId: number,\n//   count: number,\n//   customerName?: string\n// ) {\n//   let response = await Api()?.post(\"/order\", {\n//     product_id: productId,\n//     order_group_id: orderGroupId,\n//     customer_name: customerName,\n//     count: count,\n//   });\n//   return response?.data;\n// }\nasync function createOrder(request: {\n  customer_code: string;\n  orders?: {\n    count: number;\n    product_id: number;\n    form_id?: number | null;\n    data?: any;\n  }[];\n}) {\n  let response = await Api()?.post(\"/order\", request);\n  return response?.data;\n}\n\nasync function getCompleteInfo(orderId: number) {\n  let response = await Api()?.get(\"/order/\" + orderId + \"/complete\");\n  return response?.data;\n}\n\nasync function getStepInfo(stepId: number, orderId: number) {\n  let response = await Api()?.get(\n    \"/step/\" + stepId + \"/\" + orderId + \"/complete\"\n  );\n  return response?.data;\n}\n\nexport default {\n  ordersList,\n  createOrder,\n  createOrderGroup,\n  orderGroupsList,\n  orderDetail,\n  getCompleteInfo,\n  getStepInfo,\n};\n","import { AnyAction, ThunkAction } from \"@reduxjs/toolkit\";\nimport productService from \"./service\";\nimport { RootState } from \"app/redux/store\";\nimport productSlice from \"./slice\";\nimport { Product } from \"app/models/product\";\n\nconst productActions = productSlice.actions;\n\nexport const productsList = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  AnyAction\n> => {\n  return async (dispatch, getState) => {\n    const response = await productService.productsList();\n    dispatch(productActions.productsList(response));\n  };\n};\n\nexport const productStepsList = (\n  code: string\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    const response = await productService.productStepsList(code);\n    dispatch(productActions.productStepsList(response));\n  };\n};\nexport const getProductStepInfo = (\n  id: number\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    if (id === 0) return dispatch(productActions.productStepInfo(null));\n    const response = await productService.productStepInfo(id);\n    dispatch(productActions.productStepInfo(response));\n  };\n};\n\nexport const saveProduct = (\n  product: Product\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    const response = await productService.saveProduct(product);\n    dispatch(productActions.saveProduct(response));\n  };\n};\nexport const updateProduct = (\n  productId: number,\n  product: Product\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    const response = await productService.updateProduct(productId, product);\n    dispatch(productActions.updateProduct(response));\n    dispatch(productsList());\n  };\n};\n\nexport const setSaveSuccess = (\n  success: boolean\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    dispatch(productActions.setSaveSuccess(success));\n  };\n};\n\n//delete product\nexport const deleteProduct = (\n  id: number\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    const response = await productService.deleteProduct(id);\n    dispatch(productActions.deleteProduct(response));\n  };\n};\n\nexport const setDeleteSuccess = (\n  success: boolean\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    dispatch(productActions.setDeleteSuccess(success));\n  };\n};\n","/* eslint-disable import/no-anonymous-default-export */\n\nimport { Product } from \"app/models/product\";\nimport Api from \"../../../app/service/Api\";\n\nasync function productsList() {\n  let response = await Api()?.get(\"/products\");\n  return response?.data;\n}\nasync function productStepsList(code: string) {\n  let response = await Api()?.get(`/product/${code}/steps`);\n  return response?.data;\n}\nasync function productStepInfo(id: number) {\n  let response = await Api()?.get(`/productSteps/${id}`);\n  return response?.data;\n}\nasync function setProductStepRoles(id: number, roles: number[]) {\n  let response = await Api()?.post(`/product/steps/${id}/setRoles`, {\n    //array to string by ,\n    roles: roles.join(\",\"),\n  });\n  return response?.data;\n}\nasync function saveProduct(product: Product) {\n  let response = await Api()?.post(\"/products\", {\n    name: product.name,\n    code: product.code,\n    custom: product.custom,\n    price: product.price,\n    count_type: product.count_type,\n    status: product.status,\n    description: product.description,\n    images:\n      //array of image hash codes\n      product.images?.map((image) => image.hashCode),\n  });\n  return response?.data;\n}\n\nasync function updateProduct(id: number, product: Product) {\n  let response = await Api()?.put(`/products/${id}`, {\n    name: product.name,\n    code: product.code,\n    custom: product.custom,\n    count_type: product.count_type,\n    price: product.price,\n    status: product.status,\n    description: product.description,\n    images:\n      //array of image hash codes\n      product.images?.map((image) => image.hashCode),\n  });\n  return response?.data;\n}\n//delete product\nasync function deleteProduct(id: number) {\n  let response = await Api()?.delete(`/products/${id}`);\n  return response?.data;\n}\n//get product\nasync function getProduct(id: number) {\n  let response = await Api()?.get(`/products/${id}`);\n  return response?.data;\n}\n//add product condition\nasync function addProductConditions(data: any) {\n  let response = await Api()?.post(`/product/steps/conditions`, {\n    step_id: data.stepId,\n    field_id: data.fieldId,\n    option_id: data.optionId,\n    next_step_id: data.nextStepId,\n  });\n  return response?.data;\n}\n\nexport default {\n  productsList,\n  saveProduct,\n  deleteProduct,\n  productStepsList,\n  productStepInfo,\n  setProductStepRoles,\n  addProductConditions,\n  getProduct,\n  updateProduct,\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport { userFilterModel } from \"../../../app/models/user\";\nimport {\n  confirmCodeFormInitialValues,\n  LoginFormInitialValues,\n  sendCodeFormInitialValues,\n} from \"../../../app/models/auth\";\nimport Api from \"../../../app/service/Api\";\n\nasync function sendOtp(credentials: sendCodeFormInitialValues) {\n  let response = await Api()?.post(\"/sendOtp\", {\n    mobile: credentials.mobile,\n  });\n  return response?.data;\n}\nasync function confirmOtp(credentials: confirmCodeFormInitialValues) {\n  console.log(\"cscscsc\", credentials);\n  let response = await Api()?.post(\"/confirmOtp\", {\n    mobile: credentials.mobile,\n    otp: credentials.otp,\n  });\n  return response?.data;\n}\nasync function getRolesList() {\n  let response = await Api()?.get(\"/roles\");\n  return response?.data;\n}\nasync function getUserInfo() {\n  let response = await Api()?.get(\"/profile\");\n  return response?.data;\n}\nasync function getCustomersList() {\n  let response = await Api()?.get(\"/customers\");\n  return response?.data;\n}\nexport default {\n  sendOtp,\n  confirmOtp,\n  getRolesList,\n  getUserInfo,\n  getCustomersList,\n};\n","import {AnyAction, ThunkAction} from \"@reduxjs/toolkit\";\nimport userService from \"./service\";\nimport {RootState} from \"../store\";\nimport userSlice from \"./slice\";\nimport {\n    confirmCodeFormInitialValues,\n    sendCodeFormInitialValues, userLoginType,\n} from \"../../models/auth\";\n\nconst userActions = userSlice.actions;\n\nexport const sendOtp = (\n    credentials: sendCodeFormInitialValues\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n    return async (dispatch, getState) => {\n        const response = await userService.sendOtp(credentials);\n        console.log(response.data);\n        dispatch(userActions.setUserMobile(credentials.mobile));\n    };\n};\nexport const setUserMobile = (\n    mobile: string\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n    return async (dispatch, getState) => {\n        dispatch(userActions.setUserMobile(mobile));\n    };\n};\n\nexport const confirmOtp = (\n    credentials: confirmCodeFormInitialValues\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n    return async (dispatch, getState) => {\n        const response = await userService.confirmOtp(credentials);\n        console.log(response.data);\n        dispatch(userActions.setUserLogin(response));\n    };\n};\n\nexport const setUserLogin = (\n    userLogin: userLoginType\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n    return async (dispatch, getState) => {\n        dispatch(userActions.setUserLogin(userLogin));\n    };\n};\n\n\nexport const getRolesList = (): ThunkAction<void,\n    RootState,\n    unknown,\n    AnyAction> => {\n    return async (dispatch, getState) => {\n        const response = await userService.getRolesList();\n        console.log(response);\n        dispatch(userActions.getRolesList(response));\n    };\n};\nexport const getCustomersList = (): ThunkAction<void,\n    RootState,\n    unknown,\n    AnyAction> => {\n    return async (dispatch, getState) => {\n        const response = await userService.getCustomersList();\n        dispatch(userActions.getCustomersList(response.customers));\n    };\n};\n\nexport const getUserInfo = (): ThunkAction<void,\n    RootState,\n    unknown,\n    AnyAction> => {\n    return async (dispatch, getState) => {\n        const response = await userService.getUserInfo();\n        console.log(response);\n        dispatch(userActions.getUserInfo(response));\n    };\n};\n\nexport const logout = (): ThunkAction<void, RootState, unknown, AnyAction> => {\n    return async (dispatch, getState) => {\n        dispatch(userActions.logout());\n    };\n};\n","import { useTranslation } from \"react-i18next\";\nimport DropDown from \"../form/Dropdown\";\nimport { Product } from \"app/models/product\";\n\ntype SelectProductProps = {\n  products: Product[];\n  handleSelectProduct: (product_id: number) => void;\n};\nconst SelectProduct = ({\n  products,\n  handleSelectProduct,\n}: SelectProductProps) => {\n  const { t } = useTranslation();\n  return (\n    <div>\n      <DropDown\n        className=\"group\"\n        name={\"products\"}\n        label={t(\"selectedProduct\")}\n        options={products?.map((product: Product) => ({\n          label: <p>{product.name}</p>,\n          value: product.id || 0,\n        }))}\n        placeholder={t(\"pleaseSelectProduct\")}\n        formik={{\n          handleChange: (e: any) => {\n            handleSelectProduct(e.target.value);\n          },\n        }}\n      />\n    </div>\n  );\n};\nexport default SelectProduct;\n","import { useTranslation } from \"react-i18next\";\nimport DropDown from \"../form/Dropdown\";\nimport { Product } from \"app/models/product\";\nimport { selectedOrderType } from \"pages/orders/AddOrder\";\nimport { useEffect, useState } from \"react\";\nimport formService from \"app/redux/forms/service\";\nimport FormContent from \"../formBuilder/formContent/FormContent\";\nimport {\n  renderElement,\n  renderFormInitialValues,\n  renderFormValidation,\n} from \"app/utils/FormActions\";\nimport { FormField } from \"app/models/form\";\nimport Button from \"../button/Button\";\nimport { Add, ArrowLeft, ArrowRight } from \"iconsax-react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport FullscreenLoading from \"../loading/FullscreenLoading\";\n\ntype SelectProductProps = {\n  selectedOrder: selectedOrderType;\n  products: Product[];\n  handleClearOrder: () => void;\n  handleSaveOrder: (product: Product, values: any, addAnother: boolean) => void;\n};\nconst OrderCreateForm = ({\n  selectedOrder,\n  products,\n  handleClearOrder,\n  handleSaveOrder,\n}: SelectProductProps) => {\n  const { t } = useTranslation();\n  const [form, setForm] = useState<any>();\n  const [fields, setFields] = useState<FormField[]>([]);\n  const [conditions, setConditions] = useState<any[]>([]);\n  const [formSaved, setFormSaved] = useState(false);\n  const [pending, setPending] = useState(false);\n  const [addAnother, setAddAnother] = useState(false);\n  const selectedProduct = products.find(\n    (x) => x.id === selectedOrder.product_id\n  );\n\n  useEffect(() => {\n    loadForm();\n  }, []);\n\n  const [validationSchema, setValidationSchema] = useState<any>();\n  const [initialValues, setInitialValues] = useState<any>();\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    enableReinitialize: true,\n    onSubmit: async (values) => {\n      console.log(\"ok\",values)\n      selectedProduct && handleSaveOrder(selectedProduct, values, addAnother);\n    },\n  });\n  useEffect(() => {\n    setInitialValues(renderFormInitialValues(fields));\n    setValidationSchema(\n      Yup.object().shape(renderFormValidation(fields, conditions, formik))\n    );\n  }, [fields, formik.values, conditions]);\n\n  const handleSubmitForm = (addAnother: boolean) => {\n    setAddAnother(addAnother);\n    formik.handleSubmit(formik.values);\n    // if (Object.keys(formik.errors).length === 0) {\n    // }\n  };\n\n  // useEffect(() => {\n  //   if (formSaved && addAnother) {\n\n  //   }\n  // }, [formSaved]);\n  const loadForm = async () => {\n    if (selectedProduct?.initialFormId) {\n      const response = await formService.getForm(\n        selectedProduct?.initialFormId\n      );\n      setForm(response);\n\n      let fieldsTmp: any[] = [];\n      response.fields?.map((item: any) => {\n        let tmp: any = {\n          key: item.id,\n          name: item.name,\n          placeholder: item.placeholder,\n          label: item.label,\n          type: item.type.type,\n          typeId: item.type.id,\n          required: item.required,\n          id: item.id,\n          fromRelatedFields:\n            item?.form?.id && item?.form?.id != response?.id ? true : false,\n        };\n\n        if (item.type.type === \"dropDown\" || item.type.type === \"checkbox\") {\n          if (item.basic_data_id) {\n            tmp = {\n              ...tmp,\n              basic_data: item.basic_data,\n              basic_data_id: item.basic_data_id,\n              basicDataItems: item.basicDataItems.map((opt: any) => ({\n                key: opt.id,\n                id: opt.id,\n                label: <p>{opt.label}</p>,\n                server_id: opt.id,\n                value: opt.option,\n              })),\n            };\n          } else {\n            tmp = {\n              ...tmp,\n              options: item.options.map((opt: any) => ({\n                id: opt.id,\n                key: opt.id,\n                label: <p>{opt.label}</p>,\n                server_id: opt.id,\n                value: opt.option,\n              })),\n            };\n          }\n        }\n        if (item.type.type === \"uploadFile\") {\n          tmp = {\n            ...tmp,\n            onlyImage: JSON.parse(item.validation)?.onlyImage,\n            setPending: setPending,\n            noBadge: true,\n          };\n        }\n        fieldsTmp.push({ ...tmp });\n      });\n      setConditions([...response.conditions]);\n\n      setFields([...fieldsTmp]);\n    }\n  };\n  console.log('formik',formik.errors)\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      {pending && <FullscreenLoading />}\n      <div>\n        <DropDown\n          className=\"group\"\n          name={\"product\"}\n          label={t(\"selectedProduct\")}\n          options={products?.map((product: Product, index: number) => ({\n            label: <p>{product.name}</p>,\n            value: product.id || 0,\n            key: product.id || index,\n          }))}\n          placeholder={t(\"pleaseSelectProduct\")}\n          disabled={true}\n          formik={{\n            values: {\n              product: selectedOrder.product_id,\n            },\n            handleChange: (e: any) => {\n              // e.preventDefault();\n            },\n          }}\n        />\n        <div>\n          {fields &&\n            formik &&\n            formik?.values &&\n            Object.keys(formik?.values).length > 0 &&\n            fields.map((element: any, index: number) => {\n              const cond = conditions.find(\n                (x) => x.relational_form_field_id == element.id\n              );\n              let showItem = true;\n              if (cond) {\n                //check conditions\n                const mainField = fields.find(\n                  (x) => x.id == cond.form_field_id\n                );\n                let opt;\n                if (mainField) {\n                  if (mainField.basic_data_id) {\n                    opt = mainField?.basicDataItems?.find(\n                      (x) => x.server_id == cond.form_field_option_id\n                    );\n                  } else {\n                    opt = mainField?.options?.find(\n                      (x) => x.server_id == cond.form_field_option_id\n                    );\n                  }\n                }\n                if (mainField && opt) {\n                  if (cond.operation == 1) {\n                    if (\n                      formik.values[mainField.name] === opt.value ||\n                      formik.values[mainField.name]?.indexOf(opt.value) > -1\n                    ) {\n                      showItem = true;\n                    } else {\n                      showItem = false;\n                    }\n                  } else {\n                    if (\n                      !(\n                        formik.values[mainField.name] === opt.value ||\n                        formik.values[mainField.name]?.indexOf(opt.value) > -1\n                      )\n                    ) {\n                      showItem = true;\n                    } else {\n                      showItem = false;\n                    }\n                  }\n                }\n                // console.log(\"main\", mainField);\n              }\n\n              return showItem ? (\n                <div className=\"mt-[30px]\" key={index}>\n                  {renderElement(element, () => {}, formik)}\n                </div>\n              ) : (\n                <></>\n              );\n            })}\n        </div>\n        <div className=\"mt-[30px] mb-[50px]\">\n          <Button\n            icon={<Add />}\n            onClick={() => {\n              handleSubmitForm(true);\n            }}\n            bordered\n            text={t(\"addProductToOrder\")}\n          />\n        </div>\n\n        <div className=\"w-full flex items-center justify-between\">\n          <div className=\"w-[227px]\">\n            <Button\n              icon={<ArrowRight className=\"me-2\" />}\n              onClick={handleClearOrder}\n              gray\n              text={t(\"backToPrevStep\")}\n            />\n          </div>\n          <div className=\"w-[202px]\">\n            <Button\n              icon={<ArrowLeft className=\"ms-2\" />}\n              after\n              onClick={() => handleSubmitForm(false)}\n              text={t(\"saveAndContinue\")}\n            />\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\nexport default OrderCreateForm;\n","import transform from \"app/utils/transform\";\nimport { Button } from \"@mui/material\";\nimport { Add, Minus, Trash } from \"iconsax-react\";\nimport { useTranslation } from \"react-i18next\";\n\ntype ProductSidebarItemProps = {\n  item: any;\n  handleIncrease: () => void;\n  handleDecrease: () => void;\n};\n\nconst ProductSidebarItem = ({\n  item,\n  handleIncrease,\n  handleDecrease,\n}: ProductSidebarItemProps) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"flex border border-text-400 px-[14px] py-[7px] rounded-[8px] items-center justify-between mt-2\">\n      <div>\n        <p className=\"text-[14px] text-text-500\">{t(\"productName\")}</p>\n      </div>\n      <div>\n        <p>{item.product_name}</p>\n      </div>\n      <div className=\"bg-text-200 p-2 rounded-[8px] flex items-center justify-between w-[97px]\">\n        <Button\n          className=\"!w-6 !max-w-[24px] !min-w-[24px] !p-[2px] h-6\"\n          onClick={handleIncrease}\n        >\n          <Add className=\"text-primary-main\" />\n        </Button>\n        <p className=\"pointer-events-none select-none text-[16px] text-primary-main\">\n          {transform.toPersianDigits(item.count)}\n        </p>\n        <Button\n          className=\"!w-6 !max-w-[24px] !min-w-[24px] !p-[2px] h-6\"\n          onClick={handleDecrease}\n        >\n          {item.count == 1 ? (\n            <Trash className=\"text-error-primary\" />\n          ) : (\n            <Minus className=\"text-primary-main\" />\n          )}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductSidebarItem;\n","import { useTranslation } from \"react-i18next\";\nimport ProductSidebarItem from \"./ProductSidebarItem\";\nimport { useEffect, useState } from \"react\";\nimport transform from \"app/utils/transform\";\nimport Button from \"../button/Button\";\nimport DropDown from \"../form/Dropdown\";\nimport { useAppDispatch, useAppSelector } from \"app/redux/hooks\";\nimport { getCustomersList } from \"app/redux/users/actions\";\n\ntype AddOrderSidebarProps = {\n  orders: any[];\n  handleEditOrder: (order: any) => void;\n  handleSubmitForm: (selectedCustomer?: string) => void;\n};\n\nconst AddOrderSidebar = ({\n  orders,\n  handleEditOrder,\n  handleSubmitForm,\n}: AddOrderSidebarProps) => {\n  console.log(\"orders\", orders);\n  const { t } = useTranslation();\n  const [total, setTotal] = useState(0);\n  const customers = useAppSelector((state) => state.users.customers);\n  const Dispatch = useAppDispatch();\n  const [selectedCustomer, setSelectedCustomer] = useState<string>();\n  useEffect(() => {\n    !customers &&transform.checkPermission(\"add-order-as-another\") && Dispatch(getCustomersList());\n  }, []);\n  useEffect(() => {\n    let tmp = 0;\n    orders?.map((item) => {\n      tmp = tmp + item.count;\n    });\n    setTotal(tmp);\n  }, [orders]);\n  const handleIncrease = (item: any) => {\n    handleEditOrder({\n      ...item,\n      count: item.count + 1,\n    });\n  };\n  const handleDecrease = (item: any) => {\n    handleEditOrder({\n      ...item,\n      count: item.count > 0 ? item.count - 1 : 0,\n    });\n  };\n  return (\n    <div>\n      <div>\n        {transform.checkPermission(\"add-order-as-another\") && (\n          <div className=\"flex rounded-[8px] items-center justify-between mb-5\">\n            <DropDown\n              className=\"group\"\n              name={\"customers\"}\n              label={t(\"customer\")}\n              options={customers?.map((item) => ({\n                label: (\n                  <p>{`${item.code} - ${\n                    item.user.name\n                      ? item.user.name + \" \" + item.user.last_name\n                      : item.user.mobile\n                  }`}</p>\n                ),\n                value: item.code,\n              }))}\n              placeholder={t(\"pleaseSelectCustomer\")}\n              formik={{\n                handleChange: (e: any) => {\n                  setSelectedCustomer(e.target.value);\n                },\n              }}\n            />\n          </div>\n        )}\n      </div>\n\n      <div className=\"flex items-center justify-between text-primary-main font-bold mb-[29px]\">\n        <p>{t(\"productsOfThisOrder\")}</p>\n        <p>\n          {transform.toPersianDigits(total)} {t(\"product\")}\n        </p>\n      </div>\n      {orders.map((item, index) => (\n        <ProductSidebarItem\n          item={item}\n          key={index}\n          handleIncrease={() => handleIncrease(item)}\n          handleDecrease={() => handleDecrease(item)}\n        />\n      ))}\n\n      <div className=\"mt-[32px]\">\n        <Button\n          after\n          onClick={() => handleSubmitForm(selectedCustomer)}\n          text={t(\"submitForm\")}\n        />\n      </div>\n    </div>\n  );\n};\nexport default AddOrderSidebar;\n","import Button from \"components/button/Button\";\nimport Breadcrumb from \"components/breadcrumb/Breadcrumb\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport SelectProduct from \"components/addOrder/SelectProduct\";\nimport { useAppDispatch, useAppSelector } from \"app/redux/hooks\";\nimport { productsList } from \"app/redux/products/actions\";\nimport { Product } from \"app/models/product\";\nimport OrderCreateForm from \"components/addOrder/OrderCreateForm\";\nimport AddOrderSidebar from \"components/addOrder/AddOrderSidebar\";\nimport formService from \"app/redux/forms/service\";\nimport orderService from \"app/redux/orders/service\";\nimport FullscreenLoading from \"components/loading/FullscreenLoading\";\nimport { useTranslation } from \"react-i18next\";\n\nexport type selectedOrderType = {\n  product_id: number;\n  saved?: boolean;\n};\nconst AddOrder = () => {\n  const Navigate = useNavigate();\n  const {t} = useTranslation()\n  const [pending, setPending] = useState(false);\n  const user = JSON.parse(localStorage.getItem(\"nipa_user\") || \"\");\n  const [orders, setOrders] = useState<any[]>([]);\n  const [selectedOrder, setSelectedOrder] =\n    useState<selectedOrderType | null>();\n  const products = useAppSelector((state) => state.products.products);\n  const Dispatch = useAppDispatch();\n  useEffect(() => {\n    Dispatch(productsList());\n  }, []);\n  const handleSelectProduct = (product_id: number) => {\n    const prod = products?.find((x: any) => x.id == product_id);\n    console.log(\"prod\", prod);\n    if (prod?.custom == 0) {\n      let tmp = {\n        product_id: product_id,\n        product_name: prod.name,\n        saved: true,\n        values: null,\n        form_id: null,\n        custom: 0,\n        id: Math.floor(Math.random() * 10000),\n        count: 1,\n      };\n      setOrders([...orders, { ...tmp }]);\n      setSelectedOrder(null);\n    } else {\n      setSelectedOrder({\n        product_id: product_id,\n        saved: false,\n      });\n    }\n  };\n  const handleClearOrder = () => {\n    setSelectedOrder(null);\n  };\n  const handleAddOrder = (\n    product: Product,\n    values: any,\n    addAnother: boolean\n  ) => {\n    let tmp = {\n      product_id: product.id,\n      product_name: product.name,\n      saved: true,\n      values: values,\n      form_id: product.initialFormId,\n      id: Math.floor(Math.random() * 10000),\n      count: 1,\n      custom: 0,\n    };\n    // if (addAnother) {\n      setOrders([...orders, { ...tmp }]);\n      setSelectedOrder(null);\n    // }\n  };\n  const handleEditOrder = (item: any) => {\n    console.log(\"order\", item);\n    const index = orders.findIndex((x) => x.id == item.id);\n    if (index > -1) {\n      let tmp = [...orders];\n      if (item.count <= 0) {\n        tmp.splice(index, 1);\n      } else {\n        tmp[index] = { ...item };\n      }\n      setOrders([...tmp]);\n    }\n  };\n  const handleSubmitForm = async (selectedCustomer?: string) => {\n    setPending(true);\n    const customerCode = selectedCustomer\n      ? selectedCustomer\n      : user.customer?.code;\n    console.log(\"all neede data\", customerCode, orders);\n\n    const requestObject = {\n      customer_code: customerCode,\n      orders: orders.map((order) => {\n        return {\n          count: order.count,\n          product_id: order.product_id,\n          form_id: order.form_id || null,\n          data: order.form_id ? order.values : null,\n        };\n      }),\n    };\n    console.log(\"requestObject\", requestObject);\n\n    const response = await orderService.createOrder(requestObject);\n    console.log(\"response\", response);\n    // const orderGroup = await orderService.createOrderGroup(customerCode);\n    // //create orders\n    // orders.map(async (order, index) => {\n    //   const savedOrder = await orderService.createOrder(\n    //     orderGroup.id,\n    //     order.product_id,\n    //     order.count || 1,\n    //     user.name ? user.name + \" \" + user.last_name : user.mobile\n    //   );\n    //   console.log(\"savedOrder\", savedOrder);\n    //   //save form of each order if custom\n    //   if (order.form_id) {\n    //     const savedForm = await formService.addUserAnswer(\n    //       savedOrder.id,\n    //       order.form_id,\n    //       order.values\n    //     );\n    //   }\n    // });\n    setPending(false);\n    await Navigate(\"/orders\");\n    //TODO:update order group if needed\n  };\n  return (\n    <div className=\"w-full h-full\">\n      {pending && <FullscreenLoading />}\n\n      <Breadcrumb\n        title={t(\"createNewOrder\")}\n        handleBack={() => Navigate(\"/orders\")}\n      />\n      <div className={`w-full flex gap-x-[20px]`}>\n        <div\n          className={`${\n            orders.length > 0 ? \"w-[calc(100%-340px)]\" : \"w-full\"\n          } bg-white border border-text-300 h-min rounded-[6px] px-[20px] py-[24px]`}\n        >\n          {!selectedOrder?.product_id ? (\n            <SelectProduct\n              products={products?.filter(\n                (x: Product) =>\n                  (x.initialFormId || x.custom === 0) && x.status === 1\n              )}\n              handleSelectProduct={handleSelectProduct}\n            />\n          ) : (\n            <OrderCreateForm\n              handleSaveOrder={handleAddOrder}\n              products={products?.filter(\n                (x: Product) =>\n                  (x.initialFormId || x.custom === 0) && x.status === 1\n              )}\n              handleClearOrder={handleClearOrder}\n              selectedOrder={selectedOrder}\n            />\n          )}\n        </div>\n        {orders.length > 0 && (\n          <div className=\"w-[320px] h-min bg-white border border-text-300 rounded-[6px] px-[16px] py-[18px]\">\n            <AddOrderSidebar\n              handleSubmitForm={handleSubmitForm}\n              orders={orders}\n              handleEditOrder={handleEditOrder}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default AddOrder;\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","Api","get","response","data","orderId","selectedCustomer","post","customer_code","request","stepId","ordersList","createOrder","createOrderGroup","orderGroupsList","orderDetail","getCompleteInfo","getStepInfo","productActions","productSlice","productsList","dispatch","getState","productService","productStepsList","code","getProductStepInfo","id","productStepInfo","saveProduct","product","updateProduct","productId","setSaveSuccess","success","deleteProduct","setDeleteSuccess","roles","join","name","custom","price","count_type","status","description","images","map","image","hashCode","put","delete","step_id","field_id","fieldId","option_id","optionId","next_step_id","nextStepId","setProductStepRoles","addProductConditions","getProduct","credentials","mobile","console","log","otp","sendOtp","confirmOtp","getRolesList","getUserInfo","getCustomersList","userActions","userSlice","setUserMobile","setUserLogin","userLogin","userService","customers","logout","products","handleSelectProduct","t","useTranslation","className","label","options","value","placeholder","formik","handleChange","e","target","selectedOrder","handleClearOrder","handleSaveOrder","useState","setForm","fields","setFields","conditions","setConditions","pending","setPending","addAnother","setAddAnother","selectedProduct","find","x","product_id","useEffect","loadForm","validationSchema","setValidationSchema","initialValues","setInitialValues","useFormik","enableReinitialize","onSubmit","values","renderFormInitialValues","Yup","shape","renderFormValidation","handleSubmitForm","handleSubmit","initialFormId","formService","fieldsTmp","item","tmp","key","type","typeId","required","fromRelatedFields","form","basic_data_id","basic_data","basicDataItems","opt","server_id","option","onlyImage","JSON","parse","validation","noBadge","push","errors","FullscreenLoading","index","disabled","Object","keys","length","element","cond","relational_form_field_id","showItem","mainField","form_field_id","form_field_option_id","operation","indexOf","renderElement","Button","icon","Add","onClick","bordered","text","ArrowRight","gray","ArrowLeft","after","handleIncrease","handleDecrease","product_name","transform","count","Trash","Minus","orders","handleEditOrder","total","setTotal","state","users","Dispatch","setSelectedCustomer","user","last_name","Navigate","useNavigate","localStorage","getItem","setOrders","setSelectedOrder","customerCode","customer","requestObject","order","form_id","orderService","Breadcrumb","title","handleBack","saved","Math","floor","random","filter","prod","findIndex","splice"],"sourceRoot":""}