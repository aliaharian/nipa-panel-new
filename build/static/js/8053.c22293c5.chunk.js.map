{"version":3,"file":"static/js/8053.c22293c5.chunk.js","mappings":"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","sources":["app/redux/hooks.ts","app/redux/products/actions.ts","app/redux/products/service.ts","components/form/TextArea.tsx","components/imageManager/ImageThumbnail.tsx","components/imageManager/ImageFullscreen.tsx","components/form/UploadGroup.tsx","components/menu/IconMenu.tsx","components/popup/DeletePopup.tsx","components/popup/Popup.tsx","components/sideDialog/SideDialog.tsx","components/skeleton/TableSkeleton.tsx","components/table/Table.tsx","components/button/MenuButton.tsx","components/table/TableAction.tsx","components/products/AddProductDialog.tsx","pages/products/index.tsx"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { AnyAction, ThunkAction } from \"@reduxjs/toolkit\";\nimport productService from \"./service\";\nimport { RootState } from \"app/redux/store\";\nimport productSlice from \"./slice\";\nimport { Product } from \"app/models/product\";\n\nconst productActions = productSlice.actions;\n\nexport const productsList = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  AnyAction\n> => {\n  return async (dispatch, getState) => {\n    const response = await productService.productsList();\n    dispatch(productActions.productsList(response));\n  };\n};\n\nexport const productStepsList = (\n  code: string\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    const response = await productService.productStepsList(code);\n    dispatch(productActions.productStepsList(response));\n  };\n};\nexport const getProductStepInfo = (\n  id: number\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    if (id === 0) return dispatch(productActions.productStepInfo(null));\n    const response = await productService.productStepInfo(id);\n    dispatch(productActions.productStepInfo(response));\n  };\n};\n\nexport const saveProduct = (\n  product: Product\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    const response = await productService.saveProduct(product);\n    dispatch(productActions.saveProduct(response));\n  };\n};\nexport const updateProduct = (\n  productId: number,\n  product: Product\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    const response = await productService.updateProduct(productId, product);\n    dispatch(productActions.updateProduct(response));\n    dispatch(productsList());\n  };\n};\n\nexport const setSaveSuccess = (\n  success: boolean\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    dispatch(productActions.setSaveSuccess(success));\n  };\n};\n\n//delete product\nexport const deleteProduct = (\n  id: number\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    const response = await productService.deleteProduct(id);\n    dispatch(productActions.deleteProduct(response));\n  };\n};\n\nexport const setDeleteSuccess = (\n  success: boolean\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    dispatch(productActions.setDeleteSuccess(success));\n  };\n};\n","/* eslint-disable import/no-anonymous-default-export */\n\nimport { Product } from \"app/models/product\";\nimport Api from \"../../../app/service/Api\";\n\nasync function productsList() {\n  let response = await Api()?.get(\"/products\");\n  return response?.data;\n}\nasync function productStepsList(code: string) {\n  let response = await Api()?.get(`/product/${code}/steps`);\n  return response?.data;\n}\nasync function productStepInfo(id: number) {\n  let response = await Api()?.get(`/productSteps/${id}`);\n  return response?.data;\n}\nasync function setProductStepRoles(id: number, roles: number[]) {\n  let response = await Api()?.post(`/product/steps/${id}/setRoles`, {\n    //array to string by ,\n    roles: roles.join(\",\"),\n  });\n  return response?.data;\n}\nasync function saveProduct(product: Product) {\n  let response = await Api()?.post(\"/products\", {\n    name: product.name,\n    code: product.code,\n    custom: product.custom,\n    price: product.price,\n    count_type: product.count_type,\n    status: product.status,\n    description: product.description,\n    images:\n      //array of image hash codes\n      product.images?.map((image) => image.hashCode),\n  });\n  return response?.data;\n}\n\nasync function updateProduct(id: number, product: Product) {\n  let response = await Api()?.put(`/products/${id}`, {\n    name: product.name,\n    code: product.code,\n    custom: product.custom,\n    count_type: product.count_type,\n    price: product.price,\n    status: product.status,\n    description: product.description,\n    images:\n      //array of image hash codes\n      product.images?.map((image) => image.hashCode),\n  });\n  return response?.data;\n}\n//delete product\nasync function deleteProduct(id: number) {\n  let response = await Api()?.delete(`/products/${id}`);\n  return response?.data;\n}\n//get product\nasync function getProduct(id: number) {\n  let response = await Api()?.get(`/products/${id}`);\n  return response?.data;\n}\n//add product condition\nasync function addProductConditions(data: any) {\n  let response = await Api()?.post(`/product/steps/conditions`, {\n    step_id: data.stepId,\n    field_id: data.fieldId,\n    option_id: data.optionId,\n    next_step_id: data.nextStepId,\n  });\n  return response?.data;\n}\n\nexport default {\n  productsList,\n  saveProduct,\n  deleteProduct,\n  productStepsList,\n  productStepInfo,\n  setProductStepRoles,\n  addProductConditions,\n  getProduct,\n  updateProduct,\n};\n","import { useRef } from \"react\";\nimport { Editor } from \"@tinymce/tinymce-react\";\ntype textAreaProps = {\n  name: string;\n  label: string;\n  formik: any;\n  inputActions?: any;\n  className?: string;\n};\nconst TextArea = ({\n  name,\n  label,\n  formik,\n  className,\n  inputActions,\n}: textAreaProps) => {\n  // console.log(\"formik.errors?.[name]\", formik.values[name]);\n  const handleChangeText = (text:string)=>{\n    formik.handleChange({\n      target: {\n        name,\n        value: text,\n        // value: e.target.value.replace(/ /g, \"\"),\n      },\n    });\n  }\n  const editorRef = useRef<any>(null);\n  return (\n    <div\n      className={`flex flex-col w-full items-start justify-start ${className}`}\n    >\n      <div className=\"text-sm mb-2 flex justify-between w-full\">\n        <label htmlFor={name}>{label}</label>\n        {inputActions?.()}\n      </div>\n\n      <Editor\n        onInit={(evt, editor) => (editorRef.current = editor)}\n        // initialValue={formik.values?.[name] || \"\"}\n        id={name}\n        value={formik.values?.[name]}\n        onEditorChange={handleChangeText}\n        apiKey=\"ajj87dt2tkk9iay286x5uxdjdb685g4spq516y5lacgqlerz\"\n        init={{\n          height: 150,\n          width: \"100%\",\n          menubar: false,\n          // plugins: [\n          //   \"advlist autolink lists link image charmap print preview anchor\",\n          //   \"code fullscreen\",\n          //   \"media table paste code\",\n          // ],\n          toolbar:\n            \"undo redo | formatselect | \" +\n            \"bold italic backcolor | alignleft aligncenter \" +\n            \"alignright alignjustify | bullist numlist outdent indent | \" +\n            \"removeformat\",\n          content_style:\n            \"body { font-family:Helvetica,Arial,sans-serif; font-size:14px }\",\n        }}\n      />\n\n      {formik.errors?.[name] && formik.touched?.[name] && (\n        <p className=\"text-error-primary text-[10px] mt-1\">\n          {formik.errors?.[name]}\n        </p>\n      )}\n    </div>\n  );\n};\nexport default TextArea;\n","import { fileToUrl } from \"@/app/utils/transform\";\nimport { Document, MaximizeCircle, Trash } from \"iconsax-react\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport transform from \"app/utils/transform\";\nimport { CircularProgress } from \"@mui/material\";\ntype ImageThumbnailProps = {\n  src?: any;\n  badge?: string;\n  handleDelete?: () => void;\n  handleFullscreen?: () => void;\n  handleViewImage?: () => void;\n  hashCode?: string;\n};\nconst ImageThumbnail = ({\n  src,\n  badge,\n  handleDelete,\n  handleFullscreen,\n  handleViewImage,\n  hashCode,\n}: ImageThumbnailProps) => {\n  const [url, setUrl] = useState<any>();\n  const [isImage, setIsImage] = useState<Boolean>(false);\n  const { t } = useTranslation([\"common\", \"validations\"]);\n\n  useEffect(() => {\n    if (src.hash_code) {\n      const base = (process.env.REACT_APP_BASE_URL || \"\") + (process.env.REACT_APP_IMAGE_URL || \"\")\n      setUrl(base + src.hash_code);\n    } else {\n      transform.fileToUrl(src).then((url) => {\n        setUrl(url);\n      });\n    }\n  }, []);\n  useEffect(() => {\n\n    setIsImage(src?.type?.search(\"image\") > -1 ? true : false);\n  }, [src]);\n\n  return (\n    <div className=\"group/item w-full h-full rounded-[6px] overflow-hidden relative\">\n      <div className=\"w-full h-full relative\">\n        {badge && isImage && (\n          <p className=\"right-[8px] top-[8px] text-[10px] inline-block absolute py-[5px] px-[8px] bg-secondary-500 text-white rounded-[4px]\">\n            {badge}\n          </p>\n        )}\n        {isImage ? (\n          <img\n            src={url}\n            alt=\"\"\n            className=\"w-full h-full object-cover rounded-[6px]\"\n          />\n        ) : (\n          <div className=\"w-full h-full flex items-center justify-center flex-col text-primary-main\">\n            <Document className=\"w-8 h-8\" />\n            <p className=\"mt-2\">{src.name}</p>\n          </div>\n        )}\n        {/* //overlay */}\n        <div\n          className={`absolute top-0 left-0 bg-black-60 w-full h-full flex grid grid-rows-3 ${hashCode ? \"opacity-0\" : \"opacity-100\"\n            } pointer-events-none group-hover/item:opacity-100 group-hover/item:pointer-events-auto transition-all`}\n        >\n          <div></div>\n          <div>\n            {hashCode ? (\n              handleViewImage && (\n                <p\n                  onClick={handleViewImage}\n                  className=\"cursor-pointer text-[10px] inline-block py-[5px] px-[8px] bg-secondary-500 text-white rounded-[4px]\"\n                >\n                  {isImage ? t(\"viewImage\") : t(\"viewFile\")}\n                </p>\n              )\n            ) : (\n              <CircularProgress />\n            )}\n          </div>\n          <div className=\"w-full flex items-center justify-between px-[10px] py-[12px] text-white\">\n            {hashCode && handleFullscreen && (\n              <div className=\"cursor-pointer\" onClick={handleFullscreen}>\n                {isImage && <MaximizeCircle />}\n              </div>\n            )}\n            {hashCode && handleDelete && (\n              <div className=\"cursor-pointer\" onClick={handleDelete}>\n                <Trash />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default ImageThumbnail;\n","import { CloseCircle } from \"iconsax-react\";\nimport ReactDOM from \"react-dom\";\n\nconst ImageFullscreen = ({ url }: any) => {\n  const handleClose = () => {\n    document.body.removeChild(\n      document.getElementById(\"image-fullscreen\") as HTMLElement\n    );\n  };\n  return (\n    <div\n      id=\"image-fullscreen\"\n      className=\"fixed w-[100vw] h-[100vh] bg-black-90 flex flex-col items-center justify-center left-0 top-0 z-[999]\"\n    >\n      <div className=\"w-full h-[60px] px-16 pt-8 flex items-center text-white\">\n        <CloseCircle\n          onClick={handleClose}\n          className=\"w-[40px] h-[40px] cursor-pointer\"\n        />\n      </div>\n      <div className=\"w-full h-[calc(100%-60px)] flex items-center justify-center pb-10\">\n        <img\n          src={url}\n          className=\"w-full max-w-[70vw] h-full object-contain\"\n          alt=\"\"\n        />\n      </div>\n    </div>\n  );\n};\nexport default ImageFullscreen;\n","import { Dispatch, SetStateAction, useEffect, useRef, useState } from \"react\";\nimport UploadFile from \"./UploadFile\";\nimport ImageThumbnail from \"../imageManager/ImageThumbnail\";\nimport { useTranslation } from \"react-i18next\";\nimport ImageFullscreen from \"../imageManager/ImageFullscreen\";\nimport ReactDOM from \"react-dom/client\";\nimport transform from \"app/utils/transform\";\nimport Api from \"app/service/Api\";\nimport SnackbarUtils from \"app/utils/SnackbarUtils\";\n\ntype UploadGroupProps = {\n  name: string;\n  label: string;\n  placeholder?: string | null;\n  formik: any;\n  className?: string;\n  imageOnly?: boolean;\n  setPending?: Dispatch<SetStateAction<boolean>>;\n  mock?: boolean;\n  noBadge?: boolean;\n};\n\nconst UploadGroup = ({\n  name,\n  label,\n  formik,\n  placeholder,\n  className,\n  imageOnly,\n  setPending,\n  mock,\n  noBadge,\n}: UploadGroupProps) => {\n  const { t } = useTranslation([\"common\", \"validations\"]);\n  const fileRef = useRef<HTMLInputElement>(null);\n  const [files, setFiles] = useState<any>([]);\n  const [uploading, setUploading] = useState(false);\n  const handleUploadFile = async (e: any) => {\n    const newFiles = [...files];\n    const newName = name + \"_\" + Math.floor(Math.random() * 100);\n    newFiles.push({\n      name: newName,\n      value: e.target.value,\n      hashCode: null,\n    });\n    setFiles([...newFiles]);\n\n    setUploading(true);\n    //upload file\n    uploadFile(e.target.value, newName, newFiles);\n  };\n  const uploadFile = async (file: File, name: string, allFiles: any[]) => {\n    //do upload\n    var formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      let response = await Api()?.post(\"/files\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n\n      if (response?.data?.file?.hash_code) {\n        const newFiles = [...allFiles];\n        const foundIndex = newFiles.findIndex((x: any) => x.name === name);\n        if (foundIndex !== -1) {\n          newFiles[foundIndex] = {\n            ...newFiles[foundIndex],\n            hashCode: response.data.file.hash_code,\n          };\n          setFiles([...newFiles]);\n        }\n      }\n      setUploading(false);\n    } catch (e) {\n      //remove image from array\n      const newFiles = [...allFiles];\n      const foundIndex = newFiles.findIndex((x: any) => x.name === name);\n      if (foundIndex !== -1) {\n        newFiles.splice(foundIndex, 1);\n        setFiles([...newFiles]);\n      }\n      //snackbar\n      SnackbarUtils.error(t(\"validations:uploadError\"));\n      setUploading(false);\n    }\n  };\n\n  const handleDeleteFile = async (file: any, index: number) => {\n    //remove index from files\n\n    let newFiles = [...files];\n    try {\n      let response = await Api()?.delete(`/files/${file.hashCode}`);\n      newFiles.splice(index, 1);\n      setFiles([...newFiles]);\n\n      SnackbarUtils.success(t(\"validations:imageDeleteSuccess\"));\n    } catch (e) {\n      SnackbarUtils.error(t(\"validations:imageDeleteError\"));\n    }\n  };\n  const handleFullscreen = (file: any) => {\n    //check type to verify this file is an image\n\n    if (transform.imageValidExtensions.includes(file.type)) {\n      transform.fileToUrl(file).then((url) => {\n        const rootElement = document.createElement(\"div\");\n        rootElement.setAttribute(\"id\", \"image-fullscreen\");\n        document.body.appendChild(rootElement);\n        ReactDOM.createRoot(rootElement).render(<ImageFullscreen url={url} />);\n      });\n    }\n  };\n  const handleViewImage = (file: any) => {\n    //open file object in new tab\n    // if (transform.imageValidExtensions.includes(file.type)) {\n    const blob = transform.fileToBlob(file);\n    const blobUrl = URL.createObjectURL(blob);\n    window.open(blobUrl, \"_blank\");\n    // }\n  };\n\n  useEffect(() => {\n    //formik change listener\n    formik.setFieldValue(name, files);\n  }, [files]);\n  // useEffect(() => {\n\n  //   //formik change listener\n  if (formik.values?.[name]?.length > 0 && files.length == 0) {\n    setFiles(formik.values?.[name] || []);\n  }\n  // }, [formik]);\n\n  useEffect(() => {\n    if (setPending) {\n      setPending(uploading);\n    }\n  }, [uploading]);\n\n  return (\n    <div\n      className={`flex flex-col w-full items-start justify-start ${className}`}\n    >\n      <div className=\"text-sm mb-2 flex justify-between w-full\">\n        <label className=\"font-normal\" htmlFor={name}>\n          {label}\n        </label>\n      </div>\n\n      <div className=\"bg-text-300 w-full p-[14px] grid grid-cols-5 gap-x-5 gap-y-5\">\n        {files.length < 5 && (\n          <div className=\"bg-white w-full h-min rounded-[6px]\">\n            <UploadFile\n              disabled={uploading}\n              name={\"uploadFile\"}\n              imageOnly={imageOnly}\n              fileRef={fileRef}\n              placeholder={\n                uploading ? t(\"pleaseWait\") || \"\" : placeholder || \"\"\n              }\n              formik={{\n                handleChange: (e: any) => {\n                  if (!mock) {\n                    handleUploadFile(e);\n                    if (fileRef.current) fileRef.current.value = \"\";\n                  }\n                },\n              }}\n            />\n          </div>\n        )}\n        {/* map all except last */}\n        {files.map((file: any, index: any) => {\n          return (\n            <div\n              key={index}\n              className=\"bg-white rounded-[6px] w-full h-[144px]\"\n            >\n              <ImageThumbnail\n                src={file?.value || file?.file}\n                hashCode={file.hashCode}\n                handleDelete={() => {\n                  handleDeleteFile(file, index);\n                }}\n                handleFullscreen={() => {\n                  handleFullscreen(file.value);\n                }}\n                handleViewImage={() => {\n                  handleViewImage(file.value);\n                }}\n                badge={index === 0 && !noBadge ? t(\"mainImage\") || \"\" : \"\"}\n              />\n            </div>\n          );\n        })}\n      </div>\n\n      {formik.errors?.[name] && formik.touched?.[name] && (\n        <p className=\"text-error-primary text-[10px] mt-1\">\n          {formik.errors?.[name]}\n        </p>\n      )}\n    </div>\n  );\n};\nexport default UploadGroup;\n","import * as React from \"react\";\n\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport { MenuItemProps } from \"../../app/models/menu\";\nimport { Dialog, Menu, useMediaQuery } from \"@mui/material\";\nimport transform from \"app/utils/transform\";\n\ntype IconMenuProps = {\n  items: MenuItemProps[];\n  open: boolean;\n  handleClose: () => void;\n  anchorEl: any;\n  profileInfo?: boolean;\n};\nexport default function IconMenu({\n  items,\n  open,\n  handleClose,\n  anchorEl,\n  profileInfo,\n}: IconMenuProps) {\n  const user = JSON.parse(localStorage.getItem(\"nipa_user\") || \"\");\n  const isMobile = useMediaQuery(\"(max-width:767px)\");\n  return isMobile ? (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      // className=\"bg-primary-main\"\n      fullWidth\n    >\n      hello\n    </Dialog>\n  ) : (\n    <Menu\n      id=\"demo-positioned-menu\"\n      aria-labelledby=\"demo-positioned-button\"\n      anchorEl={anchorEl}\n      open={open}\n      onClose={handleClose}\n      sx={{\n        \"& .MuiPaper-root\": {\n          width: profileInfo ? \"280px\" : \"190px\",\n          border: \"1px solid #e8e8e8\",\n          boxShadow: \"none\",\n          borderRadius: \"8px !important\",\n          marginTop: 1,\n        },\n      }}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"left\",\n      }}\n    >\n      {profileInfo && (\n        <MenuItem\n          sx={{\n            backgroundColor: \"white !important\",\n            padding: \"24px 25px\",\n            borderBottom: \"1px solid #ededed\",\n            \"&:hover\": {\n              backgroundColor: \"#fff !important\",\n            },\n            \"& span\": {\n              fontSize: \"14px !important\",\n              color: \"#000\",\n            },\n            \"& svg\": {\n              color: \"#7f7f7f !important\",\n            },\n          }}\n        >\n          <div className=\"flex w-full gap-x-[10px] items-center justify-start\">\n            <div className=\"bg-primary-main/40 border border-text-300 w-[53px] h-[53px] overflow-hidden rounded-full flex items-center justify-center\">\n              {user.avatar ? (\n                <img\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSfm8UnQUb93iMa_J1a9GuKRJ1LWIzTD8dxrA&usqp=CAU\"\n                  alt=\"avatar\"\n                  className=\"w-full h-full fit-cover rounded-full\"\n                />\n              ) : (\n                <p className=\"text-[20px] font-bold\">\n                  {user.name?.split(\"\")?.[0]?.toUpperCase()}\n                </p>\n              )}\n            </div>\n            <div>\n              <p className=\"text-text-800\">\n                {user.name} {user.last_name}\n              </p>\n              <p className=\"text-text-500 text-[14px] mt-1\">\n                {transform.toPersianDigits(user.mobile)}\n              </p>\n            </div>\n          </div>\n        </MenuItem>\n      )}\n      {items.map((item, index) => (\n        <MenuItem\n          disabled={item.disabled}\n          sx={{\n            padding: profileInfo ? \"12px 25px\" : \"6px 16px\",\n            \"&:hover\": {\n              backgroundColor: \"#e9edf3\",\n            },\n            \"& span\": {\n              fontSize: \"14px !important\",\n              color: \"#000\",\n            },\n            // \"& svg\": {\n            //   color: \"#7f7f7f !important\",\n            // },\n          }}\n          onClick={item.onClick}\n          key={index}\n        >\n          <ListItemIcon className={profileInfo ? \"svg:!text-text-700\" : \"\"}>\n            {item.icon}\n          </ListItemIcon>\n          <ListItemText className={profileInfo ? \"text-text-700\" : \"\"}>\n            {item.text}\n          </ListItemText>\n          {/* <Typography variant=\"body2\" color=\"text.secondary\">\n              ⌘X\n            </Typography> */}\n        </MenuItem>\n      ))}\n    </Menu>\n  );\n}\n","import React from \"react\";\nimport Popup from \"./Popup\";\nimport { Trash } from \"iconsax-react\";\nimport { useTranslation } from \"react-i18next\";\nimport Button from \"../button/Button\";\nimport { CircularProgress } from \"@mui/material\";\n\ntype PopupProps = {\n  open: boolean;\n  title?: string | null;\n  onClose: () => void;\n  handleConfirm: () => void;\n  loading?: boolean;\n};\nconst DeletePopup = ({\n  open,\n  onClose,\n  title,\n  handleConfirm,\n  loading,\n}: PopupProps) => {\n  const { t } = useTranslation([\"common\", \"validations\"]);\n  return (\n    <Popup open={open} onClose={onClose}>\n      <div className=\"w-14 h-14 mb-[10px] bg-primary-250 rounded-full items-center justify-center flex text-primary-main\">\n        <Trash variant=\"Bold\" />\n      </div>\n      <div>\n        <p className=\"text-center text-[16px] font-semibold mb-[35px]\">{title}</p>\n      </div>\n      <div className=\"flex items-center justify-between w-full max-w-[236px]\">\n        <div className=\"w-[102px]\">\n          <Button\n            disabled={loading}\n            text={\n              loading ? (\n                <CircularProgress color=\"inherit\" size={24} />\n              ) : (\n                t(\"yes\")\n              )\n            }\n            onClick={!loading ? handleConfirm : () => {}}\n          />\n        </div>\n        <div className=\"w-[102px]\">\n          <Button\n            disabled={loading}\n            text={t(\"no\")}\n            onClick={!loading ? onClose : () => {}}\n            bordered\n          />\n        </div>\n      </div>\n    </Popup>\n  );\n};\nexport default DeletePopup;\n","import { Dialog, DialogContent, Slide } from \"@mui/material\";\nimport { TransitionProps } from \"@mui/material/transitions\";\nimport React from \"react\";\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ntype PopupProps = {\n  open: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n};\nconst Popup = ({ open, onClose, children }: PopupProps) => {\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={onClose}\n      aria-describedby=\"alert-dialog-slide-description\"\n      //set width 452px\n      sx={{\n        \"& .MuiDialog-paper\": {\n          width: \"452px\",\n        },\n      }}\n    >\n      <DialogContent className=\"flex items-center justify-center flex-col\">{children}</DialogContent>\n    </Dialog>\n  );\n};\nexport default Popup;\n","import { Add, CloseCircle } from \"iconsax-react\";\nimport React, { useState } from \"react\";\n\ntype SideDialogProps = {\n  open: boolean;\n  handleClose?: () => void;\n  children?: any;\n  headerIcon?: any;\n  headerText?: string | null;\n};\n\nconst Content = ({ children }: any) => {\n  return <div className=\"h-[calc(100%-97px)] overflow-auto\">{children}</div>;\n};\n\nconst Footer = ({ children }: any) => {\n  return <div>{children}</div>;\n};\n\nconst SideDialog = ({\n  open,\n  handleClose,\n  children,\n  headerIcon,\n  headerText = \"\",\n}: SideDialogProps) => {\n  const [rand, setRand] = useState<number>(Math.floor(Math.random() * 1000));\n  const _handleClose = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    if ((event.target as HTMLInputElement).id === \"dialog\" + rand) {\n      handleClose?.();\n    }\n  };\n  return (\n    <div\n      id={`dialog${rand}`}\n      onClick={_handleClose}\n      className={`w-full h-full fixed bg-black-60 rtl:left-0 ltr:right-0 top-0 transition-all ${\n        !open\n          ? \"pointer-events-none opacity-0 z-0 delay-300\"\n          : \"opacity-1 z-[999] delay-200\"\n      }`}\n    >\n      <div\n        className={`h-full w-[60%] min-w-[900px] bg-white transition-all\t${\n          open ? \"translate-x-0 delay-300\" : \"ltr:-translate-x-[100%] rtl:translate-x-[100%] delay-200\"\n        }`}\n      >\n        {headerText && (\n          <div className=\"flex w-full px-8 py-6 items-center justify-between border-b border-text-300\">\n            <div className=\"flex items-center\">\n              <div className=\"me-3 w-9 h-9 rounded-[12px] bg-primary-main flex items-center justify-center text-white\">\n                {headerIcon}\n              </div>\n              <p className=\"text-[20px] leading-[20px] font-bold\">\n                {headerText}\n              </p>\n            </div>\n            <div className=\"w-9 h-9\">\n              <button onClick={handleClose} className=\"w-9 h-9\">\n                <CloseCircle className=\"w-9 h-9\" />\n              </button>\n            </div>\n          </div>\n        )}\n        <div className=\"flex justify-between w-full flex-col h-[calc(100%-85px)]\">\n          {React.Children.map(children, (child) => {\n            if (child.type === Content) {\n              return <Content>{child.props.children}</Content>;\n            } else if (child.type === Footer) {\n              return <Footer>{child.props.children}</Footer>;\n            }\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSideDialog.Content = Content;\nSideDialog.Footer = Footer;\n\nexport default SideDialog;\n","import { Skeleton } from \"@mui/material\";\n\nconst TableSkeleton = () => {\n  return (\n    <div className=\"grid\">\n      <div className=\"w-full h-[71px] bg-text-200 border border-text-300 rounded-t-[4px] grid grid-cols-6 items-center justify-center px-4\">\n        {Array.from(Array(5).keys()).map((item, index) => (\n          <Skeleton\n            variant=\"rounded\"\n            width={\"37px\"}\n            height={18}\n            key={index}\n            animation=\"wave\"\n          />\n        ))}\n      </div>\n\n      {Array.from(Array(5).keys()).map((item, index) => (\n        <div key={index} className=\"w-full h-[71px] border border-text-300 border-t-0 rounded-t-[4px] grid grid-cols-6 items-center justify-center px-4\">\n          {Array.from(Array(5).keys()).map((item, index) => (\n            <Skeleton\n              variant=\"rounded\"\n              width={\"45px\"}\n              height={18}\n              key={index}\n              animation=\"wave\"\n            />\n          ))}\n          <div className=\"w-[120px] flex items-cente justify-center\">\n            <div className=\"w-[92px] h-[38px] rounded-full border border-text-400 flex items-center justify-center\">\n              <Skeleton\n                variant=\"rounded\"\n                width={\"47px\"}\n                height={14}\n                animation=\"wave\"\n              />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default TableSkeleton;\n","import DataTable, { Direction } from \"react-data-table-component\";\nimport { useTranslation } from \"react-i18next\";\n\ntype TableProps = {\n  columns: any;\n  data: any;\n}\nconst Table = ({ columns, data }: TableProps) => {\n  const { i18n } = useTranslation();\n  const conditionalRowStyles = [\n    {\n      when: (row: any) => row.id === \"footer\",\n      style: {\n        backgroundColor: \"rgba(247, 247, 247, 1)\",\n        borderTop: \"2px solid #EDEDED\",\n        '&:hover': {\n          cursor: 'pointer',\n        },\n      },\n    },\n\n  ];\n  return (\n    <DataTable\n      direction={\n        i18n.dir() === \"ltr\" ? Direction.LTR :\n          Direction.RTL\n      }\n      columns={columns}\n      data={data}\n      className=\"customTable\"\n      conditionalRowStyles={conditionalRowStyles}\n    />\n  );\n};\nexport default Table;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ntype ButtonProps = {\n  text: string;\n  onClick?: () => void;\n  icon?: any;\n  after?: boolean;\n  ref?: any;\n  simple?:boolean;\n};\nconst MenuButton = ({ text, onClick, icon, after,ref,simple=false }: ButtonProps) => {\n  const handleIcon = () => {\n    if (icon) {\n      return <div className=\"inline-block text-text-600\">{icon}</div>;\n    } else {\n      return <></>;\n    }\n  };\n  return (\n    <button\n      ref={ref}\n      className={`${!simple?\"border border-text-400\":\"\"} bg-transparent rounded-full text-text-900 w-full h-[38px] flex ltr:flex-row-reverse items-center justify-center hover:bg-text-4`}\n      onClick={onClick}\n    >\n      {!after && handleIcon()}\n      {!simple && text}\n      {after && handleIcon()}\n    </button>\n  );\n};\nexport default MenuButton;\n","import { Edit, Eye, More, Trash } from \"iconsax-react\";\nimport { useRef, useState } from \"react\";\nimport MenuButton from \"../button/MenuButton\";\nimport IconMenu from \"../menu/IconMenu\";\nimport { useTranslation } from \"react-i18next\";\n\ntype TableActionProps = {\n  row: any;\n  handleAction?: (row: any, action: string) => void;\n  items: any[];\n  simple?:boolean;\n};\n\nconst TableAction = ({ row, handleAction, items,simple=false }: TableActionProps) => {\n  const anchorRef = useRef(null);\n  const {t} = useTranslation();\n  const [open, setOpen] = useState(false);\n  const _handleAction = (row: any, action: string) => {\n    setOpen(false);\n    if (handleAction) {\n      handleAction(row, action);\n    }\n  };\n\n  return (\n    <>\n      <div className={`${simple?\"w-[20px]\":\"w-[92px] pb-[5px]\"}`} ref={anchorRef}>\n        <MenuButton\n          after\n          icon={<More className=\"rotate-90 pt-[5px]\" />}\n          text={t(\"action\")}\n          simple={simple}\n          onClick={() => {\n            console.log(row);\n            setOpen(true);\n          }}\n        />\n\n        <IconMenu\n          anchorEl={anchorRef.current}\n          open={open}\n          handleClose={() => {\n            setOpen(false);\n          }}\n          items={items.map((item: any) => {\n            return {\n              ...item,\n              onClick: () => _handleAction(row, item.name),\n            };\n          })}\n        />\n      </div>\n    </>\n  );\n};\n\n\nexport default TableAction;\n","import { Add, Edit2 } from \"iconsax-react\";\nimport SideDialog from \"../sideDialog/SideDialog\";\nimport TextField from \"../form/TextField\";\nimport { useFormik } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport Button from \"../button/Button\";\nimport DropDown from \"../form/Dropdown\";\nimport UploadGroup from \"../form/UploadGroup\";\nimport TextArea from \"../form/TextArea\";\nimport * as Yup from \"yup\";\nimport { Image, Product } from \"app/models/product\";\nimport {\n  saveProduct,\n  setSaveSuccess,\n  updateProduct,\n} from \"app/redux/products/actions\";\nimport { useAppDispatch, useAppSelector } from \"app/redux/hooks\";\nimport { useEffect, useState } from \"react\";\nimport SnackbarUtils from \"app/utils/SnackbarUtils\";\nimport productService from \"app/redux/products/service\";\nimport FullscreenLoading from \"../loading/FullscreenLoading\";\n\ntype OrderFiltersDialogProps = {\n  open: boolean;\n  handleClose?: () => void;\n  selectedProductId?: number;\n};\n\ntype initialValues = {\n  code: string;\n  name: string;\n  status: number | boolean;\n  custom: number | boolean;\n  description: string;\n  price: string;\n  count_type: string;\n  images: Image[];\n};\n\nconst AddProductDialog = ({\n  open,\n  handleClose,\n  selectedProductId,\n}: OrderFiltersDialogProps) => {\n  const { t } = useTranslation([\"common\", \"validations\"]);\n  const Dispatch = useAppDispatch();\n  const saveSuccess = useAppSelector(\n    (state: any) => state.products.saveSuccess\n  );\n  const [selectedProduct, setSelectedProduct] = useState<Product>();\n  useEffect(() => {\n    async function getProductInfo() {\n      if (selectedProductId) {\n        const resp = await productService.getProduct(selectedProductId);\n        setSelectedProduct(resp);\n      }\n    }\n\n    getProductInfo();\n  }, [selectedProductId]);\n\n  const [submitdisabled, setSubmitDisabled] = useState<boolean>(false);\n  const validationSchema = Yup.object().shape({\n    code: Yup.string().required(\n      t(\"productCode.required\", { ns: \"validations\" }) || \"\"\n    ),\n    name: Yup.string().required(\n      t(\"productName.required\", { ns: \"validations\" }) || \"\"\n    ),\n    description: Yup.string().required(\n      t(\"productDescription.required\", { ns: \"validations\" }) || \"\"\n    ),\n    //countType\n    count_type: Yup.string().required(\n      t(\"countType.required\", { ns: \"validations\" }) || \"\"\n    ),\n    price: Yup.string().when(\"custom\", {\n      is: 0,\n      then: Yup.string().required(\n        t(\"productPrice.required\", { ns: \"validations\" }) || \"\"\n      ),\n      otherwise: Yup.string(),\n    }),\n  });\n\n  const initialValues: initialValues = {\n    code: \"\",\n    name: \"\",\n    status: 1,\n    custom: 1,\n    description: \"\",\n    price: \"\",\n    count_type: \"quantity\",\n    images: [],\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit: (values) => {\n      selectedProductId\n        ? Dispatch(updateProduct(selectedProductId, values))\n        : Dispatch(saveProduct(values));\n    },\n  });\n  const handleSubmitForm = () => {\n    formik.handleSubmit();\n  };\n  const _handleClose = () => {\n    handleClose && handleClose();\n    setSelectedProduct(undefined);\n    formik.resetForm();\n  };\n  useEffect(() => {\n    if (saveSuccess) {\n      _handleClose();\n      Dispatch(setSaveSuccess(false));\n      SnackbarUtils.success(\n        selectedProductId ? t(\"updateProductSuccess\") : t(\"addProductSuccess\")\n      );\n    }\n  }, [saveSuccess]);\n\n  console.log(\"formik\", formik);\n  useEffect(() => {\n    function setValues() {\n      if (selectedProduct) {\n        //set formik values\n        formik.setFieldValue(\"code\", selectedProduct.code);\n        formik.setFieldValue(\"name\", selectedProduct.name);\n        formik.setFieldValue(\"status\", selectedProduct.status);\n        formik.setFieldValue(\"custom\", selectedProduct.custom);\n        formik.setFieldValue(\"count_type\", selectedProduct.count_type);\n        formik.setFieldValue(\n          \"description\",\n          selectedProduct.details?.[0]?.description\n        );\n        formik.setFieldValue(\n          \"price\",\n          selectedProduct.details?.[0]?.price || \"\"\n        );\n        formik.setFieldValue(\"images\", selectedProduct.images);\n      }\n    }\n    setValues();\n  }, [selectedProduct]);\n  return (\n    <SideDialog\n      headerText={t(\"addProduct\")}\n      headerIcon={<Add />}\n      open={open}\n      handleClose={_handleClose}\n    >\n      <SideDialog.Content>\n        {selectedProductId && !selectedProduct && <FullscreenLoading />}\n        <div className=\"p-7 font-bold text-[18px]\">\n          <p className=\"text-start\">{t(\"enterProductDetail\")}</p>\n          <form onSubmit={formik.handleSubmit} className=\"w-full\">\n            <div className=\"mt-7 w-full grid grid-cols-2 gap-x-5 gap-y-7\">\n              <TextField\n                name=\"code\"\n                label={t(\"productCode\")}\n                type=\"text\"\n                placeholder={t(\"productCode.placeholder\", {\n                  ns: \"validations\",\n                })}\n                formik={formik}\n              />\n              <TextField\n                name=\"name\"\n                label={t(\"productName\")}\n                type=\"text\"\n                placeholder={t(\"productName.placeholder\", {\n                  ns: \"validations\",\n                })}\n                formik={formik}\n              />\n              <DropDown\n                className=\"group\"\n                name=\"status\"\n                label={t(\"status\")}\n                options={[\n                  { label: <p>{t(\"active\")}</p>, value: 1 },\n                  { label: <p>{t(\"inactive\")}</p>, value: 0 },\n                ]}\n                placeholder={t(\"productStatus.placeholder\", {\n                  ns: \"validations\",\n                })}\n                formik={formik}\n              />\n              <DropDown\n                className=\"group\"\n                name=\"custom\"\n                label={t(\"productType\")}\n                options={[\n                  { label: <p>{t(\"custom\")}</p>, value: 1 },\n                  { label: <p>{t(\"normal\")}</p>, value: 0 },\n                ]}\n                placeholder={t(\"productType.placeholder\", {\n                  ns: \"validations\",\n                })}\n                formik={formik}\n              />\n            </div>\n            <div className=\"mt-7 w-full grid grid-cols-1 gap-x-5 gap-y-7\">\n              <DropDown\n                className=\"group\"\n                name=\"count_type\"\n                label={t(\"countType\")}\n                options={[\n                  { label: <p>{t(\"quantity\")}</p>, value: \"quantity\" },\n                  { label: <p>{t(\"m2\")}</p>, value: \"m2\" },\n                ]}\n                placeholder={t(\"countType.placeholder\", {\n                  ns: \"validations\",\n                })}\n                formik={formik}\n              />\n            </div>\n            {formik.values.custom == 0 && (\n              <div className=\"mt-7 w-full grid grid-cols-1 gap-x-5 gap-y-7\">\n                <TextField\n                  name=\"price\"\n                  label={t(\"price\")}\n                  type=\"number\"\n                  placeholder={t(\"productPrice.placeholder\", {\n                    ns: \"validations\",\n                  })}\n                  formik={formik}\n                />\n              </div>\n            )}\n            <div className=\"mt-7 w-full grid grid-cols-1 gap-x-5 gap-y-7\">\n              {open && (\n                <UploadGroup\n                  className=\"group\"\n                  name=\"images\"\n                  label={t(\"productImages\")}\n                  placeholder={t(\"uploadNewImage\")}\n                  imageOnly={true}\n                  formik={formik}\n                  setPending={setSubmitDisabled}\n                />\n              )}\n            </div>\n            <div className=\"mt-7 w-full grid grid-cols-1 gap-x-5 gap-y-7\">\n              <TextArea\n                name={\"description\"}\n                label={t(\"description\")}\n                formik={formik}\n              />\n            </div>\n          </form>\n        </div>\n      </SideDialog.Content>\n      <SideDialog.Footer>\n        <div className=\"py-[24px] border-t border-text-300 px-7 flex justify-between\">\n          <div className=\"w-[126px]\">\n            <Button\n              disabled={submitdisabled}\n              text=\"انصراف\"\n              onClick={_handleClose}\n              gray\n            />\n          </div>\n          <div className=\"w-[207px]\">\n            <Button\n              disabled={submitdisabled}\n              icon={selectedProductId ? <Edit2 /> : <Add />}\n              text={selectedProductId ? t(\"editProduct\") : t(\"addProduct\")}\n              onClick={handleSubmitForm}\n            />\n          </div>\n        </div>\n      </SideDialog.Footer>\n    </SideDialog>\n  );\n};\n\nexport default AddProductDialog;\n","import {\n  Add,\n  ArrangeVertical,\n  Edit,\n  Eye,\n  Setting4,\n  Trash,\n} from \"iconsax-react\";\nimport { useEffect, useState } from \"react\";\nimport Breadcrumb from \"components/breadcrumb/Breadcrumb\";\nimport Button from \"components/button/Button\";\nimport Table from \"components/table/Table\";\nimport TableAction from \"components/table/TableAction\";\nimport { useAppDispatch, useAppSelector } from \"app/redux/hooks\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  deleteProduct,\n  productsList,\n  setDeleteSuccess,\n} from \"app/redux/products/actions\";\nimport AddProductDialog from \"components/products/AddProductDialog\";\nimport DeletePopup from \"components/popup/DeletePopup\";\nimport SnackbarUtils from \"app/utils/SnackbarUtils\";\nimport { useNavigate } from \"react-router-dom\";\nimport TableSkeleton from \"components/skeleton/TableSkeleton\";\n\nconst Products = () => {\n  const data = useAppSelector((state) => state.products.products);\n  const [columns, setColumns] = useState<any[]>([]);\n  const [openDeletePopup, setOpenDeletePopup] = useState<boolean>(false);\n  const Navigator = useNavigate();\n  const deleteSuccess = useAppSelector(\n    (state: any) => state.products.deleteSuccess\n  );\n  const { t } = useTranslation(\"common\");\n  const [selectedRow, setSelectedRow] = useState<any>(null);\n  const [deleteLoading, setDeleteLoading] = useState<boolean>(false);\n  const [addProduct, setOpenAddProduct] = useState<boolean>(false);\n  const handleClosedeletePopup = () => {\n    setOpenDeletePopup(false);\n  };\n\n  const Dispatch = useAppDispatch();\n  useEffect(() => {\n    Dispatch(productsList());\n  }, []);\n\n  useEffect(() => {\n    if (data) {\n      console.log(\"data123\", data);\n\n      let colTmp: any[] = [\n        {\n          name: t(\"productCode\"),\n          selector: (row: any) => row.code,\n          sortable: true,\n        },\n        {\n          name: t(\"title\"),\n          selector: (row: any) => row.name,\n          sortable: true,\n        },\n        {\n          name: t(\"productType\"),\n          selector: (row: any) => (row.custom ? t(\"custom\") : t(\"normal\")),\n          sortable: true,\n        },\n        {\n          name: t(\"countType\"),\n          selector: (row: any) => (t(row.count_type)),\n          sortable: true,\n        },\n        {\n          name: t(\"status\"),\n          selector: (row: any) => t(\"active\"),\n          sortable: true,\n        },\n      ];\n\n      colTmp.push({\n        allowOverflow: true,\n        button: true,\n        width: \"120px\",\n        cell: (row: any) => (\n          <TableAction\n            items={[\n              {\n                icon: <Edit variant=\"Bold\" />,\n                text: t('edit'),\n                name: \"edit\",\n              },\n              row.custom && {\n                icon: <ArrangeVertical variant=\"Bold\" />,\n                text: t('manageSteps'),\n                name: \"steps\",\n              },\n              {\n                icon: <Trash variant={\"Bold\"} />,\n                text: t('delete'),\n                name: \"delete\",\n              },\n            ].filter(Boolean)}\n            handleAction={handleTableAction}\n            row={row}\n          />\n        ),\n      });\n\n      setColumns([...colTmp]);\n\n      console.log(\"data.orders\", data.cols);\n    }\n  }, [data]);\n  const handleTableAction = (row: any, action: string) => {\n    console.log(\"row\", row);\n    console.log(\"action\", action);\n    setSelectedRow(row);\n    switch (action) {\n      case \"delete\":\n        setOpenDeletePopup(true);\n        break;\n      case \"steps\":\n        Navigator(`${row.code}/steps`);\n        break;\n      case \"edit\":\n        setOpenAddProduct(true);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleDeleteProduct = () => {\n    setDeleteLoading(true);\n    console.log(\"selectedRow\", selectedRow);\n    Dispatch(deleteProduct(selectedRow.id));\n    // setTimeout(() => {\n    //   setDeleteLoading(false);\n    //   setOpenDeletePopup(false);\n    //   SnackbarUtils.success(t(\"deleteProductSuccess\"));\n    // }, 1000);\n  };\n  useEffect(() => {\n    if (deleteSuccess) {\n      setDeleteLoading(false);\n      setOpenDeletePopup(false);\n      SnackbarUtils.success(t(\"deleteProductSuccess\"));\n      setTimeout(() => {\n        Dispatch(setDeleteSuccess(false));\n      }, 100);\n    }\n  }, [deleteSuccess]);\n  const handleCloseAddProductDialog = () => {\n    setOpenAddProduct(false);\n    setSelectedRow(null);\n  };\n  return (\n    <div className=\"w-full h-full\">\n      <AddProductDialog\n        open={addProduct}\n        handleClose={handleCloseAddProductDialog}\n        selectedProductId={selectedRow?.id || undefined}\n      />\n\n      <DeletePopup\n        title={t(\"deleteProductConfirmation\")}\n        open={openDeletePopup}\n        onClose={handleClosedeletePopup}\n        handleConfirm={handleDeleteProduct}\n        loading={deleteLoading}\n      />\n      <Breadcrumb\n        actions={\n          <>\n            <div className=\"w-[186px] ms-4\">\n              <Button\n                icon={<Add />}\n                text={t(\"addProduct\")}\n                onClick={() => setOpenAddProduct(true)}\n              />\n            </div>\n          </>\n        }\n        title={t(\"products\")}\n      />\n      <div>\n        {/* <button onClick={zipArray}>zip</button>\n        <button onClick={unzipArray}>unzip</button> */}\n\n        {data ? (\n          <Table columns={columns} data={data || []} />\n        ) : (\n          <TableSkeleton />\n        )}\n      </div>\n    </div>\n  );\n};\nexport default Products;\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","productActions","productSlice","actions","productsList","async","dispatch","getState","response","productService","productStepsList","code","getProductStepInfo","id","productStepInfo","saveProduct","product","updateProduct","productId","setSaveSuccess","success","deleteProduct","setDeleteSuccess","_Api","Api","get","data","_Api5","_product$images","post","name","custom","price","count_type","status","description","images","map","image","hashCode","_Api7","delete","concat","_Api2","_Api3","setProductStepRoles","roles","_Api4","join","addProductConditions","_Api9","step_id","stepId","field_id","fieldId","option_id","optionId","next_step_id","nextStepId","getProduct","_Api8","_Api6","_product$images2","put","_ref","_formik$values","_formik$errors","_formik$touched","_formik$errors2","label","formik","className","inputActions","editorRef","useRef","_jsxs","children","_jsx","htmlFor","Editor","onInit","evt","editor","current","value","values","onEditorChange","text","handleChange","target","apiKey","init","height","width","menubar","toolbar","content_style","errors","touched","src","badge","handleDelete","handleFullscreen","handleViewImage","url","setUrl","useState","isImage","setIsImage","t","useTranslation","useEffect","hash_code","transform","then","_src$type","type","search","alt","Document","onClick","CircularProgress","MaximizeCircle","Trash","CloseCircle","handleClose","document","body","removeChild","getElementById","_formik$values$name","placeholder","imageOnly","setPending","mock","noBadge","fileRef","files","setFiles","uploading","setUploading","uploadFile","file","allFiles","formData","FormData","append","_response$data","_response$data$file","headers","newFiles","foundIndex","findIndex","x","e","splice","SnackbarUtils","error","_formik$values2","setFieldValue","length","UploadFile","disabled","newName","Math","floor","random","push","handleUploadFile","index","ImageThumbnail","handleDeleteFile","imageValidExtensions","includes","rootElement","createElement","setAttribute","appendChild","ReactDOM","render","ImageFullscreen","blob","fileToBlob","blobUrl","URL","createObjectURL","window","open","IconMenu","_user$name","_user$name$split","_user$name$split$","items","anchorEl","profileInfo","user","JSON","parse","localStorage","getItem","useMediaQuery","Dialog","onClose","fullWidth","Menu","sx","border","boxShadow","borderRadius","marginTop","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","backgroundColor","padding","borderBottom","fontSize","color","avatar","split","toUpperCase","last_name","toPersianDigits","mobile","item","ListItemIcon","icon","ListItemText","title","handleConfirm","loading","Popup","variant","Button","size","bordered","Transition","React","props","ref","Slide","direction","TransitionComponent","keepMounted","DialogContent","Content","Footer","_ref2","SideDialog","_ref3","headerIcon","headerText","rand","setRand","event","child","TableSkeleton","Array","from","keys","Skeleton","animation","columns","i18n","DataTable","dir","Direction","LTR","RTL","conditionalRowStyles","when","row","style","borderTop","cursor","after","simple","handleIcon","_Fragment","handleAction","anchorRef","setOpen","MenuButton","More","console","log","_handleAction","action","selectedProductId","Dispatch","saveSuccess","state","products","selectedProduct","setSelectedProduct","resp","getProductInfo","submitdisabled","setSubmitDisabled","validationSchema","Yup","shape","required","ns","is","otherwise","useFormik","initialValues","onSubmit","_handleClose","undefined","resetForm","_selectedProduct$deta","_selectedProduct$deta2","_selectedProduct$deta3","_selectedProduct$deta4","details","setValues","Add","FullscreenLoading","handleSubmit","TextField","DropDown","options","UploadGroup","TextArea","gray","Edit2","handleSubmitForm","Products","setColumns","openDeletePopup","setOpenDeletePopup","Navigator","useNavigate","deleteSuccess","selectedRow","setSelectedRow","deleteLoading","setDeleteLoading","addProduct","setOpenAddProduct","colTmp","selector","sortable","allowOverflow","button","cell","TableAction","Edit","ArrangeVertical","filter","Boolean","handleTableAction","cols","setTimeout","AddProductDialog","handleCloseAddProductDialog","DeletePopup","handleClosedeletePopup","handleDeleteProduct","Breadcrumb","Table"],"sourceRoot":""}