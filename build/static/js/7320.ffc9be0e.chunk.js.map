{"version":3,"file":"static/js/7320.ffc9be0e.chunk.js","mappings":"2LAIaA,EAAiB,WAAH,OAASC,EAAAA,EAAAA,KAA0B,EACjDC,EAAkDC,EAAAA,E,iQCCzDC,E,QAAiBC,EAAAA,QAEVC,EAAe,WAM1B,gDAAO,WAAOC,EAAUC,GAAQ,4FACPC,EAAAA,EAAAA,eAA8B,KAAD,EAA9CC,EAAQ,OACdH,EAASH,EAAeE,aAAaI,IAAW,2CACjD,qDAHD,EAIF,EAEaC,EAAmB,SAC9BC,GAEA,gDAAO,WAAOL,EAAUC,GAAQ,4FACPC,EAAAA,EAAAA,iBAAgCG,GAAM,KAAD,EAAtDF,EAAQ,OACdH,EAASH,EAAeO,iBAAiBD,IAAW,2CACrD,qDAHD,EAIF,EACaG,EAAqB,SAChCC,GAEA,gDAAO,WAAOP,EAAUC,GAAQ,+EACnB,IAAPM,EAAQ,yCAASP,EAASH,EAAeW,gBAAgB,QAAM,uBAC5CN,EAAAA,EAAAA,gBAA+BK,GAAI,KAAD,EAAnDJ,EAAQ,OACdH,EAASH,EAAeW,gBAAgBL,IAAW,2CACpD,qDAJD,EAKF,EAEaM,EAAc,SACzBC,GAEA,gDAAO,WAAOV,EAAUC,GAAQ,4FACPC,EAAAA,EAAAA,YAA2BQ,GAAS,KAAD,EAApDP,EAAQ,OACdH,EAASH,EAAeY,YAAYN,IAAW,2CAChD,qDAHD,EAIF,EACaQ,EAAgB,SAC3BC,EACAF,GAEA,gDAAO,WAAOV,EAAUC,GAAQ,4FACPC,EAAAA,EAAAA,cAA6BU,EAAWF,GAAS,KAAD,EAAjEP,EAAQ,OACdH,EAASH,EAAec,cAAcR,IACtCH,EAASD,KAAgB,2CAC1B,qDAJD,EAKF,EAEac,EAAiB,SAC5BC,GAEA,gDAAO,WAAOd,EAAUC,GAAQ,sEAC9BD,EAASH,EAAegB,eAAeC,IAAU,2CAClD,qDAFD,EAGF,EAGaC,EAAgB,SAC3BR,GAEA,gDAAO,WAAOP,EAAUC,GAAQ,4FACPC,EAAAA,EAAAA,cAA6BK,GAAI,KAAD,EAAjDJ,EAAQ,OACdH,EAASH,EAAekB,cAAcZ,IAAW,2CAClD,qDAHD,EAIF,EAEaa,EAAmB,SAC9BF,GAEA,gDAAO,WAAOd,EAAUC,GAAQ,sEAC9BD,EAASH,EAAemB,iBAAiBF,IAAU,2CACpD,qDAFD,EAGF,C,uDC5E2B,aAG1B,OAH0B,0BAA3B,2GAC4B,QAD5B,GACuBG,EAAAA,EAAAA,YAAK,aAAL,EAAOC,IAAI,aAAa,KAAD,EAAhC,OAARf,EAAQ,yBACG,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUgB,MAAI,4CACtB,sBAC8B,aAG9B,OAH8B,0BAA/B,WAAgCd,GAAY,8FAChB,QADgB,GACrBY,EAAAA,EAAAA,YAAK,aAAL,EAAOC,IAAI,YAAD,OAAab,EAAI,WAAU,KAAD,EAA7C,OAARF,EAAQ,yBACG,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUgB,MAAI,4CACtB,sBAC6B,aAG7B,OAH6B,0BAA9B,WAA+BZ,GAAU,8FACb,QADa,GAClBU,EAAAA,EAAAA,YAAK,aAAL,EAAOC,IAAI,iBAAD,OAAkBX,IAAM,KAAD,EAA1C,OAARJ,EAAQ,yBACG,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUgB,MAAI,4CACtB,sBACiC,aAMjC,OANiC,0BAAlC,WAAmCZ,EAAYa,GAAe,8FAClC,QADkC,GACvCH,EAAAA,EAAAA,YAAK,aAAL,EAAOI,KAAK,kBAAD,OAAmBd,EAAE,aAAa,CAEhEa,MAAOA,EAAME,KAAK,OACjB,KAAD,EAHU,OAARnB,EAAQ,yBAIG,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUgB,MAAI,4CACtB,sBACyB,aAczB,OAdyB,0BAA1B,WAA2BT,GAAgB,gGACf,QADe,GACpBO,EAAAA,EAAAA,YAAK,aAAL,EAAOI,KAAK,YAAa,CAC5CE,KAAMb,EAAQa,KACdlB,KAAMK,EAAQL,KACdmB,OAAQd,EAAQc,OAChBC,MAAOf,EAAQe,MACfC,WAAYhB,EAAQgB,WACpBC,OAAQjB,EAAQiB,OAChBC,YAAalB,EAAQkB,YACrBC,OAEgB,QADd,EACAnB,EAAQmB,cAAM,aAAd,EAAgBC,KAAI,SAACC,GAAK,OAAKA,EAAMC,QAAQ,MAC9C,KAAD,EAXU,OAAR7B,EAAQ,yBAYG,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUgB,MAAI,4CACtB,sBAiBD,aADC,OACD,0BAfA,WAA6BZ,EAAYG,GAAgB,gGAC7B,QAD6B,GAClCO,EAAAA,EAAAA,YAAK,aAAL,EAAOgB,IAAI,aAAD,OAAc1B,GAAM,CACjDgB,KAAMb,EAAQa,KACdlB,KAAMK,EAAQL,KACdmB,OAAQd,EAAQc,OAChBE,WAAYhB,EAAQgB,WACpBD,MAAOf,EAAQe,MACfE,OAAQjB,EAAQiB,OAChBC,YAAalB,EAAQkB,YACrBC,OAEgB,QADd,EACAnB,EAAQmB,cAAM,aAAd,EAAgBC,KAAI,SAACC,GAAK,OAAKA,EAAMC,QAAQ,MAC9C,KAAD,EAXU,OAAR7B,EAAQ,yBAYG,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUgB,MAAI,4CACtB,sBAMD,aADC,OACD,0BAJA,WAA6BZ,GAAU,8FACX,QADW,GAChBU,EAAAA,EAAAA,YAAK,aAAL,EAAOiB,OAAO,aAAD,OAAc3B,IAAM,KAAD,EAAzC,OAARJ,EAAQ,yBACG,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUgB,MAAI,4CACtB,sBAMD,aADC,OACD,0BAJA,WAA0BZ,GAAU,8FACR,QADQ,GACbU,EAAAA,EAAAA,YAAK,aAAL,EAAOC,IAAI,aAAD,OAAcX,IAAM,KAAD,EAAtC,OAARJ,EAAQ,yBACG,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUgB,MAAI,4CACtB,sBAEkC,aAQlC,OARkC,0BAAnC,WAAoCA,GAAS,8FACjB,QADiB,GACtBF,EAAAA,EAAAA,YAAK,aAAL,EAAOI,KAAK,4BAA6B,CAC5Dc,QAAShB,EAAKiB,OACdC,SAAUlB,EAAKmB,QACfC,UAAWpB,EAAKqB,SAChBC,aAActB,EAAKuB,aAClB,KAAD,EALU,OAARvC,EAAQ,yBAMG,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUgB,MAAI,4CACtB,sBAED,KACEpB,aA1EyC,WAEhB,gCAyEzBU,YAvDD,SAC0B,GAAD,gCAuDxBM,cAzBD,SAE4B,GAAD,gCAwB1BX,iBAxED,SAC+B,GAAD,gCAwE7BI,gBArED,SAC8B,GAAD,gCAqE5BmC,oBAlED,SACkC,EAAD,mCAkEhCC,qBAnBD,SAEmC,GAAD,gCAkBjCC,WAzBD,SAEyB,GAAD,gCAwBvBlC,cA/CD,SAE4B,EAAD,mC,8FCgB5B,IA1CoB,SAAH,GAME,IALjBmC,EAAI,EAAJA,KACAC,EAAO,EAAPA,QACAC,EAAK,EAALA,MACAC,EAAa,EAAbA,cACAC,EAAO,EAAPA,QAEQC,GAAMC,EAAAA,EAAAA,IAAe,CAAC,SAAU,gBAAhCD,EACR,OACE,UAAC,IAAK,CAACL,KAAMA,EAAMC,QAASA,EAAQ,WAClC,gBAAKM,UAAU,qGAAoG,UACjH,SAAC,IAAK,CAACC,QAAQ,YAEjB,0BACE,cAAGD,UAAU,kDAAiD,SAAEL,OAElE,iBAAKK,UAAU,yDAAwD,WACrE,gBAAKA,UAAU,YAAW,UACxB,SAAC,IAAM,CACLE,SAAUL,EACVM,KACEN,GACE,SAAC,IAAgB,CAACO,MAAM,UAAUC,KAAM,KAExCP,EAAE,OAGNQ,QAAUT,EAA0B,WAAO,EAAvBD,OAGxB,gBAAKI,UAAU,YAAW,UACxB,SAAC,IAAM,CACLE,SAAUL,EACVM,KAAML,EAAE,MACRQ,QAAUT,EAAoB,WAAO,EAAjBH,EACpBa,UAAQ,WAMpB,C,qFCnDMC,EAAaC,EAAAA,YAAiB,SAClCC,EAGAC,GAEA,OAAO,SAAC,KAAK,QAACC,UAAU,KAAKD,IAAKA,GAASD,GAC7C,IA0BA,IAnBc,SAAH,GAAiD,IAA3CjB,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAASmB,EAAQ,EAARA,SAC9B,OACE,SAAC,IAAM,CACLpB,KAAMA,EACNqB,oBAAqBN,EACrBO,aAAW,EACXrB,QAASA,EACT,mBAAiB,iCAEjBsB,GAAI,CACF,qBAAsB,CACpBC,MAAO,UAET,UAEF,SAAC,IAAa,CAACjB,UAAU,4CAA2C,SAAEa,KAG5E,C,8CCOA,IAzCsB,WACpB,OACE,iBAAKb,UAAU,OAAM,WACnB,gBAAKA,UAAU,uHAAsH,SAClIkB,MAAMC,KAAKD,MAAM,GAAGE,QAAQ3C,KAAI,SAAC4C,EAAMC,GAAK,OAC3C,SAAC,IAAQ,CACPrB,QAAQ,UACRgB,MAAO,OACPM,OAAQ,GAERC,UAAU,QADLF,EAEL,MAILJ,MAAMC,KAAKD,MAAM,GAAGE,QAAQ3C,KAAI,SAAC4C,EAAMC,GAAK,OAC3C,iBAAiBtB,UAAU,sHAAqH,UAC7IkB,MAAMC,KAAKD,MAAM,GAAGE,QAAQ3C,KAAI,SAAC4C,EAAMC,GAAK,OAC3C,SAAC,IAAQ,CACPrB,QAAQ,UACRgB,MAAO,OACPM,OAAQ,GAERC,UAAU,QADLF,EAEL,KAEJ,gBAAKtB,UAAU,4CAA2C,UACxD,gBAAKA,UAAU,yFAAwF,UACrG,SAAC,IAAQ,CACPC,QAAQ,UACRgB,MAAO,OACPM,OAAQ,GACRC,UAAU,eAhBRF,EAoBJ,MAId,C,kVC6OA,EAhPyB,SAAH,GAIU,IAH9B7B,EAAI,EAAJA,KACAgC,EAAW,EAAXA,YACAC,EAAiB,EAAjBA,kBAEQ5B,GAAMC,EAAAA,EAAAA,IAAe,CAAC,SAAU,gBAAhCD,EACF6B,GAAWvF,EAAAA,EAAAA,KACXwF,GAActF,EAAAA,EAAAA,IAClB,SAACuF,GAAU,OAAKA,EAAMC,SAASF,WAAW,IAE5C,GAA8CG,EAAAA,EAAAA,YAAmB,eAA1DC,EAAe,KAAEC,EAAkB,MAC1CC,EAAAA,EAAAA,YAAU,WACqB,aAK5B,OAL4B,0BAA7B,6FACMR,EAAkB,CAAD,+BACA7E,EAAAA,EAAAA,WAA0B6E,GAAmB,KAAD,EAAzDS,EAAI,OACVF,EAAmBE,GAAM,4CAE5B,uBANc,WACc,wBAO7BC,EACF,GAAG,CAACV,IAEJ,OAA4CK,EAAAA,EAAAA,WAAkB,GAAM,eAA7DM,EAAc,KAAEC,EAAiB,KAClCC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CzF,KAAMwF,EAAAA,KAAaE,SACjB5C,EAAE,uBAAwB,CAAE6C,GAAI,iBAAoB,IAEtDzE,KAAMsE,EAAAA,KAAaE,SACjB5C,EAAE,uBAAwB,CAAE6C,GAAI,iBAAoB,IAEtDpE,YAAaiE,EAAAA,KAAaE,SACxB5C,EAAE,8BAA+B,CAAE6C,GAAI,iBAAoB,IAG7DtE,WAAYmE,EAAAA,KAAaE,SACvB5C,EAAE,qBAAsB,CAAE6C,GAAI,iBAAoB,IAEpDvE,MAAOoE,EAAAA,KAAaI,KAAK,SAAU,CACjCC,GAAI,EACJC,KAAMN,EAAAA,KAAaE,SACjB5C,EAAE,wBAAyB,CAAE6C,GAAI,iBAAoB,IAEvDI,UAAWP,EAAAA,SAeTQ,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAZmC,CACnClG,KAAM,GACNkB,KAAM,GACNI,OAAQ,EACRH,OAAQ,EACRI,YAAa,GACbH,MAAO,GACPC,WAAY,WACZG,OAAQ,IAKR+D,iBAAAA,EACAY,SAAU,SAACC,GAELzB,EADJD,GACapE,EAAAA,EAAAA,IAAcoE,EAAmB0B,IACjChG,EAAAA,EAAAA,IAAYgG,GAC3B,IAKIC,EAAe,WACnB5B,GAAeA,IACfQ,OAAmBqB,GACnBN,EAAOO,WACT,EAkCA,OAjCArB,EAAAA,EAAAA,YAAU,WACJN,IACFyB,IACA1B,GAASnE,EAAAA,EAAAA,KAAe,IACxBgG,EAAAA,EAAAA,QACsB1D,EAApB4B,EAAsB,uBAA4B,sBAGxD,GAAG,CAACE,IAEJ6B,QAAQC,IAAI,SAAUV,IACtBd,EAAAA,EAAAA,YAAU,YACR,WACwB,IAAD,QAAjBF,IAEFgB,EAAOW,cAAc,OAAQ3B,EAAgBhF,MAC7CgG,EAAOW,cAAc,OAAQ3B,EAAgB9D,MAC7C8E,EAAOW,cAAc,SAAU3B,EAAgB1D,QAC/C0E,EAAOW,cAAc,SAAU3B,EAAgB7D,QAC/C6E,EAAOW,cAAc,aAAc3B,EAAgB3D,YACnD2E,EAAOW,cACL,cACuB,QADV,EACb3B,EAAgB4B,eAAO,OAAK,QAAL,EAAvB,EAA0B,UAAE,WAAL,EAAvB,EAA8BrF,aAEhCyE,EAAOW,cACL,SACuB,QAAvB,EAAA3B,EAAgB4B,eAAO,OAAK,QAAL,EAAvB,EAA0B,UAAE,WAAL,EAAvB,EAA8BxF,QAAS,IAEzC4E,EAAOW,cAAc,SAAU3B,EAAgBxD,QAEnD,CACAqF,EACF,GAAG,CAAC7B,KAEF,UAAC8B,EAAA,EAAU,CACTC,WAAYjE,EAAE,cACdkE,YAAY,SAACC,EAAA,EAAG,IAChBxE,KAAMA,EACNgC,YAAa4B,EAAa,WAE1B,UAACS,EAAA,UAAkB,WAChBpC,IAAsBM,IAAmB,SAACkC,EAAA,EAAiB,KAC5D,iBAAKlE,UAAU,4BAA2B,WACxC,cAAGA,UAAU,aAAY,SAAEF,EAAE,yBAC7B,kBAAMqD,SAAUH,EAAOmB,aAAcnE,UAAU,SAAQ,WACrD,iBAAKA,UAAU,+CAA8C,WAC3D,SAACoE,EAAA,EAAS,CACRlG,KAAK,OACLmG,MAAOvE,EAAE,eACTwE,KAAK,OACLC,YAAazE,EAAE,0BAA2B,CACxC6C,GAAI,gBAENK,OAAQA,KAEV,SAACoB,EAAA,EAAS,CACRlG,KAAK,OACLmG,MAAOvE,EAAE,eACTwE,KAAK,OACLC,YAAazE,EAAE,0BAA2B,CACxC6C,GAAI,gBAENK,OAAQA,KAEV,SAAC,IAAQ,CACPhD,UAAU,QACV9B,KAAK,SACLmG,MAAOvE,EAAE,UACT0E,QAAS,CACP,CAAEH,OAAO,uBAAIvE,EAAE,YAAgB2E,MAAO,GACtC,CAAEJ,OAAO,uBAAIvE,EAAE,cAAkB2E,MAAO,IAE1CF,YAAazE,EAAE,4BAA6B,CAC1C6C,GAAI,gBAENK,OAAQA,KAEV,SAAC,IAAQ,CACPhD,UAAU,QACV9B,KAAK,SACLmG,MAAOvE,EAAE,eACT0E,QAAS,CACP,CAAEH,OAAO,uBAAIvE,EAAE,YAAgB2E,MAAO,GACtC,CAAEJ,OAAO,uBAAIvE,EAAE,YAAgB2E,MAAO,IAExCF,YAAazE,EAAE,0BAA2B,CACxC6C,GAAI,gBAENK,OAAQA,QAGZ,gBAAKhD,UAAU,+CAA8C,UAC3D,SAAC,IAAQ,CACPA,UAAU,QACV9B,KAAK,aACLmG,MAAOvE,EAAE,aACT0E,QAAS,CACP,CAAEH,OAAO,uBAAIvE,EAAE,cAAkB2E,MAAO,YACxC,CAAEJ,OAAO,uBAAIvE,EAAE,QAAY2E,MAAO,OAEpCF,YAAazE,EAAE,wBAAyB,CACtC6C,GAAI,gBAENK,OAAQA,MAGa,GAAxBA,EAAOI,OAAOjF,SACb,gBAAK6B,UAAU,+CAA8C,UAC3D,SAACoE,EAAA,EAAS,CACRlG,KAAK,QACLmG,MAAOvE,EAAE,SACTwE,KAAK,SACLC,YAAazE,EAAE,2BAA4B,CACzC6C,GAAI,gBAENK,OAAQA,OAId,gBAAKhD,UAAU,+CAA8C,SAC1DP,IACC,SAACiF,EAAA,EAAW,CACV1E,UAAU,QACV9B,KAAK,SACLmG,MAAOvE,EAAE,iBACTyE,YAAazE,EAAE,kBACf6E,WAAW,EACX3B,OAAQA,EACR4B,WAAYtC,OAIlB,gBAAKtC,UAAU,+CAA8C,UAC3D,SAAC6E,EAAA,EAAQ,CACP3G,KAAM,cACNmG,MAAOvE,EAAE,eACTkD,OAAQA,gBAMlB,SAACc,EAAA,SAAiB,WAChB,iBAAK9D,UAAU,+DAA8D,WAC3E,gBAAKA,UAAU,YAAW,UACxB,SAAC8E,EAAA,EAAM,CACL5E,SAAUmC,EACVlC,KAAK,uCACLG,QAAS+C,EACT0B,MAAI,OAGR,gBAAK/E,UAAU,YAAW,UACxB,SAAC8E,EAAA,EAAM,CACL5E,SAAUmC,EACV2C,KAAMtD,GAAoB,SAACuD,EAAA,EAAK,KAAM,SAAChB,EAAA,EAAG,IAC1C9D,KAA0BL,EAApB4B,EAAsB,cAAmB,cAC/CpB,QArKa,WACvB0C,EAAOmB,cACT,aA0KF,E,8BChFA,EA3KiB,WACf,IAAMrG,GAAOxB,EAAAA,EAAAA,IAAe,SAACuF,GAAK,OAAKA,EAAMC,SAASA,QAAQ,IAC9D,GAA8BC,EAAAA,EAAAA,UAAgB,IAAG,eAA1CmD,EAAO,KAAEC,EAAU,KAC1B,GAA8CpD,EAAAA,EAAAA,WAAkB,GAAM,eAA/DqD,EAAe,KAAEC,EAAkB,KACpCC,GAAYC,EAAAA,EAAAA,MACZC,GAAgBlJ,EAAAA,EAAAA,IACpB,SAACuF,GAAU,OAAKA,EAAMC,SAAS0D,aAAa,IAEtC1F,GAAMC,EAAAA,EAAAA,IAAe,UAArBD,EACR,GAAsCiC,EAAAA,EAAAA,UAAc,MAAK,eAAlD0D,EAAW,KAAEC,EAAc,KAClC,GAA0C3D,EAAAA,EAAAA,WAAkB,GAAM,eAA3D4D,EAAa,KAAEC,EAAgB,KACtC,GAAwC7D,EAAAA,EAAAA,WAAkB,GAAM,eAAzD8D,EAAU,KAAEC,EAAiB,KAK9BnE,GAAWvF,EAAAA,EAAAA,MACjB8F,EAAAA,EAAAA,YAAU,WACRP,GAASjF,EAAAA,EAAAA,MACX,GAAG,KAEHwF,EAAAA,EAAAA,YAAU,WACR,GAAIpE,EAAM,CACR2F,QAAQC,IAAI,UAAW5F,GAEvB,IAAIiI,EAAgB,CAClB,CACE7H,KAAM4B,EAAE,eACRkG,SAAU,SAACC,GAAQ,OAAKA,EAAIjJ,IAAI,EAChCkJ,UAAU,GAEZ,CACEhI,KAAM4B,EAAE,SACRkG,SAAU,SAACC,GAAQ,OAAKA,EAAI/H,IAAI,EAChCgI,UAAU,GAEZ,CACEhI,KAAM4B,EAAE,eACRkG,SAAU,SAACC,GAAQ,OAAMA,EAAI9H,OAAS2B,EAAE,UAAYA,EAAE,SAAS,EAC/DoG,UAAU,GAEZ,CACEhI,KAAM4B,EAAE,aACRkG,SAAU,SAACC,GAAQ,OAAMnG,EAAEmG,EAAI5H,WAAW,EAC1C6H,UAAU,GAEZ,CACEhI,KAAM4B,EAAE,UACRkG,SAAU,SAACC,GAAQ,OAAKnG,EAAE,SAAS,EACnCoG,UAAU,IAIdH,EAAOI,KAAK,CACVC,eAAe,EACfC,QAAQ,EACRpF,MAAO,QACPqF,KAAM,SAACL,GAAQ,OACb,SAACM,EAAA,EAAW,CACVC,MAAO,CACL,CACExB,MAAM,SAACyB,EAAA,EAAI,CAACxG,QAAQ,SACpBE,KAAML,EAAE,QACR5B,KAAM,QAER+H,EAAI9H,QAAU,CACZ6G,MAAM,SAAC0B,EAAA,EAAe,CAACzG,QAAQ,SAC/BE,KAAML,EAAE,eACR5B,KAAM,SAER,CACE8G,MAAM,SAAC2B,EAAA,EAAK,CAAC1G,QAAS,SACtBE,KAAML,EAAE,UACR5B,KAAM,WAER0I,OAAOC,SACTC,aAAcC,EACdd,IAAKA,GACL,IAINd,EAAW,GAAD,OAAKY,IAEftC,QAAQC,IAAI,cAAe5F,EAAKkJ,KAClC,CACF,GAAG,CAAClJ,IACJ,IAAMiJ,EAAoB,SAACd,EAAUgB,GAInC,OAHAxD,QAAQC,IAAI,MAAOuC,GACnBxC,QAAQC,IAAI,SAAUuD,GACtBvB,EAAeO,GACPgB,GACN,IAAK,SACH5B,GAAmB,GACnB,MACF,IAAK,QACHC,EAAU,GAAD,OAAIW,EAAIjJ,KAAI,WACrB,MACF,IAAK,OACH8I,GAAkB,GAKxB,GAWA5D,EAAAA,EAAAA,YAAU,WACJsD,IACFI,GAAiB,GACjBP,GAAmB,GACnB7B,EAAAA,EAAAA,QAAsB1D,EAAE,yBACxBoH,YAAW,WACTvF,GAAShE,EAAAA,EAAAA,KAAiB,GAC5B,GAAG,KAEP,GAAG,CAAC6H,IAKJ,OACE,iBAAKxF,UAAU,gBAAe,WAC5B,SAAC,EAAgB,CACfP,KAAMoG,EACNpE,YAR8B,WAClCqE,GAAkB,GAClBJ,EAAe,KACjB,EAMMhE,mBAA8B,OAAX+D,QAAW,IAAXA,OAAW,EAAXA,EAAavI,UAAMoG,KAGxC,SAAC6D,EAAA,EAAW,CACVxH,MAAOG,EAAE,6BACTL,KAAM2F,EACN1F,QAhIyB,WAC7B2F,GAAmB,EACrB,EA+HMzF,cApCsB,WAC1BgG,GAAiB,GACjBnC,QAAQC,IAAI,cAAe+B,GAC3B9D,GAASjE,EAAAA,EAAAA,IAAc+H,EAAYvI,IAMrC,EA4BM2C,QAAS8F,KAEX,SAACyB,EAAA,EAAU,CACTC,SACE,+BACE,gBAAKrH,UAAU,iBAAgB,UAC7B,SAAC8E,EAAA,EAAM,CACLE,MAAM,SAACf,EAAA,EAAG,IACV9D,KAAML,EAAE,cACRQ,QAAS,kBAAMwF,GAAkB,EAAK,QAK9CnG,MAAOG,EAAE,eAEX,yBAIGhC,GACC,SAACwJ,EAAA,EAAK,CAACpC,QAASA,EAASpH,KAAMA,GAAQ,MAEvC,SAACyJ,EAAA,EAAa,QAKxB,C","sources":["app/redux/hooks.ts","app/redux/products/actions.ts","app/redux/products/service.ts","components/popup/DeletePopup.tsx","components/popup/Popup.tsx","components/skeleton/TableSkeleton.tsx","components/products/AddProductDialog.tsx","pages/products/index.tsx"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { AnyAction, ThunkAction } from \"@reduxjs/toolkit\";\nimport productService from \"./service\";\nimport { RootState } from \"app/redux/store\";\nimport productSlice from \"./slice\";\nimport { Product } from \"app/models/product\";\n\nconst productActions = productSlice.actions;\n\nexport const productsList = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  AnyAction\n> => {\n  return async (dispatch, getState) => {\n    const response = await productService.productsList();\n    dispatch(productActions.productsList(response));\n  };\n};\n\nexport const productStepsList = (\n  code: string\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    const response = await productService.productStepsList(code);\n    dispatch(productActions.productStepsList(response));\n  };\n};\nexport const getProductStepInfo = (\n  id: number\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    if (id === 0) return dispatch(productActions.productStepInfo(null));\n    const response = await productService.productStepInfo(id);\n    dispatch(productActions.productStepInfo(response));\n  };\n};\n\nexport const saveProduct = (\n  product: Product\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    const response = await productService.saveProduct(product);\n    dispatch(productActions.saveProduct(response));\n  };\n};\nexport const updateProduct = (\n  productId: number,\n  product: Product\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    const response = await productService.updateProduct(productId, product);\n    dispatch(productActions.updateProduct(response));\n    dispatch(productsList());\n  };\n};\n\nexport const setSaveSuccess = (\n  success: boolean\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    dispatch(productActions.setSaveSuccess(success));\n  };\n};\n\n//delete product\nexport const deleteProduct = (\n  id: number\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    const response = await productService.deleteProduct(id);\n    dispatch(productActions.deleteProduct(response));\n  };\n};\n\nexport const setDeleteSuccess = (\n  success: boolean\n): ThunkAction<void, RootState, unknown, AnyAction> => {\n  return async (dispatch, getState) => {\n    dispatch(productActions.setDeleteSuccess(success));\n  };\n};\n","/* eslint-disable import/no-anonymous-default-export */\n\nimport { Product } from \"app/models/product\";\nimport Api from \"../../../app/service/Api\";\n\nasync function productsList() {\n  let response = await Api()?.get(\"/products\");\n  return response?.data;\n}\nasync function productStepsList(code: string) {\n  let response = await Api()?.get(`/product/${code}/steps`);\n  return response?.data;\n}\nasync function productStepInfo(id: number) {\n  let response = await Api()?.get(`/productSteps/${id}`);\n  return response?.data;\n}\nasync function setProductStepRoles(id: number, roles: number[]) {\n  let response = await Api()?.post(`/product/steps/${id}/setRoles`, {\n    //array to string by ,\n    roles: roles.join(\",\"),\n  });\n  return response?.data;\n}\nasync function saveProduct(product: Product) {\n  let response = await Api()?.post(\"/products\", {\n    name: product.name,\n    code: product.code,\n    custom: product.custom,\n    price: product.price,\n    count_type: product.count_type,\n    status: product.status,\n    description: product.description,\n    images:\n      //array of image hash codes\n      product.images?.map((image) => image.hashCode),\n  });\n  return response?.data;\n}\n\nasync function updateProduct(id: number, product: Product) {\n  let response = await Api()?.put(`/products/${id}`, {\n    name: product.name,\n    code: product.code,\n    custom: product.custom,\n    count_type: product.count_type,\n    price: product.price,\n    status: product.status,\n    description: product.description,\n    images:\n      //array of image hash codes\n      product.images?.map((image) => image.hashCode),\n  });\n  return response?.data;\n}\n//delete product\nasync function deleteProduct(id: number) {\n  let response = await Api()?.delete(`/products/${id}`);\n  return response?.data;\n}\n//get product\nasync function getProduct(id: number) {\n  let response = await Api()?.get(`/products/${id}`);\n  return response?.data;\n}\n//add product condition\nasync function addProductConditions(data: any) {\n  let response = await Api()?.post(`/product/steps/conditions`, {\n    step_id: data.stepId,\n    field_id: data.fieldId,\n    option_id: data.optionId,\n    next_step_id: data.nextStepId,\n  });\n  return response?.data;\n}\n\nexport default {\n  productsList,\n  saveProduct,\n  deleteProduct,\n  productStepsList,\n  productStepInfo,\n  setProductStepRoles,\n  addProductConditions,\n  getProduct,\n  updateProduct,\n};\n","import React from \"react\";\nimport Popup from \"./Popup\";\nimport { Trash } from \"iconsax-react\";\nimport { useTranslation } from \"react-i18next\";\nimport Button from \"../button/Button\";\nimport { CircularProgress } from \"@mui/material\";\n\ntype PopupProps = {\n  open: boolean;\n  title?: string | null;\n  onClose: () => void;\n  handleConfirm: () => void;\n  loading?: boolean;\n};\nconst DeletePopup = ({\n  open,\n  onClose,\n  title,\n  handleConfirm,\n  loading,\n}: PopupProps) => {\n  const { t } = useTranslation([\"common\", \"validations\"]);\n  return (\n    <Popup open={open} onClose={onClose}>\n      <div className=\"w-14 h-14 mb-[10px] bg-primary-250 rounded-full items-center justify-center flex text-primary-main\">\n        <Trash variant=\"Bold\" />\n      </div>\n      <div>\n        <p className=\"text-center text-[16px] font-semibold mb-[35px]\">{title}</p>\n      </div>\n      <div className=\"flex items-center justify-between w-full max-w-[236px]\">\n        <div className=\"w-[102px]\">\n          <Button\n            disabled={loading}\n            text={\n              loading ? (\n                <CircularProgress color=\"inherit\" size={24} />\n              ) : (\n                t(\"yes\")\n              )\n            }\n            onClick={!loading ? handleConfirm : () => {}}\n          />\n        </div>\n        <div className=\"w-[102px]\">\n          <Button\n            disabled={loading}\n            text={t(\"no\")}\n            onClick={!loading ? onClose : () => {}}\n            bordered\n          />\n        </div>\n      </div>\n    </Popup>\n  );\n};\nexport default DeletePopup;\n","import { Dialog, DialogContent, Slide } from \"@mui/material\";\nimport { TransitionProps } from \"@mui/material/transitions\";\nimport React from \"react\";\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ntype PopupProps = {\n  open: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n};\nconst Popup = ({ open, onClose, children }: PopupProps) => {\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={onClose}\n      aria-describedby=\"alert-dialog-slide-description\"\n      //set width 452px\n      sx={{\n        \"& .MuiDialog-paper\": {\n          width: \"452px\",\n        },\n      }}\n    >\n      <DialogContent className=\"flex items-center justify-center flex-col\">{children}</DialogContent>\n    </Dialog>\n  );\n};\nexport default Popup;\n","import { Skeleton } from \"@mui/material\";\n\nconst TableSkeleton = () => {\n  return (\n    <div className=\"grid\">\n      <div className=\"w-full h-[71px] bg-text-200 border border-text-300 rounded-t-[4px] grid grid-cols-6 items-center justify-center px-4\">\n        {Array.from(Array(5).keys()).map((item, index) => (\n          <Skeleton\n            variant=\"rounded\"\n            width={\"37px\"}\n            height={18}\n            key={index}\n            animation=\"wave\"\n          />\n        ))}\n      </div>\n\n      {Array.from(Array(5).keys()).map((item, index) => (\n        <div key={index} className=\"w-full h-[71px] border border-text-300 border-t-0 rounded-t-[4px] grid grid-cols-6 items-center justify-center px-4\">\n          {Array.from(Array(5).keys()).map((item, index) => (\n            <Skeleton\n              variant=\"rounded\"\n              width={\"45px\"}\n              height={18}\n              key={index}\n              animation=\"wave\"\n            />\n          ))}\n          <div className=\"w-[120px] flex items-cente justify-center\">\n            <div className=\"w-[92px] h-[38px] rounded-full border border-text-400 flex items-center justify-center\">\n              <Skeleton\n                variant=\"rounded\"\n                width={\"47px\"}\n                height={14}\n                animation=\"wave\"\n              />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default TableSkeleton;\n","import { Add, Edit2 } from \"iconsax-react\";\nimport SideDialog from \"../sideDialog/SideDialog\";\nimport TextField from \"../form/TextField\";\nimport { useFormik } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport Button from \"../button/Button\";\nimport DropDown from \"../form/Dropdown\";\nimport UploadGroup from \"../form/UploadGroup\";\nimport TextArea from \"../form/TextArea\";\nimport * as Yup from \"yup\";\nimport { Image, Product } from \"app/models/product\";\nimport {\n  saveProduct,\n  setSaveSuccess,\n  updateProduct,\n} from \"app/redux/products/actions\";\nimport { useAppDispatch, useAppSelector } from \"app/redux/hooks\";\nimport { useEffect, useState } from \"react\";\nimport SnackbarUtils from \"app/utils/SnackbarUtils\";\nimport productService from \"app/redux/products/service\";\nimport FullscreenLoading from \"../loading/FullscreenLoading\";\n\ntype OrderFiltersDialogProps = {\n  open: boolean;\n  handleClose?: () => void;\n  selectedProductId?: number;\n};\n\ntype initialValues = {\n  code: string;\n  name: string;\n  status: number | boolean;\n  custom: number | boolean;\n  description: string;\n  price: string;\n  count_type: string;\n  images: Image[];\n};\n\nconst AddProductDialog = ({\n  open,\n  handleClose,\n  selectedProductId,\n}: OrderFiltersDialogProps) => {\n  const { t } = useTranslation([\"common\", \"validations\"]);\n  const Dispatch = useAppDispatch();\n  const saveSuccess = useAppSelector(\n    (state: any) => state.products.saveSuccess\n  );\n  const [selectedProduct, setSelectedProduct] = useState<Product>();\n  useEffect(() => {\n    async function getProductInfo() {\n      if (selectedProductId) {\n        const resp = await productService.getProduct(selectedProductId);\n        setSelectedProduct(resp);\n      }\n    }\n\n    getProductInfo();\n  }, [selectedProductId]);\n\n  const [submitdisabled, setSubmitDisabled] = useState<boolean>(false);\n  const validationSchema = Yup.object().shape({\n    code: Yup.string().required(\n      t(\"productCode.required\", { ns: \"validations\" }) || \"\"\n    ),\n    name: Yup.string().required(\n      t(\"productName.required\", { ns: \"validations\" }) || \"\"\n    ),\n    description: Yup.string().required(\n      t(\"productDescription.required\", { ns: \"validations\" }) || \"\"\n    ),\n    //countType\n    count_type: Yup.string().required(\n      t(\"countType.required\", { ns: \"validations\" }) || \"\"\n    ),\n    price: Yup.string().when(\"custom\", {\n      is: 0,\n      then: Yup.string().required(\n        t(\"productPrice.required\", { ns: \"validations\" }) || \"\"\n      ),\n      otherwise: Yup.string(),\n    }),\n  });\n\n  const initialValues: initialValues = {\n    code: \"\",\n    name: \"\",\n    status: 1,\n    custom: 1,\n    description: \"\",\n    price: \"\",\n    count_type: \"quantity\",\n    images: [],\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit: (values) => {\n      selectedProductId\n        ? Dispatch(updateProduct(selectedProductId, values))\n        : Dispatch(saveProduct(values));\n    },\n  });\n  const handleSubmitForm = () => {\n    formik.handleSubmit();\n  };\n  const _handleClose = () => {\n    handleClose && handleClose();\n    setSelectedProduct(undefined);\n    formik.resetForm();\n  };\n  useEffect(() => {\n    if (saveSuccess) {\n      _handleClose();\n      Dispatch(setSaveSuccess(false));\n      SnackbarUtils.success(\n        selectedProductId ? t(\"updateProductSuccess\") : t(\"addProductSuccess\")\n      );\n    }\n  }, [saveSuccess]);\n\n  console.log(\"formik\", formik);\n  useEffect(() => {\n    function setValues() {\n      if (selectedProduct) {\n        //set formik values\n        formik.setFieldValue(\"code\", selectedProduct.code);\n        formik.setFieldValue(\"name\", selectedProduct.name);\n        formik.setFieldValue(\"status\", selectedProduct.status);\n        formik.setFieldValue(\"custom\", selectedProduct.custom);\n        formik.setFieldValue(\"count_type\", selectedProduct.count_type);\n        formik.setFieldValue(\n          \"description\",\n          selectedProduct.details?.[0]?.description\n        );\n        formik.setFieldValue(\n          \"price\",\n          selectedProduct.details?.[0]?.price || \"\"\n        );\n        formik.setFieldValue(\"images\", selectedProduct.images);\n      }\n    }\n    setValues();\n  }, [selectedProduct]);\n  return (\n    <SideDialog\n      headerText={t(\"addProduct\")}\n      headerIcon={<Add />}\n      open={open}\n      handleClose={_handleClose}\n    >\n      <SideDialog.Content>\n        {selectedProductId && !selectedProduct && <FullscreenLoading />}\n        <div className=\"p-7 font-bold text-[18px]\">\n          <p className=\"text-start\">{t(\"enterProductDetail\")}</p>\n          <form onSubmit={formik.handleSubmit} className=\"w-full\">\n            <div className=\"mt-7 w-full grid grid-cols-2 gap-x-5 gap-y-7\">\n              <TextField\n                name=\"code\"\n                label={t(\"productCode\")}\n                type=\"text\"\n                placeholder={t(\"productCode.placeholder\", {\n                  ns: \"validations\",\n                })}\n                formik={formik}\n              />\n              <TextField\n                name=\"name\"\n                label={t(\"productName\")}\n                type=\"text\"\n                placeholder={t(\"productName.placeholder\", {\n                  ns: \"validations\",\n                })}\n                formik={formik}\n              />\n              <DropDown\n                className=\"group\"\n                name=\"status\"\n                label={t(\"status\")}\n                options={[\n                  { label: <p>{t(\"active\")}</p>, value: 1 },\n                  { label: <p>{t(\"inactive\")}</p>, value: 0 },\n                ]}\n                placeholder={t(\"productStatus.placeholder\", {\n                  ns: \"validations\",\n                })}\n                formik={formik}\n              />\n              <DropDown\n                className=\"group\"\n                name=\"custom\"\n                label={t(\"productType\")}\n                options={[\n                  { label: <p>{t(\"custom\")}</p>, value: 1 },\n                  { label: <p>{t(\"normal\")}</p>, value: 0 },\n                ]}\n                placeholder={t(\"productType.placeholder\", {\n                  ns: \"validations\",\n                })}\n                formik={formik}\n              />\n            </div>\n            <div className=\"mt-7 w-full grid grid-cols-1 gap-x-5 gap-y-7\">\n              <DropDown\n                className=\"group\"\n                name=\"count_type\"\n                label={t(\"countType\")}\n                options={[\n                  { label: <p>{t(\"quantity\")}</p>, value: \"quantity\" },\n                  { label: <p>{t(\"m2\")}</p>, value: \"m2\" },\n                ]}\n                placeholder={t(\"countType.placeholder\", {\n                  ns: \"validations\",\n                })}\n                formik={formik}\n              />\n            </div>\n            {formik.values.custom == 0 && (\n              <div className=\"mt-7 w-full grid grid-cols-1 gap-x-5 gap-y-7\">\n                <TextField\n                  name=\"price\"\n                  label={t(\"price\")}\n                  type=\"number\"\n                  placeholder={t(\"productPrice.placeholder\", {\n                    ns: \"validations\",\n                  })}\n                  formik={formik}\n                />\n              </div>\n            )}\n            <div className=\"mt-7 w-full grid grid-cols-1 gap-x-5 gap-y-7\">\n              {open && (\n                <UploadGroup\n                  className=\"group\"\n                  name=\"images\"\n                  label={t(\"productImages\")}\n                  placeholder={t(\"uploadNewImage\")}\n                  imageOnly={true}\n                  formik={formik}\n                  setPending={setSubmitDisabled}\n                />\n              )}\n            </div>\n            <div className=\"mt-7 w-full grid grid-cols-1 gap-x-5 gap-y-7\">\n              <TextArea\n                name={\"description\"}\n                label={t(\"description\")}\n                formik={formik}\n              />\n            </div>\n          </form>\n        </div>\n      </SideDialog.Content>\n      <SideDialog.Footer>\n        <div className=\"py-[24px] border-t border-text-300 px-7 flex justify-between\">\n          <div className=\"w-[126px]\">\n            <Button\n              disabled={submitdisabled}\n              text=\"انصراف\"\n              onClick={_handleClose}\n              gray\n            />\n          </div>\n          <div className=\"w-[207px]\">\n            <Button\n              disabled={submitdisabled}\n              icon={selectedProductId ? <Edit2 /> : <Add />}\n              text={selectedProductId ? t(\"editProduct\") : t(\"addProduct\")}\n              onClick={handleSubmitForm}\n            />\n          </div>\n        </div>\n      </SideDialog.Footer>\n    </SideDialog>\n  );\n};\n\nexport default AddProductDialog;\n","import {\n  Add,\n  ArrangeVertical,\n  Edit,\n  Eye,\n  Setting4,\n  Trash,\n} from \"iconsax-react\";\nimport { useEffect, useState } from \"react\";\nimport Breadcrumb from \"components/breadcrumb/Breadcrumb\";\nimport Button from \"components/button/Button\";\nimport Table from \"components/table/Table\";\nimport TableAction from \"components/table/TableAction\";\nimport { useAppDispatch, useAppSelector } from \"app/redux/hooks\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  deleteProduct,\n  productsList,\n  setDeleteSuccess,\n} from \"app/redux/products/actions\";\nimport AddProductDialog from \"components/products/AddProductDialog\";\nimport DeletePopup from \"components/popup/DeletePopup\";\nimport SnackbarUtils from \"app/utils/SnackbarUtils\";\nimport { useNavigate } from \"react-router-dom\";\nimport TableSkeleton from \"components/skeleton/TableSkeleton\";\n\nconst Products = () => {\n  const data = useAppSelector((state) => state.products.products);\n  const [columns, setColumns] = useState<any[]>([]);\n  const [openDeletePopup, setOpenDeletePopup] = useState<boolean>(false);\n  const Navigator = useNavigate();\n  const deleteSuccess = useAppSelector(\n    (state: any) => state.products.deleteSuccess\n  );\n  const { t } = useTranslation(\"common\");\n  const [selectedRow, setSelectedRow] = useState<any>(null);\n  const [deleteLoading, setDeleteLoading] = useState<boolean>(false);\n  const [addProduct, setOpenAddProduct] = useState<boolean>(false);\n  const handleClosedeletePopup = () => {\n    setOpenDeletePopup(false);\n  };\n\n  const Dispatch = useAppDispatch();\n  useEffect(() => {\n    Dispatch(productsList());\n  }, []);\n\n  useEffect(() => {\n    if (data) {\n      console.log(\"data123\", data);\n\n      let colTmp: any[] = [\n        {\n          name: t(\"productCode\"),\n          selector: (row: any) => row.code,\n          sortable: true,\n        },\n        {\n          name: t(\"title\"),\n          selector: (row: any) => row.name,\n          sortable: true,\n        },\n        {\n          name: t(\"productType\"),\n          selector: (row: any) => (row.custom ? t(\"custom\") : t(\"normal\")),\n          sortable: true,\n        },\n        {\n          name: t(\"countType\"),\n          selector: (row: any) => (t(row.count_type)),\n          sortable: true,\n        },\n        {\n          name: t(\"status\"),\n          selector: (row: any) => t(\"active\"),\n          sortable: true,\n        },\n      ];\n\n      colTmp.push({\n        allowOverflow: true,\n        button: true,\n        width: \"120px\",\n        cell: (row: any) => (\n          <TableAction\n            items={[\n              {\n                icon: <Edit variant=\"Bold\" />,\n                text: t('edit'),\n                name: \"edit\",\n              },\n              row.custom && {\n                icon: <ArrangeVertical variant=\"Bold\" />,\n                text: t('manageSteps'),\n                name: \"steps\",\n              },\n              {\n                icon: <Trash variant={\"Bold\"} />,\n                text: t('delete'),\n                name: \"delete\",\n              },\n            ].filter(Boolean)}\n            handleAction={handleTableAction}\n            row={row}\n          />\n        ),\n      });\n\n      setColumns([...colTmp]);\n\n      console.log(\"data.orders\", data.cols);\n    }\n  }, [data]);\n  const handleTableAction = (row: any, action: string) => {\n    console.log(\"row\", row);\n    console.log(\"action\", action);\n    setSelectedRow(row);\n    switch (action) {\n      case \"delete\":\n        setOpenDeletePopup(true);\n        break;\n      case \"steps\":\n        Navigator(`${row.code}/steps`);\n        break;\n      case \"edit\":\n        setOpenAddProduct(true);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleDeleteProduct = () => {\n    setDeleteLoading(true);\n    console.log(\"selectedRow\", selectedRow);\n    Dispatch(deleteProduct(selectedRow.id));\n    // setTimeout(() => {\n    //   setDeleteLoading(false);\n    //   setOpenDeletePopup(false);\n    //   SnackbarUtils.success(t(\"deleteProductSuccess\"));\n    // }, 1000);\n  };\n  useEffect(() => {\n    if (deleteSuccess) {\n      setDeleteLoading(false);\n      setOpenDeletePopup(false);\n      SnackbarUtils.success(t(\"deleteProductSuccess\"));\n      setTimeout(() => {\n        Dispatch(setDeleteSuccess(false));\n      }, 100);\n    }\n  }, [deleteSuccess]);\n  const handleCloseAddProductDialog = () => {\n    setOpenAddProduct(false);\n    setSelectedRow(null);\n  };\n  return (\n    <div className=\"w-full h-full\">\n      <AddProductDialog\n        open={addProduct}\n        handleClose={handleCloseAddProductDialog}\n        selectedProductId={selectedRow?.id || undefined}\n      />\n\n      <DeletePopup\n        title={t(\"deleteProductConfirmation\")}\n        open={openDeletePopup}\n        onClose={handleClosedeletePopup}\n        handleConfirm={handleDeleteProduct}\n        loading={deleteLoading}\n      />\n      <Breadcrumb\n        actions={\n          <>\n            <div className=\"w-[186px] ms-4\">\n              <Button\n                icon={<Add />}\n                text={t(\"addProduct\")}\n                onClick={() => setOpenAddProduct(true)}\n              />\n            </div>\n          </>\n        }\n        title={t(\"products\")}\n      />\n      <div>\n        {/* <button onClick={zipArray}>zip</button>\n        <button onClick={unzipArray}>unzip</button> */}\n\n        {data ? (\n          <Table columns={columns} data={data || []} />\n        ) : (\n          <TableSkeleton />\n        )}\n      </div>\n    </div>\n  );\n};\nexport default Products;\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","productActions","productSlice","productsList","dispatch","getState","productService","response","productStepsList","code","getProductStepInfo","id","productStepInfo","saveProduct","product","updateProduct","productId","setSaveSuccess","success","deleteProduct","setDeleteSuccess","Api","get","data","roles","post","join","name","custom","price","count_type","status","description","images","map","image","hashCode","put","delete","step_id","stepId","field_id","fieldId","option_id","optionId","next_step_id","nextStepId","setProductStepRoles","addProductConditions","getProduct","open","onClose","title","handleConfirm","loading","t","useTranslation","className","variant","disabled","text","color","size","onClick","bordered","Transition","React","props","ref","direction","children","TransitionComponent","keepMounted","sx","width","Array","from","keys","item","index","height","animation","handleClose","selectedProductId","Dispatch","saveSuccess","state","products","useState","selectedProduct","setSelectedProduct","useEffect","resp","getProductInfo","submitdisabled","setSubmitDisabled","validationSchema","Yup","shape","required","ns","when","is","then","otherwise","formik","useFormik","initialValues","onSubmit","values","_handleClose","undefined","resetForm","SnackbarUtils","console","log","setFieldValue","details","setValues","SideDialog","headerText","headerIcon","Add","FullscreenLoading","handleSubmit","TextField","label","type","placeholder","options","value","UploadGroup","imageOnly","setPending","TextArea","Button","gray","icon","Edit2","columns","setColumns","openDeletePopup","setOpenDeletePopup","Navigator","useNavigate","deleteSuccess","selectedRow","setSelectedRow","deleteLoading","setDeleteLoading","addProduct","setOpenAddProduct","colTmp","selector","row","sortable","push","allowOverflow","button","cell","TableAction","items","Edit","ArrangeVertical","Trash","filter","Boolean","handleAction","handleTableAction","cols","action","setTimeout","DeletePopup","Breadcrumb","actions","Table","TableSkeleton"],"sourceRoot":""}