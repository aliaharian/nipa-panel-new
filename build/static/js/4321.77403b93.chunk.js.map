{"version":3,"file":"static/js/4321.77403b93.chunk.js","mappings":"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","sources":["app/queries/orders/services.ts","app/queries/orders/hooks.ts","components/accordion/Accordion.tsx","components/emptyListPlaceholder/EmptyListPlaceholder.tsx","components/form/TextField.tsx","components/orders/OrderFiltersDialog.tsx","pages/orders/index.tsx"],"sourcesContent":["import Api from \"app/service/Api\";\n\nasync function ordersList() {\n    let response = await Api()?.get(\"/order\");\n    return response?.data;\n}\n\nasync function orderGroupsList() {\n    let response = await Api()?.get(\"/orderGroup\");\n    return response?.data;\n}\nasync function orderDetail(orderId: number) {\n    let response = await Api()?.get(\"/order/\" + orderId);\n    return response?.data;\n}\n\n\nexport {\n    ordersList,\n    orderGroupsList,\n    orderDetail\n}","import {useQuery} from \"@tanstack/react-query\";\nimport {orderGroupsList, ordersList, orderDetail} from \"./services\";\n\nconst useOrderGroupsList = () => {\n    const {data} = useQuery({\n        queryKey: [\"orderGroups\"],\n        queryFn: async () => {\n            return await orderGroupsList();\n        }\n    })\n    return {\n        data\n    }\n}\nconst useOrdersList = () => {\n    const {data} = useQuery({\n        queryKey: [\"orders\"],\n        queryFn: async () => {\n            return await ordersList();\n        }\n    })\n    return {\n        data\n    }\n}\nconst useOrdersDetail = (id: number) => {\n    const {data} = useQuery({\n        queryKey: [\"order\", {\"id\": id}],\n        queryFn: async () => {\n            return await orderDetail(id);\n        },\n    })\n    return {\n        data\n    }\n}\n\n\nexport {\n    useOrderGroupsList,\n    useOrdersList,\n    useOrdersDetail\n}","import { ArrowSquareUp, ArrowUp2 } from \"iconsax-react\";\nimport { useState } from \"react\";\n\ntype AccordionProps = {\n  children: React.ReactNode;\n  title: string;\n};\nconst Accordion = ({ children, title }: AccordionProps) => {\n  const [open, setOpen] = useState<boolean>(false);\n\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div className=\"mb-[20px]\">\n      <div\n        onClick={handleToggle}\n        className=\"border border-text-300 w-full h-[72px] bg-white flex items-center justify-between px-[16px] rounded-[5px]\"\n      >\n        <p className=\"text-primary-dark text-[16px] font-bold cursor-pointer\">\n          {title}\n        </p>\n        <div className=\"w-[28px] h-[28px] bg-text-300 flex items-center justify-center rounded-[8px] cursor-pointer hover:bg-text-400 transition-all\">\n          <ArrowUp2\n            className={`w-[18px] h-[18px] transition-all ${\n              open ? \"rotate-0\" : \"rotate-180\"\n            }`}\n          />\n        </div>\n      </div>\n\n      <div\n        className={`overflow-hidden ${\n          open ? \"h-auto opacity-100\" : \"h-0 opacity-0\"\n        } w-full transition-all mt-[20px] flex flex-col justify-start items-start`}\n      >\n        <div className=\"border border-text-300 bg-white rounded-[5px] w-full h-full\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Accordion;\n","import { SearchNormal } from \"iconsax-react\";\nimport { ReactNode } from \"react\";\n\nconst EmptyListPlaceholder = ({ title, subTitle, action }: { title: string, subTitle?: string, action?: ReactNode }) => {\n    return (\n        <div className=\"w-full flex flex-col items-center justify-center py-4\">\n\n            <div className=\"svg:w-[40px] svg:h-[40px] mb-4 svg:text-text-500\">\n                <SearchNormal />\n\n            </div>\n            <p className=\"text-[14px] text-text-600 mb-4\">\n                {title}\n            </p>\n            {\n                subTitle &&\n                <p className=\"text-[12px] text-text-600 mb-4\">\n                {subTitle}\n                </p>\n            }\n            {\n                action &&\n                <div className=\"w-[130px]\">\n                    {action}\n                </div>\n            }\n\n        </div>\n    );\n}\nexport default EmptyListPlaceholder;","import React from \"react\";\nimport ReactInputMask from \"react-input-mask\";\nimport { Input, InputAdornment, TextField as MuiTextField, OutlinedInput } from \"@mui/material\";\nimport transform from \"app/utils/transform\";\nimport { useTranslation } from \"react-i18next\";\n\ntype TextFieldProps = {\n  name: string;\n  label?: any;\n  type?: string;\n  placeholder?: string | null;\n  formik?: any;\n  mask?: string;\n  maskChar?: string;\n  inputActions?: any;\n  className?: string;\n  normal?: boolean;\n  endEndorement?: any;\n  multiline?: boolean;\n  readonly?: boolean;\n  value?: any;\n};\nconst TextField = ({\n  name,\n  label,\n  formik,\n  type = \"text\",\n  placeholder,\n  maskChar,\n  className,\n  mask,\n  inputActions,\n  normal,\n  endEndorement,\n  multiline,\n  readonly,\n  value\n}: TextFieldProps) => {\n  const { i18n } = useTranslation();\n  return (\n    <div\n      className={`flex flex-col w-full items-start justify-start ${className}`}\n    >\n      {label && <div className=\"text-sm mb-2 flex justify-between w-full\">\n        <label htmlFor={name} className=\"font-normal !text-xs\">{label}</label>\n        {inputActions?.()}\n      </div>}\n\n      {!normal ? <ReactInputMask\n        mask={mask ? mask : \"\"}\n        maskChar={maskChar ? maskChar : \" \"}\n        value={value || formik?.values?.[name]}\n        type={type}\n        dir={i18n.dir()}\n        className={`w-full h-12 border border-text-400 rounded-[8px] p-2 text-sm focus:border-primary-main !outline-none invalid:border-error-primary ${formik?.errors?.[name] && formik?.touched?.[name]\n          ? \"!border-error-primary\"\n          : \"\"\n          }`}\n        id={name}\n        name={name}\n        style={{ direction: type == \"tel\" ? \"ltr\" : i18n.dir() }}\n        placeholder={placeholder || \"\"}\n        readOnly={readonly}\n        onChange={(e) => {\n          //formik handlechange without mask\n          formik?.handleChange({\n            target: {\n              name,\n              value: e.target.value,\n              // value: e.target.value.replace(/ /g, \"\"),\n            },\n          });\n        }}\n      ></ReactInputMask> :\n\n        <Input\n          value={type == \"number\" ?\n            //convert to persian digits put commas\n            transform.toPersianDigitsPutCommas(\n            formik?.values?.[name]\n            )\n            : formik?.values?.[name]\n          }\n          type={\"text\"}\n          readOnly={readonly}\n          id={name}\n          name={name}\n          multiline={multiline}\n          rows={multiline ? 4 : 1}\n          placeholder={placeholder || \"\"}\n          onChange={(e) => {\n            const value = transform.convetToEnglishDigitsRemoveCommas(e.target.value);\n            let res = \"\";\n            if (type == \"number\") {\n              //replace all except numbers and dots with \"\"\n              let tmp = value.replace(/[^0-9.]/g, \"\").split(\".\");\n              if (tmp.length > 1) {\n                res = (tmp[0] || \"0\") + \".\" + (tmp[1] || \"\");\n              } else {\n                res = tmp[0];\n              }\n              \n            } else {\n              res = e.target.value\n            }\n\n            formik?.handleChange({\n              target: {\n                name,\n                value: res\n              },\n            });\n          }}\n\n          disableUnderline\n          endAdornment={<InputAdornment position=\"end\" >{endEndorement}</InputAdornment>}\n          className={`!text-sm text-text-400 w-full ${multiline ? \"h-[100px] resize-none !p-2\" : \"h-12\"\n            } border border-text-400 rounded-[8px] p-2 focus:border-primary-main !outline-none invalid:border-error-primary ${formik?.errors?.[name] && formik?.touched?.[name]\n              ? \"!border-error-primary\"\n              : \"\"\n            }`}\n        />\n      }\n\n      {formik?.errors?.[name] && formik?.touched?.[name] && (\n        <p className=\"text-error-primary text-[10px] mt-1\">\n          {formik?.errors?.[name]}\n        </p>\n      )}\n    </div>\n  );\n};\nexport default TextField;\n","import { Add } from \"iconsax-react\";\nimport SideDialog from \"../sideDialog/SideDialog\";\nimport TextField from \"../form/TextField\";\nimport { useFormik } from \"formik\";\n\ntype OrderFiltersDialogProps = {\n  open: boolean;\n  handleClose?: () => void;\n};\n\ntype initialValues = {\n  mobile: string;\n};\n\nconst OrderFiltersDialog = ({ open, handleClose }: OrderFiltersDialogProps) => {\n  const initialValues: initialValues = {\n    mobile: \"\",\n  };\n\n  const formik = useFormik({\n    initialValues,\n    // validationSchema,\n    onSubmit: (values) => {\n      console.log(\"values\", values);\n    },\n  });\n\n  return (\n    <SideDialog\n      headerText={\"افزودن کاربر جدید\"}\n      headerIcon={<Add />}\n      open={open}\n      handleClose={handleClose}\n    >\n      <div className=\"p-7\">\n        <form onSubmit={formik.handleSubmit} className=\"w-full\">\n          <div className=\"mt-7 w-full grid grid-cols-2 gap-x-5 gap-y-7\">\n            <TextField\n              name=\"mobile\"\n              label=\"شماره موبایل\"\n              type=\"text\"\n              placeholder=\"شماره همراه خود را وارد نمایید\"\n              formik={formik}\n            />\n            <TextField\n              name=\"mobile\"\n              label=\"شماره موبایل\"\n              type=\"tel\"\n              placeholder=\"شماره همراه خود را وارد نمایید\"\n              formik={formik}\n            />\n          </div>\n          {/* <div className=\"mt-20\">\n          <Button text=\"تایید و دریافت کد\" type=\"submit\" />\n          <Button text=\"ورود با کلمه عبور\" href={\"/auth/verify\"} simple/>\n        </div> */}\n        </form>\n      </div>\n    </SideDialog>\n  );\n};\n\nexport default OrderFiltersDialog;\n","import {Add, Additem, Edit, Eye, Setting4, Trash} from \"iconsax-react\";\nimport {useCallback, useEffect, useState} from \"react\";\nimport Breadcrumb from \"../../components/breadcrumb/Breadcrumb\";\nimport Button from \"../../components/button/Button\";\nimport OrderFiltersDialog from \"../../components/orders/OrderFiltersDialog\";\nimport Table from \"../../components/table/Table\";\nimport TableAction from \"../../components/table/TableAction\";\nimport {Skeleton} from \"@mui/material\";\nimport Accordion from \"components/accordion/Accordion\";\nimport transform from \"app/utils/transform\";\nimport {useNavigate} from \"react-router-dom\";\nimport EmptyListPlaceholder from \"components/emptyListPlaceholder/EmptyListPlaceholder\";\nimport {useTranslation} from \"react-i18next\";\nimport {useOrderGroupsList, useOrdersList} from \"app/queries/orders/hooks\";\n\nconst Orders = () => {\n    const [columns, setColumns] = useState<any[]>([]);\n    const [openFilter, setOpenFilter] = useState<boolean>(false);\n    const Navigate = useNavigate();\n    const {t} = useTranslation();\n    const {data: orderGroups} = useOrderGroupsList();\n    const {data} = useOrdersList();\n\n    const handleOrderAction = (row: any, action: string) => {\n        switch (action) {\n            case \"edit\":\n                break;\n            case \"view\":\n                Navigate(`/orders/${row.id}`);\n                break;\n            // case \"completeOrder\":\n            // Navigate(`/orders/${row.id}/complete`);\n            //   break;\n            case \"nextStep\":\n                Navigate(`/orders/${row.id}/${row.nextStep.id}/showForm`);\n                break;\n            case \"delete\":\n                break;\n            default:\n                break;\n        }\n    };\n\n    //for prevent to re-creating this function\n    const handleOrderActionCallback = useCallback(handleOrderAction,[Navigate])\n\n    useEffect(() => {\n        if (data) {\n            let colTmp: any[] = [\n                {\n                    name: t(\"orderCode\"),\n                    selector: (row: any) => row.id,\n                    sortable: true,\n                },\n                {\n                    name: t(\"productName\"),\n                    selector: (row: any) => row.product.name,\n                },\n                {\n                    name: t(\"submitDate\"),\n                    selector: (row: any) => row.jalali_date,\n                },\n                {\n                    name: t(\"customerName\"),\n                    selector: (\n                        row: any //find order group from row.order_group[0].id in orderGroups and get customer name\n                    ) => row.customer\n                },\n                {\n                    name: t(\"count\"),\n                    selector: (row: any) => transform.toPersianDigits(row.count || 1),\n                },\n            ];\n            //append cols to columns\n            data.cols.forEach((col: any) => {\n                colTmp.push({\n                    name: col.field_label,\n                    selector: (row: any) =>\n                        row.additional_data?.find(\n                            (item: any) => item.fild_name === col.fild_name\n                        )?.field_value?.label ||\n                        row.additional_data?.find(\n                            (item: any) => item.fild_name === col.fild_name\n                        )?.field_value || <div className=\"bg-error-secondary\">{t('dontHave')}</div>,\n                });\n            });\n            colTmp.push({\n                name: t(\"status\"),\n                selector: (row: any) => row?.step?.step_name,\n            });\n            colTmp.push({\n                allowOverflow: true,\n                button: true,\n                width: \"120px\",\n                cell: (row: any) => {\n                    //////////////\n                    const actions: any[] = [];\n\n                    actions.push({\n                        icon: <Eye variant=\"Bold\"/>,\n                        text: t(\"viewDetails\"),\n                        name: \"view\",\n                    });\n                    //my roles\n                    const myRoles = JSON.parse(\n                        localStorage.getItem(\"nipa_user\") || \"{}\"\n                    )?.roles;\n\n                    let atLeastOneMatch = false;\n                    if (myRoles) {\n                        atLeastOneMatch = row.nextStep?.roles?.some((role: any) =>\n                            myRoles.some((myRole: any) => myRole.slug === role.slug)\n                        );\n                    }\n                    if (\n                        atLeastOneMatch\n                        // data.permissions.canCompelete &&\n                        // row.step.global_step.description === \"initialOrder\"\n                    ) {\n                        actions.push({\n                            icon: <Additem variant={\"Bold\"}/>,\n                            text: row.nextStep.step_name || \"\",\n                            name: \"nextStep\",\n                        });\n                    }\n                    if (data.permissions.canEdit) {\n                        actions.push({\n                            icon: <Edit variant=\"Bold\"/>,\n                            text: t('edit'),\n                            name: \"edit\",\n                        });\n                    }\n                    if (data.permissions.canDelete) {\n                        actions.push({\n                            icon: <Trash variant={\"Bold\"}/>,\n                            text: t('delete'),\n                            name: \"delete\",\n                        });\n                    }\n\n                    /////////////////////\n                    return (\n                        <TableAction\n                            handleAction={handleOrderActionCallback}\n                            items={[...actions]}\n                            row={row}\n                        />\n                    );\n                },\n            });\n\n            setColumns([...colTmp]);\n\n            console.log(\"data.orders\", data.cols);\n        }\n    }, [data,handleOrderActionCallback, t]);\n    return (\n        <div className=\"w-full h-full\">\n            <OrderFiltersDialog\n                open={openFilter}\n                handleClose={() => setOpenFilter(false)}\n            />\n            <Breadcrumb\n                actions={\n                    orderGroups?.length > 0 &&\n                    <>\n                        {\" \"}\n                        <div className=\"w-[186px]\">\n                            <Button\n                                icon={<Setting4/>}\n                                text={t('advancedFilter')}\n                                onClick={() => setOpenFilter(true)}\n                                simple\n                            />\n                        </div>\n                        <div className=\"w-[186px] ms-4\">\n                            <Button icon={<Add/>} text={t(\"addNewOrder\")} href=\"create\"/>\n                        </div>\n                    </>\n                }\n                title={t('orders')}\n            />\n            <div>\n                <div className=\"w-full\">\n                    {orderGroups ?\n                        orderGroups.length > 0 ?\n                            orderGroups.map((item: any) => (\n                                <Accordion\n                                    key={item.id}\n                                    title={t(\"orderInfoTitle\", {\n                                        code: transform.toPersianDigits(item.id), date: transform.toPersianDigits(\n                                            transform.renderChatTime(\n                                                transform.dateToTimestamp(item.created_at)\n                                            )\n                                        ), user: item.user.name\n                                            ? item.user.name + \" \" + item.user.last_name\n                                            : item.user.mobile\n\n                                    })}\n                                >\n                                    <Table\n                                        columns={columns}\n                                        data={data?.orders.filter(\n                                            (x: any) => x.order_group?.[0]?.id === item.id\n                                        )}\n                                    />\n                                </Accordion>\n                            )) :\n                            <EmptyListPlaceholder\n                                title={t(\"noOrdersFound\")}\n                                subTitle={t(\"orderFirstOrder\") || \"\"}\n                                action={\n                                    <Button\n                                        icon={<Add/>}\n                                        text={t(\"submitOrder\")}\n                                        href=\"create\"\n                                        sm\n                                    />\n                                }\n                            />\n                        : (\n                            <div className=\"grid grid-cols-1 gap-[40px]\">\n                                {Array.from(Array(3).keys()).map((item, index) => (\n                                    <Skeleton\n                                        key={index}\n                                        variant=\"rounded\"\n                                        width={\"100%\"}\n                                        height={72}\n                                        animation=\"wave\"\n                                    />\n                                ))}\n                            </div>\n                        )}\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default Orders;\n"],"names":["ordersList","Api","get","response","data","orderGroupsList","orderDetail","orderId","useOrderGroupsList","useQuery","queryKey","queryFn","useOrdersList","useOrdersDetail","id","children","title","useState","open","setOpen","className","onClick","subTitle","action","name","label","formik","type","placeholder","maskChar","mask","inputActions","normal","endEndorement","multiline","readonly","value","i18n","useTranslation","htmlFor","transform","values","readOnly","rows","onChange","e","target","res","tmp","replace","split","length","handleChange","disableUnderline","endAdornment","position","errors","touched","dir","style","direction","handleClose","useFormik","initialValues","mobile","onSubmit","console","log","SideDialog","headerText","headerIcon","Add","handleSubmit","TextField","columns","setColumns","openFilter","setOpenFilter","Navigate","useNavigate","t","orderGroups","handleOrderActionCallback","useCallback","row","nextStep","useEffect","colTmp","selector","sortable","product","jalali_date","customer","count","cols","forEach","col","push","field_label","additional_data","find","item","fild_name","field_value","step","step_name","allowOverflow","button","width","cell","actions","icon","Eye","variant","text","myRoles","JSON","parse","localStorage","getItem","roles","atLeastOneMatch","some","role","myRole","slug","Additem","permissions","canEdit","Edit","canDelete","Trash","TableAction","handleAction","items","Breadcrumb","Button","Setting4","simple","href","map","Accordion","code","date","created_at","user","last_name","Table","orders","filter","x","order_group","EmptyListPlaceholder","sm","Array","from","keys","index","Skeleton","height","animation"],"sourceRoot":""}