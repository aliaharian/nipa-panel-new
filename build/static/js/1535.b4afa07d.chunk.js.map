{"version":3,"file":"static/js/1535.b4afa07d.chunk.js","mappings":"wKAAIA,E,iIC+BJ,EA1Ba,SAAH,GAAmD,IAA7CC,EAAK,EAALA,MAAOC,EAAK,EAALA,MAAOC,EAAY,EAAZA,aAC5B,OACE,gBAAKC,UAAU,2FAA0F,SACtGH,EAAMI,KAAI,SAACC,EAAUC,GAAY,OAChC,iBAEEH,UAAU,0GACVI,QAAS,kBAAML,EAAaG,EAAKJ,MAAM,EAAC,WAExC,cACEE,UAAS,8EACPE,EAAKJ,QAAUA,EAAQ,iDAAmD,iBACzE,SAEFI,EAAKG,SAER,gBACEL,UAAS,iBACPE,EAAKJ,QAAUA,EAAQ,0BAA4B,MAAK,yDAbzDK,EAgBC,KAId,E,wCCFA,EArBqB,SAAH,GAAoD,IAA9CG,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAI/B,OACE,gBACEH,QALgB,WAClBG,GAAYD,EACd,EAIIN,UAAS,kDACPM,EAAU,sBAAwB,kBAAiB,8BAEnDA,EAAU,gBAAkB,cAAa,2BACjB,UAE1B,gBACEN,UAAS,kBACPM,EAAU,kBAAoB,cAAa,oBAKrD,ECZA,EARe,SAAH,GAAqD,IAA/CA,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAAYF,EAAK,EAALA,MACrC,OACE,iBAAKL,UAAU,+GAA8G,WAC3H,cAAGA,UAAU,2CAA2CI,QAAS,kBAAIG,GAAYD,EAAQ,EAAC,SAAED,KAC5F,SAAC,EAAY,CAACC,QAASA,EAASC,WAAYA,MAGlD,E,8BCuGA,EA9F8B,SAAH,GAMQ,IALjCC,EAAI,EAAJA,KACAC,EAAW,EAAXA,YACAC,EAAK,EAALA,MACAC,EAAe,EAAfA,gBACAC,EAAc,EAAdA,eAEMC,EAA+B,CACnCV,OAAqB,OAAdS,QAAc,IAAdA,OAAc,EAAdA,EAAgBT,SAAU,EACjCW,IAAkB,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBT,QAAS,EAC7BY,WAAyB,OAAdH,QAAc,IAAdA,OAAc,EAAdA,EAAgBP,QAAS,GACpCW,YAA0B,OAAdJ,QAAc,IAAdA,OAAc,EAAdA,EAAgBd,QAAS,GACrCmB,UAAyB,OAAdL,QAAc,IAAdA,OAAc,EAAdA,EAAgBK,WAGvBC,GAASC,EAAAA,EAAAA,IAAU,CACvBN,cAAAA,EAEAO,SAAU,SAACC,GACTC,QAAQC,IAAI,SAAUF,GACtBV,EAAgBU,GAChBH,EAAOM,cAAc,YAAa,IAClCN,EAAOM,cAAc,aAAc,IACnCN,EAAOM,cAAc,SAAU,GAC/BN,EAAOM,cAAc,aAAc,GAExB,OAAXf,QAAW,IAAXA,GAAAA,GACF,KAEFgB,EAAAA,EAAAA,YAAU,WACJb,IACFM,EAAOM,cAAc,YAAaZ,EAAeP,OACjDa,EAAOM,cAAc,aAAcZ,EAAed,OAClDoB,EAAOM,cAAc,QAASZ,EAAeT,OAC7Ce,EAAOM,cAAc,KAAMZ,EAAeE,IAC1CI,EAAOM,cAAc,YAAaZ,EAAeK,WAErD,GAAG,CAACL,IAEJ,IAGMc,EAAe,WACR,OAAXjB,QAAW,IAAXA,GAAAA,IACAS,EAAOM,cAAc,YAAa,IAClCN,EAAOM,cAAc,aAAc,IACnCN,EAAOM,cAAc,SAAU,EACjC,EACA,OACE,UAACG,EAAA,EAAU,CACTC,WAAU,UAAKhB,EAAiB,uCAAW,uCAAQ,YAAIF,EAAML,OAC7DwB,YAAY,SAACC,EAAA,EAAG,IAChBtB,KAAMA,EACNC,YAAaiB,EAAa,WAE1B,SAACC,EAAA,UAAkB,WACjB,gBAAK3B,UAAU,MAAK,UAClB,iBAAMoB,SAAUF,EAAOa,aAAc/B,UAAU,SAAQ,UACrD,iBAAKA,UAAU,+CAA8C,WAC3D,SAACgC,EAAA,EAAS,CACRC,KAAK,YACL5B,MAAM,0DACN6B,KAAK,OACLC,YAAY,qIACZjB,OAAQA,KAEV,SAACc,EAAA,EAAS,CACRC,KAAK,aACL5B,MAAM,oDACN6B,KAAK,OACLC,YAAY,+HACZjB,OAAQA,cAMlB,SAACS,EAAA,SAAiB,WAChB,iBAAK3B,UAAU,gFAA+E,WAC5F,gBAAKA,UAAU,YAAW,UACxB,SAACoC,EAAA,EAAM,CAACC,KAAK,uCAASjC,QAASsB,EAAcY,MAAI,OAEnD,gBAAKtC,UAAU,YAAW,UACxB,SAACoC,EAAA,EAAM,CACLC,KAAI,UAAKzB,EAAiB,uCAAW,uCAAQ,YAAIF,EAAML,OACvDD,QA9Ca,WACvBc,EAAOqB,YACT,aAmDF,E,6BCsLA,EAzQkC,SAAH,GAYQ,IAAD,EAXpCC,EAAa,EAAbA,cACAC,EAAiB,EAAjBA,kBACA9B,EAAe,EAAfA,gBACA+B,EAAkB,EAAlBA,mBACAC,EAAkB,EAAlBA,mBACAC,EAAS,EAATA,UACAC,EAAY,EAAZA,aACAC,EAAQ,EAARA,SACAC,EAAW,EAAXA,YACAC,EAAa,EAAbA,cACAC,EAAgB,EAAhBA,iBAEA,GACEC,EAAAA,EAAAA,WAAkB,GAAM,eADnBC,EAAyB,KAAEC,EAA4B,KAE9D,GAA4CF,EAAAA,EAAAA,YAAsB,eAA3DtC,EAAc,KAAEyC,EAAiB,KAClCC,GAAaC,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMC,UAAUH,UAAU,IAC/DI,GAAMC,EAAAA,EAAAA,MAAND,EACFE,GAAWC,EAAAA,EAAAA,KACjBvC,QAAQC,IAAI,WAAYiB,GACxB,IAAMsB,EAAqB,SAACC,GAC1B,GAAIvB,EAAe,CACjB,IAAIwB,GAAc,UAAQxB,GAC1B,GAAqB,cAAjBuB,EAAEE,OAAOhC,KAAsB,CACjC,IAGkB,EAHdiC,EAAyB,OAAVZ,QAAU,IAAVA,OAAU,EAAVA,EAAYa,MAAK,SAACC,GAAC,OAAKA,EAAEtD,IAAMiD,EAAEE,OAAOnE,KAAK,IAGjE,GAFAwB,QAAQC,IAAI,eAAgB2C,GAExBA,EACFF,GAAG,kBACEA,GAAG,mBACLD,EAAEE,OAAOhC,KAAOiC,IAAY,yBACF,OAAZA,QAAY,IAAZA,OAAY,EAAZA,EAAcpD,KAAE,0BACfoD,EAAarE,MAAMI,KAAI,SAACC,GAAI,MAAM,CAChDY,GAAIZ,EAAKY,GACTT,OAAO,uBAAIH,EAAK+B,OAChBhB,UAAWf,EAAKY,GAChBhB,MAAOI,EAAKmE,KACb,KAAE,IAEL5B,GAAkB,UAAKuB,GAE3B,MACEA,GAAG,kBACEA,GAAG,cACLD,EAAEE,OAAOhC,KAAO8B,EAAEE,OAAOnE,QAE5B2C,GAAkB,UAAKuB,GAE3B,CACF,GACAvC,EAAAA,EAAAA,YAAU,YACP6B,GAAcM,GAASU,EAAAA,EAAAA,KAC1B,GAAG,IACH,IAqBMC,EAA6B,SAACrE,GAEhB,IAAD,GADjBoB,QAAQC,IAAI,MAAOrB,GACX,OAAJA,QAAI,IAAJA,GAAAA,EAAMG,QACRgD,EAAkB,CAChBlD,MAAoB,OAAbqC,QAAa,IAAbA,GAAsB,QAAT,EAAbA,EAAegC,eAAO,WAAT,EAAb,EAAwBC,WAC7B,SAACC,GAAM,OAAKA,EAAO5E,QAAUI,EAAKJ,KAAK,IAEzCA,MAAOI,EAAKJ,MACZO,MAAOH,EAAKG,MAAMsE,MAAMC,SACxB9D,GAAIZ,EAAKY,GACTG,UAAWf,EAAKe,YAGhBuB,GAA8B,OAAbA,QAAa,IAAbA,GAAAA,EAAegC,SAClCpB,GAA6B,EAEjC,EAUA,OACE,yBACIZ,EAEEA,EAAcqC,mBAChB,uBAAG,sOACDrC,EAAcsC,UAChB,uBAAG,2JAEH,iBAAK9E,UAAU,sDAAqD,WAClE,eAAGA,UAAU,0BAAyB,UAAC,gDAC1BwC,EAAcN,SAE3B,SAACF,EAAA,EAAS,CACRhC,UAAU,YACViC,KAAM,QACN5B,MAAO,0DACP6B,KAAK,OACLC,YAAa,0DACbjB,OAAQ,CACNnB,aAAc,SAACgE,GAAM,OAAKD,EAAmBC,EAAE,EAC/C1C,OAAQ,CACNhB,MAAOmC,EAAcnC,WAI3B,SAAC2B,EAAA,EAAS,CACRhC,UAAU,YACViC,KAAM,OACN5B,MAAO,oDACP6B,KAAK,OACLC,YAAa,oDACbjB,OAAQ,CACNnB,aAAc,SAACgE,GAAM,OAAKD,EAAmBC,EAAE,EAC/C1C,OAAQ,CACNY,KAAMO,EAAcP,UAI1B,SAACD,EAAA,EAAS,CACRhC,UAAU,QACViC,KAAM,cACN5B,MAAO,gEACP6B,KAAK,OACLC,YAAa,gEACbjB,OAAQ,CACNnB,aAAc,SAACgE,GAAM,OAAKD,EAAmBC,EAAE,EAC/C1C,OAAQ,CACNc,YAAaK,EAAcL,iBAIjC,gBAAKnC,UAAU,mBAAkB,UAC/B,SAAC,EAAM,CACLM,QAASwC,EACTvC,WAAYwC,EACZ1C,MAAO,6HAIVmC,EAAcgC,SACb,gBAAKxE,UAAU,mBAAkB,UAC/B,SAAC,EAAM,CACLM,QAAS0C,EACTzC,WAAY0C,EACZ5C,MAAOqD,EAAE,mBAAqB,OAIlC,GAGDlB,EAAcgC,SAAWxB,GACxB,SAAC,IAAQ,CACPhD,UAAU,kBACViC,KAAM,aACN5B,MAAO,0DACPmE,QACElB,EACIA,EAAWrD,KAAI,SAAC8E,GACd,MAAO,CACL1E,OAAO,uBAAI0E,EAAK9C,OAChBnC,MAAOiF,EAAKjE,GAAGkE,WAEnB,IACA,GAEN7C,YAAa,gEACbjB,OAAQ,CACNnB,aAAc,SAACgE,GAAM,OAAKD,EAAmBC,EAAE,EAC/C1C,OAAQ,CACN4D,WAAoC,QAA1B,EAAEzC,EAAcyC,kBAAU,aAAxB,EAA0BnE,GAAGkE,eAK/C,GAGsB,eAAvBxC,EAAcN,OACb,gBAAKlC,UAAU,mBAAkB,UAC/B,SAAC,EAAM,CACLM,QAASsC,EACTrC,WAAYsC,EACZxC,MAAOqD,EAAE,cAAgB,OAK9BlB,EAAcgC,UAAYxB,GACzB,SAAC,EAAqB,CACpBxC,KAAM2C,EACN1C,YAzHwB,WAClC4C,OAAkB6B,GAClB9B,GAA6B,EAC/B,EAuHY1C,MAAO8B,EACP7B,gBAjKa,SAACT,EAAqBiF,GACzC3C,SACiB0C,IAAfhF,EAAKC,QAAuC,IAAhBD,EAAKC,MACnCwC,EACEH,EAAc1B,GACd,CACET,OAAO,uBAAIH,EAAKa,YAChBjB,MAAOI,EAAKc,WAAWgE,WACvBlE,GAAIZ,EAAKY,GACTG,UAAWf,EAAKe,WAElBf,EAAKC,OAGPQ,EAAgB6B,EAAc1B,GAAI,CAChCT,OAAO,uBAAIH,EAAKa,YAChBjB,MAAOI,EAAKc,WAAWgE,aAI/B,EA8IYpE,eAAgBA,IAGlB,GAGD4B,EAAcgC,UAAYxB,GACzB,iBAAKhD,UAAU,mBAAkB,UAC9BwC,EAAcgC,QAAQvE,KACrB,SAACyE,EAAoBvE,GAAa,OAChC,iBAEEH,UAAU,iHAAgH,WAE1H,uBAAI0E,EAAOrE,SACX,iBAAKL,UAAU,OAAM,WACnB,gBACEI,QAAS,kBAAMmE,EAA2BG,EAAO,EACjD1E,UAAU,yGAAwG,UAElH,SAACoF,EAAA,EAAK,CAACpF,UAAU,yBAEnB,gBACEI,QAAS,kBA/IH,SAACsE,GACvBlC,GACFE,EAAmBF,EAAc1B,GAAI4D,EAAO5E,MAAO4E,EAAOzD,UAE9D,CA2IqCoE,CAAoBX,EAAO,EAC1C1E,UAAU,yGAAwG,UAElH,SAACsF,EAAA,EAAK,CAACtF,UAAU,6BAfhBG,EAkBD,KAGV,gBAAKH,UAAU,uCAAsC,UACnD,gBAAKA,UAAU,iCAAgC,UAC7C,SAACoC,EAAA,EAAM,CACLmD,MAAM,SAACzD,EAAA,EAAG,IACVO,KAAK,uCACLjC,QAASmE,WAMjB,OA3JJ,uBAAG,6MAiKX,E,6BC9QA,EAjBwB,SAAH,GAMQ,IAL3BgB,EAAI,EAAJA,KACAlF,EAAK,EAALA,MACAD,EAAO,EAAPA,QACA8B,EAAI,EAAJA,KACApB,EAAE,EAAFA,GAEA,OACE,iBACEV,QAAS,kBAAMA,EAAQ8B,EAAMpB,EAAG,EAChCd,UAAU,qGAAoG,WAE9G,yBAAMuF,KACN,cAAGvF,UAAU,kDAAiD,SAAEK,MAGtE,ENxBImF,EAAY,CAAC,QAAS,WAC1B,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAU3B,GAAU,IAAK,IAAI4B,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQhC,EAAOgC,GAAOD,EAAOC,GAAU,CAAE,OAAOhC,CAAQ,EAAUwB,EAASY,MAAMC,KAAMR,UAAY,CAClV,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAAG,IAAkEC,EAAKJ,EAAnE5B,EACzF,SAAuC+B,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAAG,IAA2DC,EAAKJ,EAA5D5B,EAAS,CAAC,EAAOwC,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAahC,EAAOgC,GAAOD,EAAOC,IAAQ,OAAOhC,CAAQ,CADhN2C,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBhC,EAAOgC,GAAOD,EAAOC,GAAQ,CAAE,OAAOhC,CAAQ,CAG3e,SAAS+C,EAASC,EAAMC,GACtB,IAAIC,EAAQF,EAAKE,MACfC,EAAUH,EAAKG,QACfzC,EAAQ4B,EAAyBU,EAAMzB,GACzC,OAAoB,gBAAoB,MAAOC,EAAS,CACtD4B,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKR,EACL,kBAAmBE,GAClBzC,GAAQwC,EAAqB,gBAAoB,QAAS,CAC3DrG,GAAIsG,GACHD,GAAS,KAAMvH,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3E+H,EAAG,iNACHC,OAAQ,UACRC,YAAa,IACbC,cAAe,QACfC,eAAgB,WAEpB,CACA,IO5BI,EAAOC,EP4BPC,EAA0B,aAAiBjB,GO3B3C,GP4BW,IO5BC,CAAC,QAAS,YAC1B,SAAS,IAAiS,OAApR,EAAWtB,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAU3B,GAAU,IAAK,IAAI4B,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQhC,EAAOgC,GAAOD,EAAOC,GAAU,CAAE,OAAOhC,CAAQ,EAAU,EAASoC,MAAMC,KAAMR,UAAY,CAClV,SAAS,EAAyBE,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAAG,IAAkEC,EAAKJ,EAAnE5B,EACzF,SAAuC+B,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAAG,IAA2DC,EAAKJ,EAA5D5B,EAAS,CAAC,EAAOwC,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAahC,EAAOgC,GAAOD,EAAOC,IAAQ,OAAOhC,CAAQ,CADhN,CAA8B+B,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBhC,EAAOgC,GAAOD,EAAOC,GAAQ,CAAE,OAAOhC,CAAQ,CAG3e,SAASiE,EAAgBjB,EAAMC,GAC7B,IAAIC,EAAQF,EAAKE,MACfC,EAAUH,EAAKG,QACfzC,EAAQ,EAAyBsC,EAAM,GACzC,OAAoB,gBAAoB,MAAO,EAAS,CACtDI,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKR,EACL,kBAAmBE,GAClBzC,GAAQwC,EAAqB,gBAAoB,QAAS,CAC3DrG,GAAIsG,GACHD,GAAS,KAAM,IAAU,EAAqB,gBAAoB,OAAQ,CAC3EQ,EAAG,2IACHC,OAAQ,UACRC,YAAa,IACbC,cAAe,QACfC,eAAgB,WACbC,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEL,EAAG,22EACHH,KAAM,aAEV,CACA,IC/BI,EAAO,ED+BP,EAA0B,aAAiBU,GC9B3C,GD+BW,IC/BC,CAAC,QAAS,YAC1B,SAAS,IAAiS,OAApR,EAAWxC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAU3B,GAAU,IAAK,IAAI4B,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQhC,EAAOgC,GAAOD,EAAOC,GAAU,CAAE,OAAOhC,CAAQ,EAAU,EAASoC,MAAMC,KAAMR,UAAY,CAClV,SAAS,EAAyBE,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAAG,IAAkEC,EAAKJ,EAAnE5B,EACzF,SAAuC+B,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAAG,IAA2DC,EAAKJ,EAA5D5B,EAAS,CAAC,EAAOwC,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAahC,EAAOgC,GAAOD,EAAOC,IAAQ,OAAOhC,CAAQ,CADhN,CAA8B+B,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBhC,EAAOgC,GAAOD,EAAOC,GAAQ,CAAE,OAAOhC,CAAQ,CAG3e,SAASkE,EAAYlB,EAAMC,GACzB,IAAIC,EAAQF,EAAKE,MACfC,EAAUH,EAAKG,QACfzC,EAAQ,EAAyBsC,EAAM,GACzC,OAAoB,gBAAoB,MAAO,EAAS,CACtDI,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTC,KAAM,OACNC,MAAO,6BACPC,IAAKR,EACL,kBAAmBE,GAClBzC,GAAQwC,EAAqB,gBAAoB,QAAS,CAC3DrG,GAAIsG,GACHD,GAAS,KAAM,IAAU,EAAqB,gBAAoB,OAAQ,CAC3EQ,EAAG,2IACHC,OAAQ,UACRC,YAAa,IACbC,cAAe,QACfC,eAAgB,WACb,IAAW,EAAsB,gBAAoB,OAAQ,CAChEJ,EAAG,oCACHC,OAAQ,UACRC,YAAa,IACbC,cAAe,QACfC,eAAgB,WAEpB,CACA,IAAI,GAA0B,aAAiBI,G,IAChC,I,oBC9BTC,GAAcC,GAAAA,EAAAA,Q,WCsJpB,GAzI+B,SAAH,GAGQ,IAFlCC,EAAU,EAAVA,WACAC,EAAa,EAAbA,cAEQ7E,GAAMC,EAAAA,EAAAA,MAAND,EACF8E,GAAiBjF,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMiF,MAAMD,cAAc,IACrE5E,GAAWC,EAAAA,EAAAA,MACjBpC,EAAAA,EAAAA,YAAU,WACH+G,GACH5E,EDdJ,yCAAO,WAAO8E,EAAUC,GAAQ,4FACPC,GAAAA,EAAAA,oBAAgC,KAAD,EAAhDC,EAAQ,OACdH,EAASN,GAAYU,kBAAkBD,IAAW,2CACnD,qDAHD,GCgBA,GAAG,IACH,IAAME,EAAY,SAACxD,GACjB,OAAQA,GACN,IAAK,YAYL,QACE,OAAO,SAACyD,EAAA,EAAS,IAXnB,IAAK,QACH,OAAO,SAAC,EAAK,IACf,IAAK,eACH,OAAO,SAAC,EAAY,IACtB,IAAK,cACH,OAAO,SAACC,EAAA,EAAW,IACrB,IAAK,WACH,OAAO,SAAC,GAAQ,IAClB,IAAK,aACH,OAAO,SAACC,EAAA,EAAU,IAIxB,EAEA,OACE,4BACE,gBAAKlJ,UAAU,mCAAkC,SAC9CwI,EACCA,EAAevI,KAAI,SAACC,EAAMC,GAAK,OAC7B,SAAC,EAAe,CAEdW,GAAIZ,EAAKY,GACToB,KAAMhC,EAAKgC,KACX9B,QAASkI,EACT/C,KAAMwD,EAAU7I,EAAKqF,MACrBlF,MAAOH,EAAKG,OALPH,EAAKY,GAMV,KAGJ,8BAEGqI,MAAMC,KAAKD,MAAM,GAAGzC,QAAQzG,KAAI,SAACC,EAAMC,GAAK,OAC3C,SAACkJ,GAAA,EAAQ,CAEPC,QAAQ,UACRjC,MAAO,GACPC,OAAQ,GACRiC,UAAU,QAJLpJ,EAKL,SAyCV,gBAAKH,UAAU,OAAM,SAClBuI,GACC,SAAC,IAAQ,CACPvI,UAAU,kBACViC,KAAM,gBACN5B,MAAOqD,EAAE,2BACTc,QACE+D,EACIA,EAActI,KAAI,SAAC8E,GAAU,IAAD,MAC1B,MAAO,CACL1E,OACE,yBACG0E,EAAK1E,MAAM,IAAEqD,EAAE,YAAa,IACnB,QADsB,EAC/BqB,EAAKyE,YAAI,OAAM,QAAN,EAAT,EAAWC,YAAI,WAAN,EAAT,EAAiBC,aAGtB5J,MAAqB,QAAhB,EAAEiF,EAAK9D,iBAAS,aAAd,EAAgB+D,WACvB9C,KAAM6C,EAAK7C,KAEf,IACA,GAENC,YAAa,gEACbjB,OAAQ,CACNnB,aAAc,SAACgE,GACbzC,QAAQC,IAAI,IAAKwC,GACjBuE,EAAWvE,EAAEE,OAAO/B,KAAM6B,EAAEE,OAAOnE,OAAO,EAC5C,EACAuB,OAAQ,CACNkH,cAAe,MAMrB,OAKV,E,WC0IA,GA/QsB,SAAH,GAOQ,IAAD,EANxBoB,EAAiB,EAAjBA,kBACAC,EAAY,EAAZA,aACAC,EAAS,EAATA,UACAC,EAAY,EAAZA,aACAC,EAAe,EAAfA,gBACAC,EAAa,EAAbA,cAEA,GAA0C9G,EAAAA,EAAAA,YAA6B,eAAhEV,EAAa,KAAEyH,EAAgB,KACtC,GAAoD/G,EAAAA,EAAAA,UAClD,IACD,eAFMgH,EAAkB,KAAEC,EAAqB,KAGhD,GAAkCjH,EAAAA,EAAAA,YAAsB,eAAjDkH,EAAS,KAAEC,EAAY,KAC9B,GAA0CnH,EAAAA,EAAAA,YAA6B,eAAhEoH,EAAa,KAAEC,EAAgB,KAC9B7G,GAAMC,EAAAA,EAAAA,MAAND,GAcRjC,EAAAA,EAAAA,YAAU,WACR,GACEoI,EAAUnJ,OACVmJ,EAAUO,WACVP,EAAUS,eACVT,EAAUxI,OACV,CACA,IAAImJ,EAAmBb,EAAkBxF,MACvC,SAACC,GAAC,OAAKA,EAAEtD,GAAGkE,YAAc6E,EAAUnJ,KAAK,IAGvC+J,EAAmBb,EAAazF,MAClC,SAACC,GAAC,OAAKA,EAAEtD,GAAGkE,YAAc6E,EAAUS,aAAa,IAI/CE,GAAoBC,GAAoBZ,EAAUxI,SACpDC,QAAQC,MACR0I,EAAiB,CACf5J,MAAOmK,EAAiBnK,MACxBP,MAAO0K,EAAiB1J,GAAGkE,WAC3BR,SAAyB,OAAhBgG,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBE,iBAAkBF,EAAiBhG,UAIhE6F,EAAaR,EAAUO,WAEvBG,EAAiB,CACflK,MAAOoK,EAAiBpK,MACxBP,MAAO2K,EAAiB3J,GAAGkE,aAG7BmF,EAAsBN,EAAUxI,QAEpC,CACF,GAAG,CAACwI,EAAWF,EAAmBC,IAElC,IAAMe,EAAmB,SAACd,GACxB,IAAIe,GAAuB,kBACtBf,GAAS,IACZgB,OAAO,IAETf,GAAa,UAAKc,GACpB,EAoEA,OADAtJ,QAAQC,IAAI,WAAYiB,IAEtB,iBAAKxC,UAAU,mGAAkG,WAC/G,SAAC,IAAQ,CACPA,UAAU,kBACViC,KAAM,YACN5B,MAAO,2BACPmE,QACEmF,GACAA,EAAkB1J,KAAI,SAACS,GACrB,MAAO,CACLL,OAAO,uBAAIK,EAAML,QACjBP,MAAOY,EAAMI,GAAGkE,WAEpB,IAEF7C,YAAa,gEACbjB,OAAQ,CACNnB,aA1EkB,SAACgE,GACzB,IAAIvB,EAAgBmH,EAAkBxF,MACpC,SAACC,GAAC,OAAKA,EAAEtD,GAAGkE,YAAcjB,EAAEE,OAAOnE,KAAK,IAE1CwB,QAAQC,IAAI,UAAWiB,GAEvByH,GAAiB,kBACZlG,GAAC,IACJS,SAAsB,OAAbhC,QAAa,IAAbA,OAAa,EAAbA,EAAekI,kBAA+B,OAAblI,QAAa,IAAbA,OAAa,EAAbA,EAAegC,YAG3D2F,EAAsB,IACtBQ,GAAiB,kBACZd,GAAS,IACZnJ,MAAOqD,EAAEE,OAAOnE,QAEpB,EA2DQuB,OAAQ,CACNyJ,UAAwB,OAAbtI,QAAa,IAAbA,OAAa,EAAbA,EAAe1C,WAIhC,SAAC,IAAQ,CACPE,UAAS,gBAAWkK,EAAmBnE,OAAS,EAAI,YAAc,aAElE9D,KAAM,iBACN5B,MAAO,iCACPmE,QACEhC,IACa,OAAbA,QAAa,IAAbA,GAAsB,QAAT,EAAbA,EAAegC,eAAO,WAAT,EAAb,EAAwBvE,KAAI,SAACyE,GAC3B,MAAO,CACLrE,MAAOqE,EAAOrE,MACdP,MAAO4E,EAAO5D,GAElB,KAEFqB,YACEK,EAAgB,gEAAgB,qIAElCtB,OAAQ,CACNnB,aAhEkB,SAACgE,GACzB,IAAMS,EAAuB,OAAbhC,QAAa,IAAbA,OAAa,EAAbA,EAAegC,QACnB0F,EAAmBzF,WAAU,SAACL,GAAC,OAAKA,EAAEtD,IAAMiD,EAAEE,OAAOnE,KAAK,KACzD,IAEXqK,EAAsB,GAAD,eAChBD,GAAkB,YAEhB1F,EAAQL,MAAK,SAACC,GAAM,OAAKA,EAAEtD,IAAMiD,EAAEE,OAAOnE,KAAK,QAGtD6K,GAAiB,kBACZd,GAAS,IACZxI,OAAO,GAAD,eACD6I,GAAkB,YAEhB1F,EAAQL,MAAK,SAACC,GAAM,OAAKA,EAAEtD,IAAMiD,EAAEE,OAAOnE,KAAK,UAK5D,EA4CQuB,OAAQ,CACN0J,eAAgB,SAIrBb,EAAmBnE,OAAS,IAC3B,gBAAK/F,UAAU,mDAAkD,SAC9DkK,EAAmBjK,KAAI,SAACC,EAAMC,GAC7B,OACE,iBAEEH,UAAU,2GAA0G,WAEpH,cAAGA,UAAU,cAAa,SAAEE,EAAKG,SACjC,gBACED,QAAS,kBArLA,SAACF,GACxB,IAAIC,EAAQ+J,EAAmBzF,WAAU,SAACL,GAAC,OAAKA,EAAEtE,OAASI,EAAKJ,KAAK,IACrE,GAAIK,GAAS,EAAG,CACd,IAAI6K,EAAwBd,EAC5Bc,EAAsBC,OAAO9K,EAAO,GACpCgK,GAAsB,OAAIa,IAC1BL,GAAiB,kBACZd,GAAS,IACZxI,QAAO,OAAK2J,KAEhB,CACF,CA0K+BE,CAAiBhL,EAAK,EACrCF,UAAU,iBAAgB,UAE1B,SAACsF,EAAA,EAAK,CAACtF,UAAU,0BARdG,EAYX,OAGJ,SAAC,IAAQ,CACPH,UAAU,kBACViC,KAAM,YACN5B,MAAO,uCACPmE,QAAS,CACP,CAAEnE,OAAO,uBAAG,mCAAWP,MAAO,QAC9B,CAAEO,OAAO,uBAAG,sDAAeP,MAAO,SAEpCqC,YAAa,uCACbjB,OAAQ,CACNnB,aApHsB,SAACgE,GAC7BsG,EAAatG,EAAEE,QACf0G,GAAiB,kBAAKd,GAAS,IAAEO,UAAWrG,EAAEE,SAChD,EAkHQ5C,OAAQ,CACN+I,UAAoB,OAATA,QAAS,IAATA,OAAS,EAATA,EAAWtK,WAI5B,SAAC,IAAQ,CACPE,UAAU,kBACViC,KAAM,gBACN5B,MAAO,gEACPmE,QACEoF,GACApH,GAEAoH,EACGuB,QAAO,SAAC/G,GAAC,OAAKA,EAAEtD,GAAGkE,YAAcxC,EAAc1C,KAAK,IACpDG,KAAI,SAACS,GACJ,MAAO,CACLL,OAAO,uBAAIK,EAAML,QACjBP,MAAOY,EAAMI,GAAGkE,WAEpB,IAEJ7C,YACEK,EAAgB,gEAAgB,qIAElCtB,OAAQ,CACNnB,aA1I0B,SAACgE,GACjC,IAAMrD,EAAQkJ,EAAazF,MAAK,SAACC,GAAC,OAAKA,EAAEtD,GAAGkE,YAAcjB,EAAEE,OAAOnE,KAAK,IACpEY,IACF6J,EAAiB,CAAElK,MAAOK,EAAML,MAAOP,MAAOY,EAAMI,GAAGkE,aACvD2F,GAAiB,kBACZd,GAAS,IACZS,cAAe5J,EAAMI,MAG3B,EAkIQO,OAAQ,CACNiJ,cAA4B,OAAbA,QAAa,IAAbA,OAAa,EAAbA,EAAexK,WAIpC,iBAAKE,UAAU,2CAA0C,WACvD,UAAC,KAAM,CACLI,QAjLsB,WAC5B2J,EAAgBF,EAAU/I,GAC5B,EAgLQd,UAAS,mBAAuB,OAAT6J,QAAS,IAATA,GAAAA,EAAWgB,MAAQ,SAAW,yBAAwB,qFACS,WAEtF,SAACvF,EAAA,EAAK,KACN,cAAGtF,UAAU,6BAA4B,SAAE0D,EAAE,0BAEpC,OAATmG,QAAS,IAATA,GAAAA,EAAWgB,SACX,UAAC,KAAM,CACLzK,QArLkB,WAC1B4J,EAAcH,EAAU/I,GAC1B,EAoLUd,UAAU,qHAAoH,WAE9H,SAACoL,EAAA,EAAW,KACZ,cAAGpL,UAAU,6BAA4B,SAAE0D,EAAE,2BAMzD,E,UCvJA,GA7HiC,SAAH,GAKQ,IAJpCiG,EAAiB,EAAjBA,kBACAC,EAAY,EAAZA,aACAyB,EAAc,EAAdA,eACAC,EAAe,EAAfA,gBAEA,GAAoCpI,EAAAA,EAAAA,WAAQ,OACvCoI,IACH,eAFKC,EAAU,KAAEC,EAAa,KAGhClK,QAAQC,IAAI,UAAWgK,GACvB,IAAO7H,GAAKC,EAAAA,EAAAA,MAALD,EAqBDoG,EAAe,SAACD,GACpB,IAAI1J,EAAQoL,EAAW9G,WAAU,SAACL,GAAC,OAAKA,EAAEtD,IAAM+I,EAAU/I,EAAE,IAC5D,GAAIX,GAAS,EAAG,CACd,IAAIsL,EAAgBF,EACpBE,EAActL,GAAS0J,EACvB2B,GAAc,OAAIC,GACpB,CACF,EAEMC,EAAwB,SAAC7B,GAC7B,IAAI1J,EAAQoL,EAAW9G,WAAU,SAACL,GAAC,OAAKA,EAAEtD,IAAM+I,CAAS,IACzD,GAAI1J,GAAS,EAAG,CACd,IAAIsL,EAAgBF,EACpBE,EAAcR,OAAO9K,EAAO,GAC5BqL,GAAc,OAAIC,GACpB,CACAJ,GAAe,OAAIE,IACnBI,GAAAA,EAAAA,QAAsBjI,EAAE,oBAC1B,EAEMkI,EAAsB,SAAC/B,GAG3B,IAAI1J,EAAQoL,EAAW9G,WAAU,SAACL,GAAC,OAAKA,EAAEtD,IAAM+I,CAAS,IACzD,GAAI1J,GAAS,EAAG,CACd,IAAI0L,EAAWN,EAAWpL,GAC1B,GACE0L,EAASnL,OACTmL,EAASzB,WACTyB,EAASxK,QACTwK,EAASxK,OAAO0E,OAAS,GACzB8F,EAASvB,cAMT,GAHiBX,EAAkBlF,WACjC,SAACL,GAAC,OAAKA,EAAEtD,IAAM+K,EAASnL,KAAK,KAEb,EAAG,CAEnB,IAAIoL,EAAqBlC,EAAanF,WACpC,SAACL,GAAC,OAAKA,EAAEtD,IAAM+K,EAASvB,aAAa,IAEvC,GAAIwB,GAAsB,EAAG,CAE3B,GAAIlC,EAAakC,GAAoBhH,SAEnC,YADA6G,GAAAA,EAAAA,MAAoB,wNAKtB,IAAIF,EAAgBF,EACpBE,EAActL,GAAO0K,OAAQ,EAC7BW,GAAc,OAAIC,IAClBJ,EAAeE,GACfI,GAAAA,EAAAA,QAAsB,iEACxB,MACEA,GAAAA,EAAAA,MAAoB,2KAExB,MACEA,GAAAA,EAAAA,MAAoB,iLAGtBA,GAAAA,EAAAA,MAAoB,sKAExB,CACF,EAEA,OACE,2BACGJ,GACCA,EAAWtL,KAAI,SAAC8L,EAAM5L,GACpB,OACE,SAAC,GAAa,CAEZwJ,kBAAmBA,EACnBC,aAAcA,EACdC,UAAWkC,EACXjC,aAAcA,EACdE,cAAe4B,EACf7B,gBAAiB2B,GANZvL,EASX,KAEF,gBAAKH,UAAU,mBAAkB,UAC/B,SAACoC,EAAA,EAAM,CACLmD,MAAM,SAACzD,EAAA,EAAG,IACVO,KAAK,mFACLjC,QA5GmB,WACrBuJ,EAAkB5D,OAAS,GAAK6D,EAAa7D,QAAU,EACzDyF,EAAc,GAAD,eACRD,GAAU,CACb,CACEzK,GAAIkL,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBxL,MAAO,KACP0J,UAAW,KACX/I,OAAQ,GACRiJ,cAAe,KACfO,OAAO,MAIXc,GAAAA,EAAAA,MACE,+QAGN,QA+FF,EC3BA,GApF2B,SAAH,GAgBQ,IAf9BQ,EAAe,EAAfA,gBACAC,EAAW,EAAXA,YACA9D,EAAU,EAAVA,WACA9F,EAAa,EAAbA,cACAC,EAAiB,EAAjBA,kBACA9B,EAAe,EAAfA,gBACA+B,EAAkB,EAAlBA,mBACAC,EAAkB,EAAlBA,mBACAE,EAAY,EAAZA,aACAE,EAAW,EAAXA,YACA6G,EAAY,EAAZA,aACAyB,EAAc,EAAdA,eACAC,EAAe,EAAfA,gBACArI,EAAgB,EAAhBA,iBACAsF,EAAa,EAAbA,cAEM8D,EAAuB,SAACd,GAC5BF,EAAeE,EACjB,EAwCA,OACE,iBAAKvL,UAAU,yEAAwE,WACrF,SAAC,EAAI,CACHD,aAAcoM,EACdtM,MAAO,CACL,CACEQ,MAAO,8CACPP,MAAO,YAET,CACEO,MAAO,sEACPP,MAAO,eAET,CACEO,MAAO,2DACPP,MAAO,mBAGXA,MAAOsM,IAxDM,WACjB,OAAQA,GACN,IAAK,WACH,OACE,SAAC,GAAsB,CACrB9D,WAAYA,EACZC,cAAeA,IAGrB,IAAK,cACH,OACE,SAAC,EAAyB,CACxB9F,kBAAmBA,EACnBD,cAAeA,EACf7B,gBAAiBA,EACjBgC,mBAAoBA,EACpBD,mBAAoBA,EACpBE,WAAwB,OAAbJ,QAAa,IAAbA,OAAa,EAAbA,EAAeI,aAAa,EACvCC,aAAcA,EACdC,UAAuB,OAAbN,QAAa,IAAbA,OAAa,EAAbA,EAAeM,YAAY,EACrCC,YAAaA,EACbC,gBAA4B,OAAbR,QAAa,IAAbA,IAAAA,EAAe8J,eAC9BrJ,iBAAkBA,IAGxB,IAAK,iBACH,OACE,SAAC,GAAwB,CACvB0G,kBAAmBC,EAAauB,QAAO,SAAC/G,GAAC,OAAKA,EAAEI,OAAO,IACvDoF,aAAcA,EACdyB,eAAgBgB,EAChBf,gBAAiBA,IAGvB,QACE,OAAO,SAAC,GAAsB,CAAChD,WAAYA,IAEjD,CAqBKiE,KAGP,E,uDCmIA,GAzNoB,SAAH,GASQ,IARvB3C,EAAY,EAAZA,aACA4C,EAAe,EAAfA,gBACAC,EAAiB,EAAjBA,kBACAC,EAAM,EAANA,OACAC,EAAS,EAATA,UACAnK,EAAa,EAAbA,cACAoK,EAAU,EAAVA,WACAC,EAAe,EAAfA,gBAEQnJ,GAAMC,EAAAA,EAAAA,IAAe,CAAC,SAAU,gBAAhCD,EACRpC,QAAQC,IAAI,KAAMqI,GA0FlB,IAAMkD,EAAe,SAACC,GAAwB,IAAD,IAC3C,OACE,iBAAK/M,UAAU,OAAM,WACnB,iBAAKA,UAAU,gHAA6G,YACvH+M,EAAQjI,UAAYiI,EAAQlI,qBAC7B,gBACEzE,QAAS,kBAAM8K,EAAiB6B,EAAQ,EACxCjM,GAAG,aACHd,UAAU,kHAAiH,UAE3H,SAACgN,GAAA,EAAK,CAAChN,UAAU,gEAGnB+M,EAAQlI,oBACR,gBACEzE,QAAS,kBAAM6M,EAAeF,EAAQ,EACtC/M,UAAU,oHAAmH,UAE7H,SAACkN,GAAA,EAAI,CAAClN,UAAU,gDAIrB+M,EAAQlI,oBACP,iBAAK7E,UAAU,+FAA8F,UAC1G0D,EAAE,YAAY,IAAc,QAAb,EAACqJ,EAAQvD,YAAI,OAAM,QAAN,EAAZ,EAAcC,YAAI,WAAN,EAAZ,EAAoBC,eAK/C,EAEMuD,EAAiB,SAACF,GAEtB,IAAI/I,GAAG,OAAO4F,GACRzJ,EAAQ6D,EAAI2C,QAAQoG,GAGtB5M,GAAS,IACX6D,EAAIiH,OAAO9K,EAAQ,EAAG,GAAE,kBACnB4M,GAAO,IACVjM,GAAI4L,EAAS,EACbzL,UAAW,KACXZ,MAAO0M,EAAQ1M,MAAQ,IAAMqD,EAAE,QAC/BzB,KAAM8K,EAAQ9K,MAAQyK,EAAS,GAAG1H,WAClC7C,YAAa4K,EAAQ5K,aAAeuK,EAAS,GAAG1H,WAChDF,UAAU,KAEZ0H,EAAgBxI,GAChB2I,EAAUD,EAAS,GAEvB,EACMxB,EAAmB,SAAC6B,GACxBH,EAAWG,EACb,EAEMI,GAAWC,EAAAA,EAAAA,UACXC,GAAeD,EAAAA,EAAAA,UAUfE,EAAO,SAACvJ,GACZ,IAAMwJ,GAAa,OAAO3D,GACpB4D,EAAkBD,EAAcJ,EAASM,SAC/CF,EAActC,OAAOkC,EAASM,QAAS,GACvCF,EAActC,OAAOoC,EAAaI,QAAS,EAAGD,GAC9CL,EAASM,QAAU,KACnBJ,EAAaI,QAAU,KACvBjB,EAAgBe,EAClB,EAGA,OACE,iBAAKvN,UAAU,6CAA4C,UAChC,IAAxB4J,EAAa7D,SAAiB8G,IAC7B,iBAAK7M,UAAU,iDAAgD,WAC7D,gBAAKA,UAAU,6FAA4F,UACzG,SAAC0N,GAAA,EAAW,OAEd,cAAG1N,UAAU,2CAA0C,SACpD0D,EAAE,wBAIRkG,EAAa3J,KAAI,SAAC8M,EAAS5M,GAC1B,OACE,iBACEwN,YAAa,SAAC5J,GAAC,OAlCE6J,EAkCgBzN,OAjCzCgN,EAASM,QAAUG,GADH,IAASA,CAkCsB,EACvCC,YAAa,SAAC9J,GAAC,OA/BE6J,EA+BgBzN,OA9BzCkN,EAAaI,QAAUG,GADP,IAASA,CA+BsB,EACvCE,UAAWR,EAEXlN,QAAS,SAAC2D,GACQ,eAAhBA,EAAEE,OAAOnD,IAAuB2L,EAAkBM,EACpD,EACAgB,WAAS,EACT/N,UAAU,OAAM,WAEhB,gBACEA,UAAS,4BACM,OAAbwC,QAAa,IAAbA,OAAa,EAAbA,EAAe1B,MAAOiM,EAAQjM,GAAK,oBAAsB,IACxD,UAEH,SAACkN,GAAA,EAAa,OAEfC,EAAAA,GAAAA,IAAclB,EAASD,OAAc5H,GAAW,KAd5C/E,EAiBX,MAGN,E,iCCiZA,GAhnBoB,WAAO,IAAD,EAClByD,GAAWC,EAAAA,EAAAA,KACjB,GAAwBqK,EAAAA,GAAAA,MAAlB7J,EAAI,EAAJA,KAAM8J,EAAO,EAAPA,QACN3F,GAAiBjF,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMiF,MAAMD,cAAc,KAE3E/G,EAAAA,EAAAA,YAAU,WACRmC,GAASwK,EAAAA,EAAAA,KAAgB,GAC3B,IACA,OAAsClL,EAAAA,EAAAA,UAAiB,YAAW,eAA3DkJ,EAAW,KAAEiC,EAAc,KAC5BlC,EAAkB,SAACrM,GACvBwB,QAAQC,IAAI,QAASzB,GACX,mBAAVA,GAA8BwO,KAC9BD,EAAevO,EACjB,EACA,GAAwCoD,EAAAA,EAAAA,UAAsB,IAAG,eAA1D0G,EAAY,KAAE4C,EAAe,KACpC,GAAsDtJ,EAAAA,EAAAA,UACpD,IACD,eAFMqL,EAAmB,KAAEC,EAAsB,KAGlD,GAA0CtL,EAAAA,EAAAA,YAAqB,eAAxDV,EAAa,KAAEyH,EAAgB,KACtC,GAA8C/G,EAAAA,EAAAA,UAAsB,IAAG,eAAhEoI,EAAe,KAAEmD,EAAkB,KAC1C,GAA8CvL,EAAAA,EAAAA,WAAkB,GAAK,eAA9D2J,EAAe,KAAE6B,EAAkB,KACpCpL,GAAaC,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMC,UAAUH,UAAU,IAEvE,GAA4BJ,EAAAA,EAAAA,UAAiB,GAAE,eAAxCyL,EAAM,KAAEC,EAAS,KAClBC,GAAkBtL,EAAAA,EAAAA,IACtB,SAACC,GAAK,OAAKA,EAAMsL,SAASD,eAAe,IAE3C,GAA4B3L,EAAAA,EAAAA,UAAiB,GAAE,eAAxCwJ,EAAM,KAAEC,GAAS,KAChBjJ,IAAMC,EAAAA,EAAAA,IAAe,CAAC,SAAU,gBAAhCD,EACFqL,IAAWC,EAAAA,GAAAA,OACjBvN,EAAAA,EAAAA,YAAU,WAER,OADAmC,GAASqL,EAAAA,GAAAA,IAAmBC,SAASf,GAAW,OACzC,WACLvK,GAASwK,EAAAA,EAAAA,KAAgB,IACzBxK,GAASqL,EAAAA,GAAAA,IAAmBC,SAAS,MACvC,CACF,GAAG,IACH,IAiCMzC,GAAoB,SAACM,GACpBA,GAIH9C,EAAiB8C,GACjBZ,EAAgB,iBAJhBlC,OAAiB/E,GACjBiH,EAAgB,YAKpB,EA+IMjB,GAAgB,yCAAG,WAAO6B,GAAkB,8EAGrB,GAHqB,SAG9C2B,GAAmB,IACf3B,EAAQ9L,UAAU,CAAD,+BACb2H,GAAAA,EAAAA,WAAuBmE,EAAQ9L,UAAW0N,GAAQ,KAAD,EAIrD3K,GAAG,OAAO4F,IACRzJ,EAAQ6D,EAAI2C,QAAQoG,KACb,IACX/I,EAAIiH,OAAO9K,EAAO,GAClBqM,EAAgBxI,GACZ+I,EAAQjM,KAAmB,OAAb0B,QAAa,IAAbA,OAAa,EAAbA,EAAe1B,KAE/B2L,QAAkBvH,IAKtByG,GAAAA,EAAAA,QAAsBjI,GAAE,6BACxBgL,GAAmB,GAAO,kDAG1BA,GAAmB,GAAO,0DAE7B,gBA3BqB,uCAgCtBjN,EAAAA,EAAAA,YAAU,WACgC,IAAD,EACE,IAIhC,EALLoN,GAAmBrG,KACI,QAArB,EAAAqG,EAAgBpG,aAAK,aAArB,EAAuB1C,QAAS,GAClC2I,GAAmB,GACnBE,EAA+B,QAAtB,EAACC,EAAgBpG,aAAK,aAArB,EAAwB,GAAG3H,IACrCqO,GAA8B,QAAtB,EAACN,EAAgBpG,aAAK,aAArB,EAAwB,GAAG3H,KAEpCsO,GACEP,EAAgBQ,YACO,QADI,EAC3BR,EAAgBS,eAAO,aAAvB,EAAyBC,YAIjC,GAAG,CAACV,EAAiBrG,IACrB,IAAM2G,GAAQ,yCAAG,WAAOrO,GAAU,4FACT8H,GAAAA,EAAAA,QAAoB9H,GAAI,KAAD,EAAxC+H,EAAQ,OACd2G,GAAsB3G,GACtB2G,GAAsB3G,GAAU,GAChC4G,GAAwB5G,GACxB6F,GAAmB,GAAO,2CAC3B,gBANa,sCAQRe,GAA0B,SAAC5G,GAC/B,IAAM0C,EAA2B1C,EAA3B0C,WAAYmE,EAAe7G,EAAf6G,OACd1L,GAD6B6E,EAAP/H,GACH,IAEb,OAAVyK,QAAU,IAAVA,GAAAA,EAAYtL,KAAI,SAACC,GAAe,IAAD,EAEzBQ,EAAQgP,EAAOvL,MAAK,SAACC,GAAM,OAAKA,EAAEtD,IAAMZ,EAAKyP,aAAa,IAE9DrO,QAAQC,IAAI,MAAOb,GAEnB,IAAI8D,EAAkD,QAA3C,GAAS,OAAL9D,QAAK,IAALA,OAAK,EAALA,EAAOgK,kBAAuB,OAALhK,QAAK,IAALA,OAAK,EAALA,EAAO8D,gBAAO,aAAxC,EAA2CvE,KAAI,SAACmE,GAC5D,MAAO,CACLtD,GAAIsD,EAAEtD,GACNT,MAAO+D,EAAE/D,MACTY,UAAWmD,EAAEtD,GACbhB,MAAOsE,EAAEM,OAEb,IACApD,QAAQC,IAAI,MAAOiD,GAEnB,IAAIoL,EAAa5L,EAAIS,WAAU,SAACL,GAAM,OAAKA,EAAE1D,OAASR,EAAKyP,aAAa,IACxE,GAAIC,GAAc,EAAG,CAAC,IAAD,IAEflL,EAAgB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASL,MACpB,SAACC,GAAM,OACLA,EAAEtD,KAAOZ,EAAK2P,oBAAsB3P,EAAK4P,qBAAqB,IAElExO,QAAQC,IAAI,eAAgBiD,GAC5BlD,QAAQC,IAAI,eAAgBmD,GAC5BpD,QAAQC,IAAI,eAAgBrB,GAEb,QAAf,EAAA8D,EAAI4L,UAAW,OAAQ,QAAR,EAAf,EAAiBvO,cAAM,OAAvB,EAAyB0O,KAAK,CAC5BjP,GAAU,OAAN4D,QAAM,IAANA,OAAM,EAANA,EAAQ5D,GACZT,MAAa,OAANqE,QAAM,IAANA,OAAM,EAANA,EAAQrE,MACfY,UAAiB,OAANyD,QAAM,IAANA,OAAM,EAANA,EAAQ5D,GACnBhB,MAAa,OAAN4E,QAAM,IAANA,OAAM,EAANA,EAAQ5E,OAEnB,KAAO,CAEL,IAAI4E,EAAgB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASL,MACpB,SAACC,GAAM,OACLA,EAAEtD,KAAOZ,EAAK2P,oBAAsB3P,EAAK4P,qBAAqB,IAGlE9L,EAAI+L,KAAK,CACPrP,MAAOR,EAAKyP,cACZ7O,GAAIZ,EAAKY,GACTsJ,UACoB,GAAlBlK,EAAKkK,UACD,CAAEnI,KAAM,YAAanC,MAAO,QAC5B,CAAEmC,KAAM,YAAanC,MAAO,QAClCwK,cAAepK,EAAK8P,yBACpBnF,OAAO,EACPxJ,OAAQ,CACN,CACEP,GAAU,OAAN4D,QAAM,IAANA,OAAM,EAANA,EAAQ5D,GACZT,MAAa,OAANqE,QAAM,IAANA,OAAM,EAANA,EAAQrE,MACfY,UAAiB,OAANyD,QAAM,IAANA,OAAM,EAANA,EAAQ5D,GACnBhB,MAAa,OAAN4E,QAAM,IAANA,OAAM,EAANA,EAAQ5E,SAIvB,CACF,IAEAwB,QAAQC,IAAI,SAAS,GAAD,OAAMyC,IAC1ByK,EAAmB,GAAD,OAAKzK,GACzB,EAEMwL,GAAwB,SAAChG,EAAWjB,GACxC,IAAIvE,EAAmB,GACnBiM,EAAiB1H,EAAgBiB,EAAKjB,cAAgBiB,EAAKkG,OAC/DpO,QAAQC,IAAI,SAAUiI,EAAK1I,IACb,OAAdmP,QAAc,IAAdA,GAAAA,EAAgBC,SAAQ,SAAChQ,GAAe,IAAD,sBACrCoB,QAAQC,IAAI,OAAQrB,GACpB,IAAIiQ,EAAqB,CACvBrP,GAAIZ,EAAKY,GACTmB,KAAM/B,EAAK+B,KACXC,KAAe,QAAX,EAAEhC,EAAKgC,YAAI,aAAT,EAAWA,KACjBkO,OAAQlQ,EAAKmQ,mBACbhQ,MAAOH,EAAKG,MACZ8B,YAAajC,EAAKiC,YAClBW,SAAU5C,EAAK4C,SACfmC,WAAY/E,EAAK+E,WACjBqH,eAA8B,QAAf,EAAApM,EAAK+E,kBAAU,aAAf,EAAiBnE,KAAM,KACtC0I,KAAMtJ,EAAKsJ,OAAiB,QAAT,EAAAtJ,EAAKsJ,YAAI,aAAT,EAAW1I,KAAM0I,EAAK1I,GAAKZ,EAAKsJ,KAAO,KAC1D3E,oBACW,QAAT,EAAA3E,EAAKsJ,YAAI,QAAT,EAAW1I,KAAe,QAAT,EAAAZ,EAAKsJ,YAAI,aAAT,EAAW1I,KAAM0I,EAAK1I,IACzC4J,gBACIxK,EAAKwK,gBAAkBxK,EAAKwK,eAAe3E,OAAS,IAC3C,QAD4C,EACrD7F,EAAKgC,YAAI,aAAT,EAAWoO,gBACM,QADK,EACxBpQ,EAAKwK,sBAAc,aAAnB,EAAqBzK,KAAI,SAACyE,GACxB,MAAO,CACL5D,GAAI4D,EAAO5D,GACXG,UAAWyD,EAAO5D,GAClBhB,MAAO4E,EAAOA,OACdrE,OAAO,uBAAIqE,EAAOrE,QAEtB,KACFmE,SACItE,EAAKsE,SAAWtE,EAAKsE,QAAQuB,OAAS,IAC7B,QAD8B,EACvC7F,EAAKgC,YAAI,aAAT,EAAWoO,gBACD,QADY,EACxBpQ,EAAKsE,eAAO,aAAZ,EAAcvE,KAAI,SAACyE,GACjB,MAAO,CACL5D,GAAI4D,EAAO5D,GACXG,UAAWyD,EAAO5D,GAClBhB,MAAO4E,EAAOA,OACdrE,OAAO,uBAAIqE,EAAOrE,QAEtB,KACFuC,UAAsC,QAA7B,EAAE2N,KAAKC,MAAMtQ,EAAKuQ,mBAAW,aAA3B,EAA6B7N,UACxC3B,UAAWf,EAAKY,GAChBgE,SAAqC,QAA7B,EAAEyL,KAAKC,MAAMtQ,EAAKuQ,mBAAW,aAA3B,EAA6B3L,UAEzCd,EAAI+L,KAAKI,EACX,IACA5H,EAAgBiG,EAAuBxK,GAAOwI,EAAgBxI,EAChE,EAEMoL,GAAU,yCAAG,WAAOsB,EAAqBC,GAAiB,oFAClB,OAAtCC,EAAyB,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBG,YAAY,EAAD,OACrBjI,GAAAA,EAAAA,WAAuB,CAC5C3G,KAAM,QAAwB,OAAf4M,QAAe,IAAfA,OAAe,EAAfA,EAAiB/N,IAChCgQ,WAA2B,OAAfjC,QAAe,IAAfA,OAAe,EAAfA,EAAiBiC,WAC7BC,cAA8B,OAAflC,QAAe,IAAfA,GAAmB,QAAJ,EAAfA,EAAiB/N,UAAE,WAAJ,EAAf,EAAqBkE,aACnC,KAAD,EACqB,GALjB6D,EAAQ,OAKd+F,EAAU/F,EAAS/H,IACF,iBAAb8P,GAA6C,OAAdD,EAAkB,gCAE7C/H,GAAAA,EAAAA,WAAuBC,EAAS/H,GAAI,CACxCyK,WAAY,GACZmE,OAAQ,CACN,CACEpD,cAAe,KACf+D,mBAAkC,OAAd7H,QAAc,IAAdA,GAA+C,QAAjC,EAAdA,EAAgBrE,MAAK,SAACC,GAAC,MAAe,UAAVA,EAAElC,IAAgB,WAAC,WAAjC,EAAd,EAChBpB,GACJkQ,YAAa,EACb3Q,MAAO,qBACP4Q,IAAK,IACLC,IAAK,EACLjP,KAAM,QACNkP,MAAO,EACPC,eAAgB,KAChBjP,YAAa,oFACbW,UAAU,EACV2N,WAAW,qBAEb,CACEnE,cAAe,KACf+D,mBAAkC,OAAd7H,QAAc,IAAdA,GAA+C,QAAjC,EAAdA,EAAgBrE,MAAK,SAACC,GAAC,MAAe,UAAVA,EAAElC,IAAgB,WAAC,WAAjC,EAAd,EAChBpB,GACJkQ,YAAa,EACb3Q,MAAO,uCACP4Q,IAAK,IACLC,IAAK,EACLjP,KAAM,SACNkP,MAAO,EACPC,eAAgB,KAChBjP,YAAa,sGACbW,UAAU,EACV2N,WAAW,sBAGfxO,KAAM,QAAwB,OAAf4M,QAAe,IAAfA,OAAe,EAAfA,EAAiB/N,MAC/B,KAAD,EAEJqO,GAAStG,EAAS/H,IAElB4N,GAAmB,GAAO,4CAC3B,gBAlDe,wCAoDVJ,GAAc,yCAAG,WAAOvK,EAASsN,GAA8B,wFAejE,GAbF3C,GAAmB,GACf1K,GAAG,OAAO4F,GACV0H,GAAO,OAAOhG,GAClBhK,QAAQC,IAAI,OAAQqI,GAEhByH,IACFC,GAAO,OAAOD,IAEhB/P,QAAQC,IAAI,MAAOyC,GAEfuN,EAAQvN,EAAI/D,KAAI,SAACC,GAAI,OAAKA,EAAK+B,IAAI,OACnCuP,EAAiBD,EAAMpG,QACzB,SAACjL,EAAMC,GAAK,OAAKoR,EAAM5K,QAAQzG,IAASC,CAAK,KAE5B4F,OAAS,GAAC,iBASD,OAPtB0L,EAAkBzN,EAAImH,QAAO,SAACjL,GAAI,OACpCsR,EAAeE,SAASxR,EAAK+B,KAAK,IAEhC0P,EAAuBF,EAAgBxR,KAAI,SAACC,GAAI,OAAKA,EAAKG,KAAK,IACnEsL,GAAAA,EAAAA,MACEjI,GAAE,sCAAwCiO,GAE5CjD,GAAmB,GAAO,4BAGxBkD,EAAMhJ,GAAAA,EAAAA,WAAuB+F,EAAQ,CACvC1M,KAAM,QAAwB,OAAf4M,QAAe,IAAfA,OAAe,EAAfA,EAAiB/N,IAChC4O,OAAQ1L,EAAI/D,KAAI,SAACC,EAAMC,GAAW,IAAD,IAC3B0R,EAAqB,CAAC,EAQ1B,MAPkB,eAAd3R,EAAKgC,OACP2P,EAAcjP,UAAY1C,EAAK0C,WAE7B1C,EAAK4E,WACP+M,EAAc/M,SAAW5E,EAAK4E,UAGzB,CACL7D,UAAWf,EAAKe,UAChBgB,KAAM/B,EAAK+B,KACXoO,mBAAoBnQ,EAAKkQ,OACzB/P,MAAOH,EAAKG,MACZ8B,YAAajC,EAAKiC,YAClBW,SAAU5C,EAAK4C,SACfkO,YAAa9Q,EAAKY,GAClB2P,WAAYF,KAAKuB,UAAUD,GAC3BX,IAAK,EACLD,IAAK,IACLE,MAAOhR,EACPiR,eAAgBlR,EAAK2E,kBAAoB3E,EAAKsJ,KAAK1I,GAAK,KACxDiR,WAAY7R,EAAKsE,SAAWtE,EAAKsE,QAAQuB,OAAS,EAClDd,WAAY/E,EAAK+E,WACjBqH,cAAepM,EAAKoM,eAAiB,KAGrC5B,eACExK,EAAKwK,gBACLxK,EAAKwK,eAAe3E,OAAS,IACV,QADW,EAC9B7F,EAAKwK,sBAAc,aAAnB,EAAqBzK,KAAI,SAACyE,GACxB,MAAO,CACL5D,GAAI4D,EAAO5D,GACXG,UAAWyD,EAAO5D,GAClBhB,MAAO4E,EAAOA,OACdrE,OAAO,uBAAIqE,EAAOrE,QAEtB,KACFmE,QACEtE,EAAKsE,SACLtE,EAAKsE,QAAQuB,OAAS,IACV,QADW,EACvB7F,EAAKsE,eAAO,aAAZ,EAAcvE,KAAI,SAACmE,GACjB,MAAO,CACLM,OAAQN,EAAEtE,MACVO,MAAO+D,EAAE/D,MAAMsE,MAAMC,SACrB9D,GAAIsD,EAAEnD,UAEV,KAEN,IACAsK,WAAY+F,EAAQrR,KAAI,SAACC,EAAMC,GAAW,IAAD,IACvC,MAAO,CACL6R,QAASrD,EACTgB,cAAezP,EAAKQ,MACpBuR,sBAAkC,QAAb,EAAE/R,EAAKmB,cAAM,aAAX,EAAapB,KAAI,SAACH,GACvC,OAAOA,EAAMgB,EACf,IACAsJ,UAAqC,UAAZ,QAAd,EAAAlK,EAAKkK,iBAAS,aAAd,EAAgBtK,OAAmB,EAAI,EAClDkQ,yBAA0B9P,EAAKoK,cAEnC,OAEE4H,MAAK,SAACrJ,GACRvH,QAAQC,IAAI,WAAYsH,GAExB2G,GAAsB3G,GACtB4G,GAAwB5G,GACxB2G,GAAsB3G,GAAU,GAEhC6F,GAAmB,GACnB/C,GAAAA,EAAAA,QAAsBjI,GAAE,yBAC1B,IACAkO,EAAIO,OAAM,SAACC,GACT1D,GAAmB,GACnB/C,GAAAA,EAAAA,MAAoBjI,GAAE,iBACxB,IAAG,4CACJ,gBA1GmB,wCA4GpB,OACE,iBAAK1D,UAAU,gBAAe,UAC3B6M,IACC,SAACwF,GAAA,EAAiB,KAMpB,SAACC,EAAA,EAAU,CACTC,WA3Ta,WACjBxD,GAAS,aAAD,OAAc1K,EAAI,UAC5B,EA0TMmO,SACE,gCACG,KACD,gBAAKxS,UAAU,YAAW,UACxB,SAACoC,EAAA,EAAM,CACLmD,MAAM,SAACkN,EAAA,EAAG,IACVpQ,KAAMqB,GAAE,YACRtD,QAAS,WAAO,EAChBkC,MAAI,OAGR,gBAAKtC,UAAU,iBAAgB,UAC7B,SAACoC,EAAA,EAAM,CACLmD,MAAM,SAAC6F,EAAA,EAAW,IAClB/I,KAAMqB,GAAE,YACRtD,QAASkO,UAKjBnH,MAAK,UAAKzD,GAAE,eAAc,YAAIA,GAAE,QAAO,YACtB,OAAfmL,QAAe,IAAfA,OAAe,EAAfA,EAAiBnF,UAAS,YACxBhG,GAAE,WAAU,YAAmB,OAAfmL,QAAe,IAAfA,GAAwB,QAAT,EAAfA,EAAiBS,eAAO,WAAT,EAAf,EAA0BrN,SAEhD,iBAAKjC,UAAU,cAAa,WAC1B,SAAC,GAAkB,CACjBmM,gBAAiBA,EACjBC,YAAaA,EACb9D,WA5iBiB,SACvByE,EACAjM,EACA+D,GAEA,IAAIb,EAAiB,CACnB/B,KAAM,QAAU8K,GAAWL,EAAS,GAAG1H,WACvC7C,YAAa4K,GAAWL,EAAS,GAAG1H,WACpC3E,MAAO,0DACP6B,KAAM6K,EACNqD,OAAQtP,EACRgC,UAAU,EACVhC,GAAI4L,EAAS,GAUf,GARgB,aAAZK,GAAsC,aAAZA,IAC5B/I,GAAG,kBAAQA,GAAG,IAAEQ,QAAS,MAEX,eAAZuI,IACF/I,GAAG,kBAAQA,GAAG,IAAEpB,WAAW,KAIzBiC,EAAmB,CACrB,IAAI6N,EAAanE,EAAoBpK,MAAK,SAACC,GAAC,OAAKA,EAAEnD,WAAaH,CAAE,IAE9D4R,IACF1O,GAAG,kBAAQ0O,GAAU,IAAE7N,kBAAmBA,IAE9C,CAEA2H,EAAgB,GAAD,eAAK5C,GAAY,CAAE5F,KAClC2I,GAAUD,EAAS,EACrB,EA6gBQlK,cAAeA,EACfC,kBApgBkB,SAAC/B,GACzB,IAAIsD,GAAG,OAAO4F,GACVgG,EAAa5L,EAAIS,WAAU,SAACL,GAAC,OAAKA,EAAEtD,IAAMJ,EAAMI,EAAE,KAClC,IAAhB8O,IACF5L,EAAI4L,IAAW,UAAQlP,GACvB8L,GAAgB,OAAIxI,IACpBiG,GAAiB,UAAKvJ,IAE1B,EA6fQC,gBA5fgB,SAACG,EAAY4D,GACnC,IAAIV,GAAG,OAAO4F,GACVgG,EAAa5L,EAAIS,WAAU,SAACL,GAAC,OAAKA,EAAEtD,IAAMA,CAAE,IAChD,IAAoB,IAAhB8O,GAAqB5L,EAAI4L,GAAYpL,QAAS,CAChD,IAAMA,EAAUR,EAAI4L,GAAYpL,SAAW,GAC3CR,EAAI4L,IAAW,kBACV5L,EAAI4L,IAAW,IAClBpL,QAAQ,GAAD,eACFA,GAAO,oBACLE,GAAM,IAAE5D,GAAIkL,KAAKC,MAAsB,IAAhBD,KAAKE,gBAGrCM,GAAgB,OAAIxI,IACpBiG,GAAiB,UAAKjG,EAAI4L,IAC5B,CACF,EA8eQjN,mBA7emB,SACzB7B,EACA4D,EACAvE,GAEA,IAAI6D,GAAG,OAAO4F,GACVgG,EAAa5L,EAAIS,WAAU,SAACL,GAAC,OAAKA,EAAEtD,IAAMA,CAAE,IAChD,IAAoB,IAAhB8O,GAAqB5L,EAAI4L,GAAYpL,QAAS,CAChD,IAAIA,EAAUR,EAAI4L,GAAYpL,SAAW,GACzCA,EAAQrE,GAASuE,EACjBV,EAAI4L,IAAW,kBACV5L,EAAI4L,IAAW,IAClBpL,SAAQ,OAAKA,KAEfgI,GAAgB,OAAIxI,IACpBiG,GAAiB,UAAKjG,EAAI4L,IAC5B,CACF,EA6dQlN,mBA3dmB,SACzB5B,EACA4D,EACAzD,GAEA,IAAI+C,GAAG,OAAO4F,GACVgG,EAAa5L,EAAIS,WAAU,SAACL,GAAC,OAAKA,EAAEtD,IAAMA,CAAE,IAChD,IAAoB,IAAhB8O,GAAqB5L,EAAI4L,GAAYpL,QAAS,CAChD,IAAIA,GAAO,OAAQR,EAAI4L,GAAYpL,SAAW,IAC1CmO,EAAcnO,EAAQC,WAAU,SAACL,GAAC,OAAKA,EAAEtE,OAAS4E,CAAM,IACxDiO,GAAe,IACjBnO,EAAQyG,OAAO0H,EAAa,GAC5B3O,EAAI4L,IAAW,kBACV5L,EAAI4L,IAAW,IAClBpL,SAAQ,OAAKA,KAGfgI,GAAgB,OAAIxI,IACpBiG,GAAiB,UAAKjG,EAAI4L,KAE9B,CAGI3O,GACF2H,GAAAA,EAAAA,aAAyB3H,GAAWiR,MAAK,SAACN,GACxC,GAGN,EAgcQ/O,aA9ba,SAAC/C,GACpB,IAAIkE,GAAG,OAAO4F,GAEVgG,EAAa5L,EAAIS,WAAU,SAACL,GAAC,OAAKA,EAAEtD,KAAmB,OAAb0B,QAAa,IAAbA,OAAa,EAAbA,EAAe1B,GAAI,IAE7D8O,GAAc,IAChB5L,EAAI4L,IAAW,kBACV5L,EAAI4L,IAAW,IAClBhN,UAAW9C,IAEb0M,GAAgB,OAAIxI,IACpBiG,GAAiB,UAAKjG,EAAI4L,KAE9B,EAkbQ7M,YAhbY,SAACjD,GACnB,IAAIkE,GAAG,OAAO4F,GAEVgG,EAAa5L,EAAIS,WAAU,SAACL,GAAC,OAAKA,EAAEtD,KAAmB,OAAb0B,QAAa,IAAbA,OAAa,EAAbA,EAAe1B,GAAI,IAE7D8O,GAAc,IAChB5L,EAAI4L,IAAW,kBACV5L,EAAI4L,IAAW,IAClB9M,SAAUhD,IAEZ0M,GAAgB,OAAIxI,IACpBiG,GAAiB,UAAKjG,EAAI4L,KAE9B,EAoaQhG,aAAcA,EACdyB,eApYe,SAACE,GACtBkD,GAAmB,OAAIlD,EAAWJ,QAAO,SAAC/G,GAAC,OAAKA,EAAEyG,KAAK,MACvDvJ,QAAQC,IAAI,0CAAyC,OAChDgK,EAAWJ,QAAO,SAAC/G,GAAC,OAAKA,EAAEyG,KAAK,MAErCyD,GAAe,MAAK,OAAK/C,EAAWJ,QAAO,SAAC/G,GAAC,OAAKA,EAAEyG,KAAK,KAC3D,EA+XQS,gBAAiBA,EACjBrI,iBAtaiB,SAACnD,GAExB,IAAIkE,GAAG,OAAO4F,GAEVgG,EAAa5L,EAAIS,WAAU,SAACL,GAAC,OAAKA,EAAEtD,KAAmB,OAAb0B,QAAa,IAAbA,OAAa,EAAbA,EAAe1B,GAAI,IAEjE,GAAI8O,GAAc,EAAG,CAAC,IAAD,EACfgD,GAAwC,QAA1B,EAAA5O,EAAI4L,GAAY3K,kBAAU,aAA1B,EAA4BnE,MAAgB,OAAVwC,QAAU,IAAVA,OAAU,EAAVA,EAAa,GAAGxC,IAEpEQ,QAAQC,IAAI,MAAOqR,GACnB5O,EAAI4L,IAAW,kBACV5L,EAAI4L,IAAW,IAClBtD,cAAwB,GAATxM,EAAgB8S,EAAc,KAC7C3N,WACW,GAATnF,EAAgBkE,EAAI4L,GAAY3K,aAAwB,OAAV3B,QAAU,IAAVA,OAAU,EAAVA,EAAa,IAAK,KAClEoH,eACW,GAAT5K,GACKkE,EAAI4L,GAAY3K,aAAwB,OAAV3B,QAAU,IAAVA,OAAU,EAAVA,EAAa,KAAIzD,MAAMI,KACpD,SAACC,GAAS,MAAM,CACdY,GAAIZ,EAAKY,GACTT,OAAO,uBAAIH,EAAK+B,OAChBhB,UAAWf,EAAKY,GAChBhB,MAAOI,EAAKmE,KACb,IAEH,OAERmI,GAAgB,OAAIxI,IACpBiG,GAAiB,UAAKjG,EAAI4L,IAC5B,CACF,EAyYQrH,cAAegG,KAEjB,gBAAKvO,UAAU,0BAAyB,UACtC,SAAC,GAAW,CACV0M,OAAQA,EACRC,UAAWA,GACXE,gBAAiBA,EACjBjD,aAAcA,EACdpH,cAAeA,EACfgK,gBAAiBA,EACjBC,kBAAmBA,GACnBG,WAAY1B,YAMxB,C","sources":["assets/icons/Frame.svg","components/tabs/Tabs.tsx","components/form/SwitchButton.tsx","components/form/Switch.tsx","components/formBuilder/Dialogs/AddDropdownItemDialog.tsx","components/formBuilder/editElement/FormBuilderEditElementTab.tsx","components/formBuilder/elements/FormElementItem.tsx","assets/icons/NumericField.svg","assets/icons/Dropdown.svg","app/redux/forms/actions.ts","components/formBuilder/elements/FormBuilderElementsTab.tsx","components/formBuilder/formConditions/ConditionItem.tsx","components/formBuilder/formConditions/FormBuilderConditionsTab.tsx","components/formBuilder/FormBuilderSidebar.tsx","components/formBuilder/formContent/FormContent.tsx","pages/formBuilder/FormBuilder.tsx"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgFrame(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 26,\n    height: 26,\n    viewBox: \"0 0 26 26\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.666 8.666H13M8.666 17.332H13M8.666 13h8.667M9.75 23.833h6.5c5.416 0 7.583-2.167 7.583-7.584v-6.5c0-5.416-2.166-7.583-7.583-7.583h-6.5c-5.417 0-7.583 2.167-7.583 7.583v6.5c0 5.417 2.166 7.584 7.583 7.584z\",\n    stroke: \"#303030\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFrame);\nexport default __webpack_public_path__ + \"static/media/Frame.3065523bd1b024b62004be75ca6dba22.svg\";\nexport { ForwardRef as ReactComponent };","type TabsProps = {\n  items: { label: string; value: string }[];\n  value: string;\n  handleChange: (value: string) => void;\n};\nconst Tabs = ({ items, value, handleChange }: TabsProps) => {\n  return (\n    <div className=\"mx-auto w-full flex px-3 items-center justify-between border-b mb-[19px] border-text-300\">\n      {items.map((item: any,index:number) => (\n        <div\n        key={index}\n          className=\"mx-1 cursor-pointer min-w-[70px] w-1/3 px-[10px] 2xl:px-[6px] relative flex items-center justify-center\"\n          onClick={() => handleChange(item.value)}\n        >\n          <p\n            className={`mb-[20px] transition-all text-[14px] 2xl:text-[12px] leading-[20px] ${\n              item.value === value ? \"text-primary-main font-black 2xl:font-semibold\" : \"text-text-500\"\n            }`}\n          >\n            {item.label}\n          </p>\n          <div\n            className={`w-full ${\n              item.value === value ? \"h-[3px] rounded-t-[2px]\" : \"h-0\"\n            } bg-primary-main transition-all absolute bottom-0`}\n          ></div>\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default Tabs;\n","import { Switch } from \"@mui/material\";\nimport { useState } from \"react\";\ntype SwitchButtonProps = {\n  checked: boolean;\n  setChecked: (checked: boolean) => void;\n};\n\nconst SwitchButton = ({ checked, setChecked }: SwitchButtonProps) => {\n  const handleCheck = () => {\n    setChecked(!checked);\n  };\n  return (\n    <div\n      onClick={handleCheck}\n      className={`w-[36px] h-[20px] rounded-[10px] border ${\n        checked ? \"border-primary-main\" : \"border-text-500\"\n      } flex items-center ${\n        checked ? \"justify-start\" : \"justify-end\"\n      } p-[2px] cursor-pointer`}\n    >\n      <div\n        className={`w-4 h-4 ${\n          checked ? \"bg-primary-main\" : \"bg-text-500\"\n        } rounded-full`}\n      ></div>\n    </div>\n  );\n};\nexport default SwitchButton;\n","import SwitchButton from \"./SwitchButton\";\n\ntype SwitchProps = {\n  checked: boolean;\n  setChecked: (checked: boolean) => void;\n  label?: string;\n};\nconst Switch = ({ checked, setChecked, label }: SwitchProps) => {\n  return (\n    <div className=\"w-full p-[8px] h-[48px] flex items-center justify-between border border-text-400 rounded-[8px] transition-al\">\n      <p className=\"cursor-pointer text-text-800 text-[14px]\" onClick={()=>setChecked(!checked)}>{label}</p>\n      <SwitchButton checked={checked} setChecked={setChecked} />\n    </div>\n  );\n};\nexport default Switch;\n","import { Add } from \"iconsax-react\";\nimport SideDialog from \"../../sideDialog/SideDialog\";\nimport TextField from \"../../form/TextField\";\nimport { useFormik } from \"formik\";\nimport { FormField, FormOption } from \"../../../app/models/form\";\nimport Button from \"../../button/Button\";\nimport { useEffect } from \"react\";\n\nexport type initialValues = {\n  index?: number;\n  fieldName: string;\n  fieldValue: string;\n  id?: number;\n  server_id?: number;\n};\n\ntype AddDropdownItemDialogProps = {\n  open: boolean;\n  handleClose?: () => void;\n  field: FormField;\n  handleAddOption: (item: initialValues) => void;\n  selectedOption?: FormOption;\n};\nconst AddDropdownItemDialog = ({\n  open,\n  handleClose,\n  field,\n  handleAddOption,\n  selectedOption,\n}: AddDropdownItemDialogProps) => {\n  const initialValues: initialValues = {\n    index: selectedOption?.index || -1,\n    id: selectedOption?.index || 0,\n    fieldName: selectedOption?.label || \"\",\n    fieldValue: selectedOption?.value || \"\",\n    server_id: selectedOption?.server_id,\n  };\n\n  const formik = useFormik({\n    initialValues,\n    // validationSchema,\n    onSubmit: (values) => {\n      console.log(\"values\", values);\n      handleAddOption(values);\n      formik.setFieldValue(\"fieldName\", \"\");\n      formik.setFieldValue(\"fieldValue\", \"\");\n      formik.setFieldValue(\"index\", -1);\n      formik.setFieldValue(\"server_id\", -1);\n\n      handleClose?.();\n    },\n  });\n  useEffect(() => {\n    if (selectedOption) {\n      formik.setFieldValue(\"fieldName\", selectedOption.label);\n      formik.setFieldValue(\"fieldValue\", selectedOption.value);\n      formik.setFieldValue(\"index\", selectedOption.index);\n      formik.setFieldValue(\"id\", selectedOption.id);\n      formik.setFieldValue(\"server_id\", selectedOption.server_id);\n    }\n  }, [selectedOption]);\n\n  const handleSubmitForm = () => {\n    formik.submitForm();\n  };\n  const _handleClose = () => {\n    handleClose?.();\n    formik.setFieldValue(\"fieldName\", \"\");\n    formik.setFieldValue(\"fieldValue\", \"\");\n    formik.setFieldValue(\"index\", -1);\n  };\n  return (\n    <SideDialog\n      headerText={`${selectedOption ? \"ویرایش\" : \"افزودن\"} ${field.label}`}\n      headerIcon={<Add />}\n      open={open}\n      handleClose={_handleClose}\n    >\n      <SideDialog.Content>\n        <div className=\"p-7\">\n          <form onSubmit={formik.handleSubmit} className=\"w-full\">\n            <div className=\"mt-7 w-full grid grid-cols-1 gap-x-5 gap-y-7\">\n              <TextField\n                name=\"fieldName\"\n                label=\"عنوان فیلد\"\n                type=\"text\"\n                placeholder=\"عنوان فیلد را وارد نمایید\"\n                formik={formik}\n              />\n              <TextField\n                name=\"fieldValue\"\n                label=\"نامک فیلد\"\n                type=\"text\"\n                placeholder=\"نامک فیلد را وارد نمایید\"\n                formik={formik}\n              />\n            </div>\n          </form>\n        </div>\n      </SideDialog.Content>\n      <SideDialog.Footer>\n        <div className=\"mt-20 px-7 flex justify-between items-center py-[25px] border border-text-300\">\n          <div className=\"w-[126px]\">\n            <Button text=\"انصراف\" onClick={_handleClose} gray />\n          </div>\n          <div className=\"w-[182px]\">\n            <Button\n              text={`${selectedOption ? \"ویرایش\" : \"افزودن\"} ${field.label}`}\n              onClick={handleSubmitForm}\n            />\n          </div>\n        </div>\n      </SideDialog.Footer>\n    </SideDialog>\n  );\n};\n\nexport default AddDropdownItemDialog;\n","import { Add, Edit2, Trash } from \"iconsax-react\";\nimport { useEffect, useState } from \"react\";\nimport { FormField, FormOption } from \"../../../app/models/form\";\nimport Button from \"../../button/Button\";\nimport Switch from \"../../form/Switch\";\nimport TextField from \"../../form/TextField\";\nimport AddDropdownItemDialog, {\n  initialValues,\n} from \"../Dialogs/AddDropdownItemDialog\";\nimport { useTranslation } from \"react-i18next\";\nimport DropDown from \"components/form/Dropdown\";\nimport { useAppDispatch, useAppSelector } from \"app/redux/hooks\";\nimport { basicDatasList } from \"app/redux/basicData/actions\";\n\ntype FormBuilderEditElementTabProps = {\n  selectedField?: FormField;\n  handleUpdateField: (field: FormField) => void;\n  handleAddOption: (id: number, option: FormOption) => void;\n  handleUpdateOption: (id: number, option: FormOption, index: number) => void;\n  handleDeleteOption: (\n    id: number,\n    option: string,\n    server_id?: number | null\n  ) => void;\n  onlyImage: boolean;\n  setOnlyImage: (onlyImage: boolean) => void;\n  required: boolean;\n  setRequired: (required: boolean) => void;\n  fromBasicData: boolean;\n  setFromBasicData: (required: boolean) => void;\n};\n\nconst FormBuilderEditElementTab = ({\n  selectedField,\n  handleUpdateField,\n  handleAddOption,\n  handleDeleteOption,\n  handleUpdateOption,\n  onlyImage,\n  setOnlyImage,\n  required,\n  setRequired,\n  fromBasicData,\n  setFromBasicData,\n}: FormBuilderEditElementTabProps) => {\n  const [openAddDropdownItemDialog, setOpenAddDropdownItemDialog] =\n    useState<boolean>(false);\n  const [selectedOption, setSelectedOption] = useState<FormOption>();\n  const basicDatas = useAppSelector((state) => state.basicData.basicDatas);\n  const { t } = useTranslation();\n  const Dispatch = useAppDispatch();\n  console.log(\"selected\", selectedField);\n  const _handleUpdateField = (e: any) => {\n    if (selectedField) {\n      let tmp: FormField = { ...selectedField };\n      if (e.target.name == \"basic_data\") {\n        let basicDataTmp = basicDatas?.find((x) => x.id == e.target.value);\n        console.log(\"basicDataTmp\", basicDataTmp);\n\n        if (basicDataTmp) {\n          tmp = {\n            ...tmp,\n            [e.target.name]: basicDataTmp,\n            basic_data_id: basicDataTmp?.id,\n            basicDataItems: basicDataTmp.items.map((item) => ({\n              id: item.id,\n              label: <p>{item.name}</p>,\n              server_id: item.id,\n              value: item.code,\n            })),\n          };\n          handleUpdateField({ ...tmp });\n        }\n      } else {\n        tmp = {\n          ...tmp,\n          [e.target.name]: e.target.value,\n        };\n        handleUpdateField({ ...tmp });\n      }\n    }\n  };\n  useEffect(() => {\n    !basicDatas && Dispatch(basicDatasList());\n  }, []);\n  const _handleAddOption = (item: initialValues, update?: boolean) => {\n    if (selectedField) {\n      if (item.index !== undefined && item.index !== -1) {\n        handleUpdateOption(\n          selectedField.id,\n          {\n            label: <p>{item.fieldName}</p>,\n            value: item.fieldValue.toString(),\n            id: item.id,\n            server_id: item.server_id,\n          },\n          item.index\n        );\n      } else {\n        handleAddOption(selectedField.id, {\n          label: <p>{item.fieldName}</p>,\n          value: item.fieldValue.toString(),\n        });\n      }\n    }\n  };\n  const _handleOpenAddOptionDialog = (item?: FormOption) => {\n    console.log(\"ite\", item);\n    if (item?.label) {\n      setSelectedOption({\n        index: selectedField?.options?.findIndex(\n          (option) => option.value === item.value\n        ),\n        value: item.value,\n        label: item.label.props.children,\n        id: item.id,\n        server_id: item.server_id,\n      });\n    }\n    if (selectedField && selectedField?.options) {\n      setOpenAddDropdownItemDialog(true);\n    }\n  };\n  const _handleCloseAddOptionDialog = () => {\n    setSelectedOption(undefined);\n    setOpenAddDropdownItemDialog(false);\n  };\n  const _handleDeleteOption = (option: FormOption) => {\n    if (selectedField) {\n      handleDeleteOption(selectedField.id, option.value, option.server_id);\n    }\n  };\n  return (\n    <div>\n      {!selectedField ? (\n        <p>لطفا یک فیلد را برای ویرایش انتخاب کنید</p>\n      ) : selectedField.fromRelatedFields ? (\n        <p>این فیلد از طریق این فرم قابل ویرایش نمی باشد</p>\n      ) : selectedField.readOnly ? (\n        <p>این فیلد قابل ویرایش نمی باشد</p>\n      ) : (\n        <div className=\"w-full flex flex-col items-start justify-start px-4\">\n          <p className=\"text-text-450 mb-[20px]\">\n            نوع فیلد: {selectedField.type}\n          </p>\n          <TextField\n            className=\"mb-[30px]\"\n            name={\"label\"}\n            label={\"عنوان فیلد\"}\n            type=\"text\"\n            placeholder={\"عنوان فیلد\"}\n            formik={{\n              handleChange: (e: any) => _handleUpdateField(e),\n              values: {\n                label: selectedField.label,\n              },\n            }}\n          />\n          <TextField\n            className=\"mb-[30px]\"\n            name={\"name\"}\n            label={\"نامک فیلد\"}\n            type=\"text\"\n            placeholder={\"نامک فیلد\"}\n            formik={{\n              handleChange: (e: any) => _handleUpdateField(e),\n              values: {\n                name: selectedField.name,\n              },\n            }}\n          />\n          <TextField\n            className=\"group\"\n            name={\"placeholder\"}\n            label={\"متن جایگزین\"}\n            type=\"text\"\n            placeholder={\"متن جایگزین\"}\n            formik={{\n              handleChange: (e: any) => _handleUpdateField(e),\n              values: {\n                placeholder: selectedField.placeholder,\n              },\n            }}\n          />\n          <div className=\"w-full mt-[30px]\">\n            <Switch\n              checked={required}\n              setChecked={setRequired}\n              label={\"این فیلد اجباری می باشد\"}\n            />\n          </div>\n\n          {selectedField.options ? (\n            <div className=\"w-full mt-[30px]\">\n              <Switch\n                checked={fromBasicData}\n                setChecked={setFromBasicData}\n                label={t(\"fromBasicDatas\") || \"\"}\n              />\n            </div>\n          ) : (\n            \"\"\n          )}\n\n          {selectedField.options && fromBasicData ? (\n            <DropDown\n              className=\"group mt-[30px]\"\n              name={\"basic_data\"}\n              label={\"داده اولیه\"}\n              options={\n                basicDatas\n                  ? basicDatas.map((data) => {\n                      return {\n                        label: <p>{data.name}</p>,\n                        value: data.id.toString(),\n                      };\n                    })\n                  : []\n              }\n              placeholder={\"انتخاب کنید\"}\n              formik={{\n                handleChange: (e: any) => _handleUpdateField(e),\n                values: {\n                  basic_data: selectedField.basic_data?.id.toString(),\n                },\n              }}\n            />\n          ) : (\n            \"\"\n          )}\n\n          {selectedField.type === \"uploadFile\" && (\n            <div className=\"w-full mt-[30px]\">\n              <Switch\n                checked={onlyImage}\n                setChecked={setOnlyImage}\n                label={t(\"onlyImage\") || \"\"}\n              />\n            </div>\n          )}\n\n          {selectedField.options && !fromBasicData ? (\n            <AddDropdownItemDialog\n              open={openAddDropdownItemDialog}\n              handleClose={_handleCloseAddOptionDialog}\n              field={selectedField}\n              handleAddOption={_handleAddOption}\n              selectedOption={selectedOption}\n            />\n          ) : (\n            \"\"\n          )}\n\n          {selectedField.options && !fromBasicData ? (\n            <div className=\"w-full mt-[25px]\">\n              {selectedField.options.map(\n                (option: FormOption, index: number) => (\n                  <div\n                    key={index}\n                    className=\"mb-[10px] h-14 text-[14px] font-semibold flex items-center rounded-[8px] px-[18px] justify-between bg-text-250\"\n                  >\n                    <p>{option.label}</p>\n                    <div className=\"flex\">\n                      <div\n                        onClick={() => _handleOpenAddOptionDialog(option)}\n                        className=\"w-[24px] h-[24px] me-1 cursor-pointer hover:bg-text-300 flex items-center justify-center rounded-[4px]\"\n                      >\n                        <Edit2 className=\"w-[20px] h-[20px]\" />\n                      </div>\n                      <div\n                        onClick={() => _handleDeleteOption(option)}\n                        className=\"w-[24px] h-[24px] ms-1 cursor-pointer hover:bg-text-300 flex items-center justify-center rounded-[4px]\"\n                      >\n                        <Trash className=\"w-[20px] h-[20px]\" />\n                      </div>\n                    </div>\n                  </div>\n                )\n              )}\n              <div className=\"w-full flex items-center justify-end\">\n                <div className=\"w-[111px] mt-[30px] float-left\">\n                  <Button\n                    icon={<Add />}\n                    text=\"افزودن\"\n                    onClick={_handleOpenAddOptionDialog}\n                  />\n                </div>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\nexport default FormBuilderEditElementTab;\n","import { ReactElement } from \"react\";\n\ntype FormElementItemProps = {\n  icon: ReactElement;\n  label: string;\n  onClick: (element: any, id: number) => void;\n  type: string;\n  id: number;\n};\nconst FormElementItem = ({\n  icon,\n  label,\n  onClick,\n  type,\n  id,\n}: FormElementItemProps) => {\n  return (\n    <div\n      onClick={() => onClick(type, id)}\n      className=\"w-full h-[80px] flex flex-col items-center justify-center bg-text-200 rounded-[6px] cursor-pointer\"\n    >\n      <div>{icon}</div>\n      <p className=\"text-[12px] mt-[10px] text-text-700 font-medium\">{label}</p>\n    </div>\n  );\n};\nexport default FormElementItem;\n","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgNumericField(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 39,\n    height: 24,\n    viewBox: \"0 0 39 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.027 23h11.165c9.305 0 13.028-2.2 13.028-7.7V8.7c0-5.5-3.723-7.7-13.028-7.7H14.027C4.722 1 1 3.2 1 8.7v6.6C1 20.8 4.722 23 14.027 23z\",\n    stroke: \"#303030\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.62 14.227c0-.344-.002-.693-.007-1.045a22.997 22.997 0 0 0-.031-1.049c-.016-.346-.04-.687-.07-1.02a10.488 10.488 0 0 0-.134-.96 7.31 7.31 0 0 0-.207-.868 4.177 4.177 0 0 0-.305-.744l.998-.622c.135.211.249.433.34.665.091.233.167.474.227.724.063.248.113.504.153.767.041.261.08.527.117.799.026.208.047.434.063.676.015.243.027.49.035.74.01.25.017.498.02.744l.003.688v.505H7.621zM21.026 8.013c.03.188.051.36.067.517.016.156.023.3.023.434 0 .248-.036.493-.109.736-.073.24-.183.456-.329.65-.143.19-.323.345-.54.465a1.56 1.56 0 0 1-.755.176c-.068 0-.134-.001-.2-.004a2.127 2.127 0 0 1-.183-.024 23.971 23.971 0 0 1 .11 1.71c.007.29.01.574.01.854.003.279.005.54.005.786h-1.201c0-.438-.006-.88-.016-1.323a20.168 20.168 0 0 0-.063-1.287 12.676 12.676 0 0 0-.14-1.174 5.868 5.868 0 0 0-.251-.994l-.114-.274a3.357 3.357 0 0 0-.176-.387 4.952 4.952 0 0 0-.101-.192l1.01-.642a3.706 3.706 0 0 1 .25.458c.036.073.073.154.11.243l.124.297c.047.11.096.212.145.305.052.094.111.175.176.243a.764.764 0 0 0 .22.16.665.665 0 0 0 .285.051.48.48 0 0 0 .31-.094.498.498 0 0 0 .156-.223.923.923 0 0 0 .055-.3 7.02 7.02 0 0 0 .007-.326c0-.099-.006-.195-.02-.29a6.779 6.779 0 0 0-.046-.34l1.181-.211zM33.377 8.005l.078.43c.02.118.036.222.047.314a3.253 3.253 0 0 1 .035.47c0 .2-.026.4-.078.598a1.652 1.652 0 0 1-.247.536 1.3 1.3 0 0 1-.422.383c-.17.1-.372.15-.607.15a1.387 1.387 0 0 1-.693-.176 1.2 1.2 0 0 1-.23-.177c-.134.144-.28.25-.439.32a1.412 1.412 0 0 1-.563.103h-.145a1.181 1.181 0 0 1-.133-.016c.029.245.052.511.07.798.019.287.032.58.04.877.01.297.017.592.02.884.004.29.007.56.007.81h-1.213a11.068 11.068 0 0 0 .012-.47c.002-.09.004-.178.004-.262a7.2 7.2 0 0 0 .003-.207 23.603 23.603 0 0 0-.05-1.518c-.021-.272-.051-.546-.09-.822a8.511 8.511 0 0 0-.15-.818 6.242 6.242 0 0 0-.226-.779c-.091-.25-.2-.486-.325-.708l1.068-.622a3.06 3.06 0 0 1 .215.391c.04.076.081.163.126.263.044.096.095.21.152.34.058.133.106.243.145.329.042.083.084.15.125.2.042.049.09.084.141.105.053.018.12.027.204.027a.268.268 0 0 0 .176-.055.362.362 0 0 0 .11-.144.745.745 0 0 0 .058-.216c.01-.08.016-.164.016-.25 0-.096-.005-.2-.016-.31l-.039-.406 1.104-.157.027.263c.01.099.023.203.039.313.016.107.035.214.059.32.023.107.052.203.086.286.036.084.08.151.129.204.05.052.108.078.176.078a.147.147 0 0 0 .114-.047.362.362 0 0 0 .066-.121.75.75 0 0 0 .031-.153 1.05 1.05 0 0 0 .008-.266 2.124 2.124 0 0 0-.02-.168l-.042-.27a29.256 29.256 0 0 0-.075-.43l1.111-.224z\",\n    fill: \"#303030\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNumericField);\nexport default __webpack_public_path__ + \"static/media/NumericField.5aaa2f830115a4867179a104cf7d2f9b.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDropdown(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 39,\n    height: 24,\n    viewBox: \"0 0 39 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.027 23h11.165c9.305 0 13.028-2.2 13.028-7.7V8.7c0-5.5-3.723-7.7-13.028-7.7H14.027C4.722 1 1 3.2 1 8.7v6.6C1 20.8 4.722 23 14.027 23z\",\n    stroke: \"#303030\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m6 10.065 3.883 3.872 3.883-3.872\",\n    stroke: \"#303030\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDropdown);\nexport default __webpack_public_path__ + \"static/media/Dropdown.4e6a7ad2d24d2f7fdc16c009e562310e.svg\";\nexport { ForwardRef as ReactComponent };","import { AnyAction, ThunkAction } from \"@reduxjs/toolkit\";\nimport formSlice from \"./slice\";\nimport { RootState } from \"../store\";\nimport formService from \"./service\";\n\nconst formActions = formSlice.actions;\n\nexport const getFormFieldTypes = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  AnyAction\n> => {\n  return async (dispatch, getState) => {\n    const response = await formService.getFormFieldTypes();\n    dispatch(formActions.getFormFieldTypes(response));\n  };\n};\n","import { ExportCurve, TextBlock, TickSquare } from \"iconsax-react\";\nimport FormElementItem from \"./FormElementItem\";\nimport { ReactComponent as Frame } from \"../../../assets/icons/Frame.svg\";\nimport { ReactComponent as NumericField } from \"../../../assets/icons/NumericField.svg\";\nimport { ReactComponent as Dropdown } from \"../../../assets/icons/Dropdown.svg\";\nimport { useAppDispatch, useAppSelector } from \"app/redux/hooks\";\nimport { useEffect } from \"react\";\nimport { getFormFieldTypes } from \"app/redux/forms/actions\";\nimport { Skeleton } from \"@mui/material\";\nimport { FormField } from \"app/models/form\";\nimport DropDown from \"components/form/Dropdown\";\nimport { useTranslation } from \"react-i18next\";\n\ntype FormBuilderElementsTabProps = {\n  addElement(element: any, id: number, fromRelatedFields?: boolean): void;\n  relatedFields?: FormField[];\n};\n\nconst FormBuilderElementsTab = ({\n  addElement,\n  relatedFields,\n}: FormBuilderElementsTabProps) => {\n  const { t } = useTranslation();\n  const formFieldTypes = useAppSelector((state) => state.forms.formFieldTypes);\n  const Dispatch = useAppDispatch();\n  useEffect(() => {\n    if (!formFieldTypes) {\n      Dispatch(getFormFieldTypes());\n    }\n  }, []);\n  const parseIcon = (icon: string): any => {\n    switch (icon) {\n      case \"TextBlock\":\n        return <TextBlock />;\n      case \"Frame\":\n        return <Frame />;\n      case \"NumericField\":\n        return <NumericField />;\n      case \"ExportCurve\":\n        return <ExportCurve />;\n      case \"Dropdown\":\n        return <Dropdown />;\n      case \"TickSquare\":\n        return <TickSquare />;\n      default:\n        return <TextBlock />;\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"grid grid-cols-3 gap-[10px] px-4\">\n        {formFieldTypes ? (\n          formFieldTypes.map((item, index) => (\n            <FormElementItem\n              key={item.id}\n              id={item.id}\n              type={item.type}\n              onClick={addElement}\n              icon={parseIcon(item.icon)}\n              label={item.label}\n            />\n          ))\n        ) : (\n          <>\n            {/* repeat 9 in loop skeleton */}\n            {Array.from(Array(9).keys()).map((item, index) => (\n              <Skeleton\n                key={index}\n                variant=\"rounded\"\n                width={80}\n                height={80}\n                animation=\"wave\"\n              />\n            ))}\n          </>\n        )}\n        {/* <FormElementItem\n          type=\"text\"\n          onClick={addElement}\n          icon={<TextBlock />}\n          label={\"متن کوتاه\"}\n        />\n        <FormElementItem\n          type=\"textArea\"\n          onClick={addElement}\n          icon={<Frame />}\n          label={\"متن بلند\"}\n        />\n        <FormElementItem\n          type=\"number\"\n          onClick={addElement}\n          icon={<NumericField />}\n          label={\"فیلد عددی\"}\n        />\n        <FormElementItem\n          type=\"uploadFile\"\n          onClick={addElement}\n          icon={<ExportCurve />}\n          label={\"آپلود فایل\"}\n        />\n        <FormElementItem\n          type=\"dropDown\"\n          onClick={addElement}\n          icon={<Dropdown />}\n          label={\"دراپ داون\"}\n        />\n        <FormElementItem\n          type=\"checkbox\"\n          onClick={addElement}\n          icon={<TickSquare />}\n          label={\"چند انتخابی\"}\n        /> */}\n      </div>\n      <div className=\"px-4\">\n        {relatedFields ? (\n          <DropDown\n            className=\"group mt-[30px]\"\n            name={\"relatedFields\"}\n            label={t(\"selectFromRelatedFields\")}\n            options={\n              relatedFields\n                ? relatedFields.map((data) => {\n                    return {\n                      label: (\n                        <p>\n                          {data.label} {t(\"fromStep\")}{\" \"}\n                          {data.form?.step?.step_name}\n                        </p>\n                      ),\n                      value: data.server_id?.toString(),\n                      type: data.type,\n                    };\n                  })\n                : []\n            }\n            placeholder={\"انتخاب کنید\"}\n            formik={{\n              handleChange: (e: any) => {\n                console.log(\"e\", e);\n                addElement(e.target.type, e.target.value, true);\n              },\n              values: {\n                relatedFields: 0,\n                // basic_data: selectedField.basic_data?.id.toString(),\n              },\n            }}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\nexport default FormBuilderElementsTab;\n","import { Button } from \"@mui/material\";\nimport { ArchiveTick, Trash } from \"iconsax-react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Condition,\n  FormField,\n  FormOption,\n  selectedFieldType,\n} from \"../../../app/models/form\";\nimport DropDown from \"../../form/Dropdown\";\nimport { useTranslation } from \"react-i18next\";\n\ntype ConditionItemProps = {\n  conditionalfields: FormField[];\n  formElements: FormField[];\n  condition: Condition;\n  setCondition: (condition: Condition) => void;\n  deleteCondition: (condition: number) => void;\n  saveCondition: (condition: number) => void;\n};\n\nconst ConditionItem = ({\n  conditionalfields,\n  formElements,\n  condition,\n  setCondition,\n  deleteCondition,\n  saveCondition,\n}: ConditionItemProps) => {\n  const [selectedField, setSelectedField] = useState<selectedFieldType>();\n  const [selectedFieldValue, setSelectedFieldValue] = useState<FormOption[]>(\n    []\n  );\n  const [operation, setOperation] = useState<FormOption>();\n  const [relationField, setRelationField] = useState<selectedFieldType>();\n  const { t } = useTranslation();\n  const handleDeleteItem = (item: any) => {\n    let index = selectedFieldValue.findIndex((x) => x.value == item.value);\n    if (index > -1) {\n      let newSelectedFieldValue = selectedFieldValue;\n      newSelectedFieldValue.splice(index, 1);\n      setSelectedFieldValue([...newSelectedFieldValue]);\n      updateConditions({\n        ...condition,\n        values: [...newSelectedFieldValue],\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (\n      condition.field &&\n      condition.operation &&\n      condition.relationField &&\n      condition.values\n    ) {\n      let selectedFieldTmp = conditionalfields.find(\n        (x) => x.id.toString() == condition.field\n      );\n\n      let relationFieldTmp = formElements.find(\n        (x) => x.id.toString() == condition.relationField\n      );\n      // let selectedFieldValueTmp = selectedFieldTmp?.options;\n\n      if (selectedFieldTmp && relationFieldTmp && condition.values) {\n        console.log();\n        setSelectedField({\n          label: selectedFieldTmp.label,\n          value: selectedFieldTmp.id.toString(),\n          options: selectedFieldTmp?.basicDataItems || selectedFieldTmp.options,\n        });\n\n        //its static\n        setOperation(condition.operation);\n\n        setRelationField({\n          label: relationFieldTmp.label,\n          value: relationFieldTmp.id.toString(),\n        });\n\n        setSelectedFieldValue(condition.values);\n      }\n    }\n  }, [condition, conditionalfields, formElements]);\n\n  const updateConditions = (condition: Condition) => {\n    let newCondition: Condition = {\n      ...condition,\n      saved: false,\n    };\n    setCondition({ ...newCondition });\n  };\n\n  //delete condition\n  const handleDeleteCondition = () => {\n    deleteCondition(condition.id);\n  };\n\n  //save condition\n  const handleSaveCondition = () => {\n    saveCondition(condition.id);\n  };\n  const handleChangeField = (e: any) => {\n    let selectedField = conditionalfields.find(\n      (x) => x.id.toString() == e.target.value\n    );\n    console.log(\"seleeee\", selectedField);\n\n    setSelectedField({\n      ...e,\n      options: selectedField?.basicDataItems || selectedField?.options,\n    });\n\n    setSelectedFieldValue([]);\n    updateConditions({\n      ...condition,\n      field: e.target.value,\n    });\n  };\n\n  const handleChangeOperation = (e: any) => {\n    setOperation(e.target);\n    updateConditions({ ...condition, operation: e.target });\n  };\n\n  const handleChangeRelationField = (e: any) => {\n    const field = formElements.find((x) => x.id.toString() == e.target.value);\n    if (field) {\n      setRelationField({ label: field.label, value: field.id.toString() });\n      updateConditions({\n        ...condition,\n        relationField: field.id,\n      });\n    }\n  };\n\n  const handleChangeValue = (e: any) => {\n    const options = selectedField?.options;\n    let index = selectedFieldValue.findIndex((x) => x.id == e.target.value);\n    if (index > -1) {\n    } else {\n      setSelectedFieldValue([\n        ...selectedFieldValue,\n        {\n          ...options.find((x: any) => x.id == e.target.value),\n        },\n      ]);\n      updateConditions({\n        ...condition,\n        values: [\n          ...selectedFieldValue,\n          {\n            ...options.find((x: any) => x.id == e.target.value),\n          },\n        ],\n      });\n    }\n  };\n  console.log(\"selecccc\", selectedField);\n  return (\n    <div className=\"w-full flex flex-col items-start justify-start px-4 border-b pb-[30px] border-text-400 mb-[18px]\">\n      <DropDown\n        className=\"group mb-[30px]\"\n        name={\"condField\"}\n        label={\"فیلد\"}\n        options={\n          conditionalfields &&\n          conditionalfields.map((field) => {\n            return {\n              label: <p>{field.label}</p>,\n              value: field.id.toString(),\n            };\n          })\n        }\n        placeholder={\"انتخاب کنید\"}\n        formik={{\n          handleChange: handleChangeField,\n          values: {\n            condField: selectedField?.value,\n          },\n        }}\n      />\n      <DropDown\n        className={`group ${selectedFieldValue.length > 0 ? \"mb-[15px]\" : \"mb-[30px]\"\n          }`}\n        name={\"condFieldValue\"}\n        label={\"برابر\"}\n        options={\n          selectedField &&\n          selectedField?.options?.map((option: any) => {\n            return {\n              label: option.label,\n              value: option.id,\n            };\n          })\n        }\n        placeholder={\n          selectedField ? \"انتخاب کنید\" : \"ابتدا فیلد را انتخاب کنید\"\n        }\n        formik={{\n          handleChange: handleChangeValue,\n          values: {\n            condFieldValue: null,\n          },\n        }}\n      />\n      {selectedFieldValue.length > 0 && (\n        <div className=\"flex items-center justify-start w-full mb-[30px]\">\n          {selectedFieldValue.map((item, index) => {\n            return (\n              <div\n                key={index}\n                className=\"w-[97px] h-[48px] rounded-[24px] border border-text-400 flex items-center justify-between pe-2 ps-4 me-2\"\n              >\n                <p className=\"text-[14px]\">{item.label}</p>\n                <div\n                  onClick={() => handleDeleteItem(item)}\n                  className=\"cursor-pointer\"\n                >\n                  <Trash className=\"w-[20px] h-[20px]\" />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n      <DropDown\n        className=\"group mb-[30px]\"\n        name={\"operation\"}\n        label={\"عملیات\"}\n        options={[\n          { label: <p>نمایش</p>, value: \"show\" },\n          { label: <p>عدم نمایش</p>, value: \"hide\" },\n        ]}\n        placeholder={\"عملیات\"}\n        formik={{\n          handleChange: handleChangeOperation,\n          values: {\n            operation: operation?.value,\n          },\n        }}\n      />\n      <DropDown\n        className=\"group mb-[30px]\"\n        name={\"relationField\"}\n        label={\"فیلد وابسته\"}\n        options={\n          formElements &&\n          selectedField &&\n          //form elements minus selected field\n          formElements\n            .filter((x) => x.id.toString() != selectedField.value)\n            .map((field) => {\n              return {\n                label: <p>{field.label}</p>,\n                value: field.id.toString(),\n              };\n            })\n        }\n        placeholder={\n          selectedField ? \"انتخاب کنید\" : \"ابتدا فیلد را انتخاب کنید\"\n        }\n        formik={{\n          handleChange: handleChangeRelationField,\n          values: {\n            relationField: relationField?.value,\n          },\n        }}\n      />\n      <div className=\"flex items-center justify-between w-full\">\n        <Button\n          onClick={handleDeleteCondition}\n          className={`h-[48px] ${condition?.saved ? \"w-full\" : \"w-[calc(50%-8px)] me-2\"\n            } !rounded-[8px]  !border !border-solid !border-error-primary !text-error-primary `}\n        >\n          <Trash />\n          <p className=\"text-[14px] font-bold ms-1\">{t(\"deleteCondition\")}</p>\n        </Button>\n        {!condition?.saved && (\n          <Button\n            onClick={handleSaveCondition}\n            className=\"h-[48px] w-[calc(50%-8px)] !rounded-[8px] ms-2 !border !border-solid !border-success-primary !text-success-primary\"\n          >\n            <ArchiveTick />\n            <p className=\"text-[14px] font-bold ms-1\">{t(\"saveCondition\")}</p>\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default ConditionItem;\n","import { useState } from \"react\";\nimport { Condition, FormField } from \"../../../app/models/form\";\nimport DropDown from \"../../form/Dropdown\";\nimport ConditionItem from \"./ConditionItem\";\nimport Button from \"../../../components/button/Button\";\nimport { Add } from \"iconsax-react\";\nimport SnackbarUtils from \"../../../app/utils/SnackbarUtils\";\nimport { useTranslation } from \"react-i18next\";\n\ntype FormBuilderConditionsTabProps = {\n  conditionalfields: FormField[];\n  formElements: FormField[];\n  saveConditions: (conditions: Condition[]) => void;\n  savedConditions: Condition[];\n};\nconst FormBuilderConditionsTab = ({\n  conditionalfields,\n  formElements,\n  saveConditions,\n  savedConditions,\n}: FormBuilderConditionsTabProps) => {\n  const [conditions, setConditions] = useState<Condition[]>([\n    ...savedConditions,\n  ]);\n  console.log(\"condiii\", conditions);\n  const {t} = useTranslation()\n  const handleAddCondition = () => {\n    if (conditionalfields.length > 0 && formElements.length >= 2) {\n      setConditions([\n        ...conditions,\n        {\n          id: Math.floor(Math.random() * 1000),\n          field: null,\n          operation: null,\n          values: [],\n          relationField: null,\n          saved: false,\n        },\n      ]);\n    } else {\n      SnackbarUtils.error(\n        \"فیلد های ایجاد شده برای ایجاد شرط فرم مناسب نمی باشند\"\n      );\n    }\n  };\n\n  const setCondition = (condition: Condition) => {\n    let index = conditions.findIndex((x) => x.id == condition.id);\n    if (index > -1) {\n      let newConditions = conditions;\n      newConditions[index] = condition;\n      setConditions([...newConditions]);\n    }\n  };\n\n  const handleDeleteCondition = (condition: number) => {\n    let index = conditions.findIndex((x) => x.id == condition);\n    if (index > -1) {\n      let newConditions = conditions;\n      newConditions.splice(index, 1);\n      setConditions([...newConditions]);\n    }\n    saveConditions([...conditions]);\n    SnackbarUtils.success(t('conditionDeleted'));\n  };\n\n  const handleSaveCondition = (condition: number) => {\n    //check all filds filled\n\n    let index = conditions.findIndex((x) => x.id == condition);\n    if (index > -1) {\n      let condTemp = conditions[index];\n      if (\n        condTemp.field &&\n        condTemp.operation &&\n        condTemp.values &&\n        condTemp.values.length > 0 &&\n        condTemp.relationField\n      ) {\n        //check if condtemp.field already exist in conditionalfields\n        let fieldIndex = conditionalfields.findIndex(\n          (x) => x.id == condTemp.field\n        );\n        if (fieldIndex > -1) {\n          //check if condtemp.relationField already exist in formElements\n          let relationFieldIndex = formElements.findIndex(\n            (x) => x.id == condTemp.relationField\n          );\n          if (relationFieldIndex > -1) {\n            //if related fields has readonly true cant save condition\n            if (formElements[relationFieldIndex].readOnly) {\n              SnackbarUtils.error(\"فیلد انتخاب شده در فرم قابل شرط گذاری نیست\");\n              return;\n            }\n\n            //finally save form!\n            let newConditions = conditions;\n            newConditions[index].saved = true;\n            setConditions([...newConditions]);\n            saveConditions(conditions);\n            SnackbarUtils.success(\"شرط ذخیره شد\");\n          } else {\n            SnackbarUtils.error(\"فیلد انتخاب شده در فرم وجود ندارد\");\n          }\n        } else {\n          SnackbarUtils.error(\"فیلد انتخاب شده در فرم وجود ندارد\");\n        }\n      } else {\n        SnackbarUtils.error(\"لطفا تمام فیلد های شرط را پر کنید\");\n      }\n    }\n  };\n\n  return (\n    <div>\n      {conditions &&\n        conditions.map((cond, index) => {\n          return (\n            <ConditionItem\n              key={index}\n              conditionalfields={conditionalfields}\n              formElements={formElements}\n              condition={cond}\n              setCondition={setCondition}\n              saveCondition={handleSaveCondition}\n              deleteCondition={handleDeleteCondition}\n            />\n          );\n        })}\n\n      <div className=\"w-full px-[16px]\">\n        <Button\n          icon={<Add />}\n          text=\"افزودن شرط جدید\"\n          onClick={handleAddCondition}\n        />\n      </div>\n    </div>\n  );\n};\nexport default FormBuilderConditionsTab;\n","import React, { ReactElement } from \"react\";\nimport { Condition, FormField, FormOption } from \"../../app/models/form\";\nimport Tabs from \"../tabs/Tabs\";\nimport FormBuilderEditElementTab from \"./editElement/FormBuilderEditElementTab\";\nimport FormBuilderElementsTab from \"./elements/FormBuilderElementsTab\";\nimport FormBuilderConditionsTab from \"./formConditions/FormBuilderConditionsTab\";\n\ntype FormBuilderSidebarProps = {\n  handleChangeTab: (value: string) => void;\n  selectedTab: string;\n  addElement(element: any, id: number): void;\n  selectedField?: FormField;\n  handleUpdateField: (field: FormField) => void;\n  handleAddOption: (id: number, option: FormOption) => void;\n  handleUpdateOption: (id: number, option: FormOption, index: number) => void;\n  handleDeleteOption: (\n    id: number,\n    option: string,\n    server_id?: number | null\n  ) => void;\n  setOnlyImage: (onlyImage: boolean) => void;\n  setRequired: (required: boolean) => void;\n  formElements: FormField[];\n  saveConditions: (conditions: Condition[]) => void;\n  savedConditions: Condition[];\n  setFromBasicData: (required: boolean) => void;\n  relatedFields?: FormField[];\n};\nconst FormBuilderSidebar = ({\n  handleChangeTab,\n  selectedTab,\n  addElement,\n  selectedField,\n  handleUpdateField,\n  handleAddOption,\n  handleDeleteOption,\n  handleUpdateOption,\n  setOnlyImage,\n  setRequired,\n  formElements,\n  saveConditions,\n  savedConditions,\n  setFromBasicData,\n  relatedFields,\n}: FormBuilderSidebarProps) => {\n  const handleSaveConditions = (conditions: Condition[]) => {\n    saveConditions(conditions);\n  };\n\n  const _renderTab = (): ReactElement => {\n    switch (selectedTab) {\n      case \"elements\":\n        return (\n          <FormBuilderElementsTab\n            addElement={addElement}\n            relatedFields={relatedFields}\n          />\n        );\n      case \"editElement\":\n        return (\n          <FormBuilderEditElementTab\n            handleUpdateField={handleUpdateField}\n            selectedField={selectedField}\n            handleAddOption={handleAddOption}\n            handleUpdateOption={handleUpdateOption}\n            handleDeleteOption={handleDeleteOption}\n            onlyImage={selectedField?.onlyImage || false}\n            setOnlyImage={setOnlyImage}\n            required={selectedField?.required || false}\n            setRequired={setRequired}\n            fromBasicData={selectedField?.basic_data_id ? true : false}\n            setFromBasicData={setFromBasicData}\n          />\n        );\n      case \"formConditions\":\n        return (\n          <FormBuilderConditionsTab\n            conditionalfields={formElements.filter((x) => x.options)}\n            formElements={formElements}\n            saveConditions={handleSaveConditions}\n            savedConditions={savedConditions}\n          />\n        );\n      default:\n        return <FormBuilderElementsTab addElement={addElement} />;\n    }\n  };\n  return (\n    <div className=\"min-h-[800px] basis-1/4 bg-white pt-[20px] me-3 border border-text-300\">\n      <Tabs\n        handleChange={handleChangeTab}\n        items={[\n          {\n            label: \"المان ها\",\n            value: \"elements\",\n          },\n          {\n            label: \"ویرایش المان\",\n            value: \"editElement\",\n          },\n          {\n            label: \"شرط های فرم\",\n            value: \"formConditions\",\n          },\n        ]}\n        value={selectedTab}\n      />\n      {_renderTab()}\n    </div>\n  );\n};\n\nexport default FormBuilderSidebar;\n","import { Copy, HambergerMenu, Information } from \"iconsax-react\";\nimport { ReactElement, useEffect, useRef, useState } from \"react\";\nimport { FormField } from \"../../../app/models/form\";\nimport TextField from \"../../form/TextField\";\nimport { Close, HourglassEmptyOutlined } from \"@mui/icons-material\";\nimport DropDown from \"../../form/Dropdown\";\nimport Checkbox from \"../../form/Checkbox\";\nimport CheckboxGroup from \"../../form/CheckboxGroup\";\nimport TextArea from \"../../form/TextArea\";\nimport UploadFile from \"../../form/UploadFile\";\nimport { useTranslation } from \"react-i18next\";\nimport { renderElement } from \"app/utils/FormActions\";\n\ntype FormContentProps = {\n  setFormElements: (formElements: any) => void;\n  formElements: FormField[];\n  handleSelectField: (formElement?: FormField) => void;\n  lastId: number;\n  setLastId: (lastId: number) => void;\n  selectedField?: FormField;\n  deleteItem: (item: FormField) => void;\n  saveFormLoading: boolean;\n};\n\nconst FormContent = ({\n  formElements,\n  setFormElements,\n  handleSelectField,\n  lastId,\n  setLastId,\n  selectedField,\n  deleteItem,\n  saveFormLoading,\n}: FormContentProps) => {\n  const { t } = useTranslation([\"common\", \"validations\"]);\n  console.log(\"el\", formElements);\n\n  // const renderElement = (element: FormField): ReactElement => {\n  //   switch (element.type) {\n  //     case \"text\":\n  //       return (\n  //         <TextField\n  //           className=\"group\"\n  //           name={element.name}\n  //           label={element.label}\n  //           type=\"text\"\n  //           placeholder={element.placeholder}\n  //           inputActions={() => fieldActions(element)}\n  //           formik={{\n  //             handleChange: () => {},\n  //           }}\n  //         />\n  //       );\n  //     case \"textArea\":\n  //       return (\n  //         <TextArea\n  //           className=\"group\"\n  //           name={element.name}\n  //           label={element.label}\n  //           inputActions={() => fieldActions(element)}\n  //           formik={{\n  //             handleChange: () => {},\n  //           }}\n  //         />\n  //       );\n  //     case \"number\":\n  //       return (\n  //         <TextField\n  //           className=\"group\"\n  //           name={element.name}\n  //           label={element.label}\n  //           type=\"number\"\n  //           placeholder={element.placeholder}\n  //           inputActions={() => fieldActions(element)}\n  //           formik={{\n  //             handleChange: () => {},\n  //           }}\n  //         />\n  //       );\n  //     case \"uploadFile\":\n  //       return (\n  //         <UploadFile\n  //           className=\"group\"\n  //           name={element.name}\n  //           label={element.label}\n  //           imageOnly={element.onlyImage}\n  //           placeholder={element.placeholder}\n  //           inputActions={() => fieldActions(element)}\n  //           formik={{\n  //             handleChange: () => {},\n  //           }}\n  //         />\n  //       );\n  //     case \"dropDown\":\n  //       return (\n  //         <DropDown\n  //           className=\"group\"\n  //           name={element.name}\n  //           label={element.label}\n  //           options={element.basicDataItems || element.options}\n  //           placeholder={element.placeholder}\n  //           inputActions={() => fieldActions(element)}\n  //           formik={{\n  //             handleChange: () => {},\n  //           }}\n  //         />\n  //       );\n  //     case \"checkbox\":\n  //       return (\n  //         <CheckboxGroup\n  //           className=\"group\"\n  //           name={element.name}\n  //           label={element.label}\n  //           options={element.basicDataItems || element.options}\n  //           placeholder={element.placeholder}\n  //           inputActions={() => fieldActions(element)}\n  //           formik={{\n  //             handleChange: () => {},\n  //           }}\n  //         />\n  //       );\n  //     default:\n  //       return <p>not defined</p>;\n  //   }\n  // };\n  const fieldActions = (element: FormField) => {\n    return (\n      <div className=\"flex\">\n        <div className=\"flex opacity-0 pointer-events-none\tgroup-hover:pointer-events-auto\t group-hover:opacity-100 transition-all \">\n          {(!element.readOnly || element.fromRelatedFields) && (\n            <div\n              onClick={() => handleDeleteItem(element)}\n              id=\"deleteItem\"\n              className=\"cursor-pointer ms-2 w-[30px] h-[30px] rounded-full border border-error-primary flex items-center justify-center\"\n            >\n              <Close className=\"w-[16px] h-[16px] text-error-primary pointer-events-none\" />\n            </div>\n          )}\n          {!element.fromRelatedFields && (\n            <div\n              onClick={() => handleCopyItem(element)}\n              className=\"cursor-pointer ms-2 w-[30px] h-[30px] rounded-full border border-success-primary flex items-center justify-center\"\n            >\n              <Copy className=\"w-[16px] h-[16px] text-success-primary\" />\n            </div>\n          )}\n        </div>\n        {element.fromRelatedFields && (\n          <div className=\"ms-3 bg-secondary-main flex items-center justify-center px-2 py-0.5 rounded-full text-[11px]\">\n            {t(\"fromStep\")} {element.form?.step?.step_name}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const handleCopyItem = (element: FormField) => {\n    //copy element add add it just after the original element in the array\n    let tmp = [...formElements];\n    const index = tmp.indexOf(element);\n    // console.log(\"item\", index);\n\n    if (index > -1) {\n      tmp.splice(index + 1, 0, {\n        ...element,\n        id: lastId + 1,\n        server_id: null,\n        label: element.label + \" \" + t(\"copy\"),\n        name: element.name + (lastId + 1).toString(),\n        placeholder: element.placeholder + (lastId + 1).toString(),\n        readOnly: false,\n      });\n      setFormElements(tmp);\n      setLastId(lastId + 1);\n    }\n  };\n  const handleDeleteItem = (element: FormField) => {\n    deleteItem(element);\n  };\n\n  const dragItem = useRef<any>();\n  const dragOverItem = useRef<any>();\n\n  const dragStart = (e: any, position: any) => {\n    dragItem.current = position;\n  };\n\n  const dragEnter = (e: any, position: any) => {\n    dragOverItem.current = position;\n  };\n\n  const drop = (e: any) => {\n    const copyListItems = [...formElements];\n    const dragItemContent = copyListItems[dragItem.current];\n    copyListItems.splice(dragItem.current, 1);\n    copyListItems.splice(dragOverItem.current, 0, dragItemContent);\n    dragItem.current = null;\n    dragOverItem.current = null;\n    setFormElements(copyListItems);\n  };\n\n  //   console.log('formElements', formElements)\n  return (\n    <div className=\"px-4 py-6 draggable grid grid-cols-1 gap-9\">\n      {formElements.length === 0 && !saveFormLoading && (\n        <div className=\"flex flex-col items-center justify-center mt-8\">\n          <div className=\"w-[50px] rounded-full h-[50px] bg-primary-main text-white flex items-center justify-center\">\n            <Information />\n          </div>\n          <p className=\"text-gray-400 text-[16px] font-bold mt-4\">\n            {t(\"addFieldToStart\")}\n          </p>\n        </div>\n      )}\n      {formElements.map((element, index) => {\n        return (\n          <div\n            onDragStart={(e) => dragStart(e, index)}\n            onDragEnter={(e) => dragEnter(e, index)}\n            onDragEnd={drop}\n            key={index}\n            onClick={(e: any) => {\n              e.target.id !== \"deleteItem\" && handleSelectField(element);\n            }}\n            draggable\n            className=\"flex\"\n          >\n            <div\n              className={`me-3 cursor-move ${\n                selectedField?.id === element.id ? \"text-primary-main\" : \"\"\n              }`}\n            >\n              <HambergerMenu />\n            </div>\n            {renderElement(element, fieldActions, undefined, true)}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\nexport default FormContent;\n","import { ArchiveTick, Eye } from \"iconsax-react\";\nimport { useEffect, useState } from \"react\";\nimport { Condition, FormField, FormOption } from \"../../app/models/form\";\nimport { setCollapseMenu } from \"../../app/redux/application/actions\";\nimport { useAppDispatch, useAppSelector } from \"../../app/redux/hooks\";\nimport Breadcrumb from \"../../components/breadcrumb/Breadcrumb\";\nimport Button from \"../../components/button/Button\";\nimport FormBuilderSidebar from \"../../components/formBuilder/FormBuilderSidebar\";\nimport FormContent from \"../../components/formBuilder/formContent/FormContent\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { getProductStepInfo } from \"app/redux/products/actions\";\nimport formService from \"app/redux/forms/service\";\nimport { CircularProgress } from \"@mui/material\";\nimport SnackbarUtils from \"app/utils/SnackbarUtils\";\nimport FullscreenLoading from \"components/loading/FullscreenLoading\";\n\nconst FormBuilder = () => {\n  const Dispatch = useAppDispatch();\n  let { code, step_id } = useParams();\n  const formFieldTypes = useAppSelector((state) => state.forms.formFieldTypes);\n\n  useEffect(() => {\n    Dispatch(setCollapseMenu(true));\n  });\n  const [selectedTab, setSelectedTab] = useState<string>(\"elements\");\n  const handleChangeTab = (value: string): void => {\n    console.log(\"value\", value);\n    value === \"formConditions\" && handleSaveForm();\n    setSelectedTab(value);\n  };\n  const [formElements, setFormElements] = useState<FormField[]>([]);\n  const [formRelatedElements, setFormRelatedElements] = useState<FormField[]>(\n    []\n  );\n  const [selectedField, setSelectedField] = useState<FormField>();\n  const [savedConditions, setSavedConditions] = useState<Condition[]>([]);\n  const [saveFormLoading, setSaveFormLoading] = useState<boolean>(true);\n  const basicDatas = useAppSelector((state) => state.basicData.basicDatas);\n\n  const [formId, setFormId] = useState<number>(0);\n  const productStepInfo = useAppSelector(\n    (state) => state.products.productStepInfo\n  );\n  const [lastId, setLastId] = useState<number>(0);\n  const { t } = useTranslation([\"common\", \"validations\"]);\n  const Navigate = useNavigate();\n  useEffect(() => {\n    Dispatch(getProductStepInfo(parseInt(step_id || \"0\")));\n    return () => {\n      Dispatch(setCollapseMenu(false));\n      Dispatch(getProductStepInfo(parseInt(\"0\")));\n    };\n  }, []);\n  const handleAddElement = (\n    element: string,\n    id: number,\n    fromRelatedFields?: boolean\n  ) => {\n    let tmp: FormField = {\n      name: \"input\" + element + (lastId + 1).toString(),\n      placeholder: element + (lastId + 1).toString(),\n      label: \"عنوان فیلد\",\n      type: element,\n      typeId: id,\n      required: false,\n      id: lastId + 1,\n    };\n    if (element === \"dropDown\" || element === \"checkbox\") {\n      tmp = { ...tmp, options: [] };\n    }\n    if (element === \"uploadFile\") {\n      tmp = { ...tmp, onlyImage: false };\n    }\n\n    //if from related elements\n    if (fromRelatedFields) {\n      let relatedTmp = formRelatedElements.find((x) => x.server_id == id);\n      // console.log(\"relatedTmp\", relatedTmp);\n      if (relatedTmp) {\n        tmp = { ...relatedTmp, fromRelatedFields: fromRelatedFields };\n      }\n    }\n\n    setFormElements([...formElements, tmp]);\n    setLastId(lastId + 1);\n  };\n  const handleSelectField = (element?: FormField) => {\n    if (!element) {\n      setSelectedField(undefined);\n      handleChangeTab(\"elements\");\n    } else {\n      setSelectedField(element);\n      handleChangeTab(\"editElement\");\n    }\n  };\n  const handleUpdateField = (field: FormField) => {\n    let tmp = [...formElements];\n    let foundIndex = tmp.findIndex((x) => x.id == field.id);\n    if (foundIndex !== -1) {\n      tmp[foundIndex] = { ...field };\n      setFormElements([...tmp]);\n      setSelectedField({ ...field });\n    }\n  };\n  const handleAddOption = (id: number, option: FormOption) => {\n    let tmp = [...formElements];\n    let foundIndex = tmp.findIndex((x) => x.id == id);\n    if (foundIndex !== -1 && tmp[foundIndex].options) {\n      const options = tmp[foundIndex].options || [];\n      tmp[foundIndex] = {\n        ...tmp[foundIndex],\n        options: [\n          ...options,\n          { ...option, id: Math.floor(Math.random() * 100) },\n        ],\n      };\n      setFormElements([...tmp]);\n      setSelectedField({ ...tmp[foundIndex] });\n    }\n  };\n  const handleUpdateOption = (\n    id: number,\n    option: FormOption,\n    index: number\n  ) => {\n    let tmp = [...formElements];\n    let foundIndex = tmp.findIndex((x) => x.id == id);\n    if (foundIndex !== -1 && tmp[foundIndex].options) {\n      let options = tmp[foundIndex].options || [];\n      options[index] = option;\n      tmp[foundIndex] = {\n        ...tmp[foundIndex],\n        options: [...options],\n      };\n      setFormElements([...tmp]);\n      setSelectedField({ ...tmp[foundIndex] });\n    }\n  };\n\n  const handleDeleteOption = (\n    id: number,\n    option: string,\n    server_id?: number | null\n  ) => {\n    let tmp = [...formElements];\n    let foundIndex = tmp.findIndex((x) => x.id == id);\n    if (foundIndex !== -1 && tmp[foundIndex].options) {\n      let options = [...(tmp[foundIndex].options || [])];\n      let optionIndex = options.findIndex((x) => x.value == option);\n      if (optionIndex > -1) {\n        options.splice(optionIndex, 1);\n        tmp[foundIndex] = {\n          ...tmp[foundIndex],\n          options: [...options],\n        };\n\n        setFormElements([...tmp]);\n        setSelectedField({ ...tmp[foundIndex] });\n      }\n    }\n\n    //server side delete if item has server_id\n    if (server_id) {\n      formService.deleteOption(server_id).then((res) => {\n        // console.log(\"res\", res);\n      });\n    }\n  };\n\n  const setOnlyImage = (value: boolean) => {\n    let tmp = [...formElements];\n\n    let foundIndex = tmp.findIndex((x) => x.id == selectedField?.id);\n\n    if (foundIndex > -1) {\n      tmp[foundIndex] = {\n        ...tmp[foundIndex],\n        onlyImage: value,\n      };\n      setFormElements([...tmp]);\n      setSelectedField({ ...tmp[foundIndex] });\n    }\n  };\n\n  const setRequired = (value: boolean) => {\n    let tmp = [...formElements];\n\n    let foundIndex = tmp.findIndex((x) => x.id == selectedField?.id);\n\n    if (foundIndex > -1) {\n      tmp[foundIndex] = {\n        ...tmp[foundIndex],\n        required: value,\n      };\n      setFormElements([...tmp]);\n      setSelectedField({ ...tmp[foundIndex] });\n    }\n  };\n  const setFromBasicData = (value: boolean) => {\n    // console.log('val',value)\n    let tmp = [...formElements];\n\n    let foundIndex = tmp.findIndex((x) => x.id == selectedField?.id);\n\n    if (foundIndex > -1) {\n      let basicDataId = tmp[foundIndex].basic_data?.id || basicDatas?.[0].id;\n\n      console.log(\"bas\", basicDataId);\n      tmp[foundIndex] = {\n        ...tmp[foundIndex],\n        basic_data_id: value == true ? basicDataId : null,\n        basic_data:\n          value == true ? tmp[foundIndex].basic_data || basicDatas?.[0] : null,\n        basicDataItems:\n          value == true\n            ? (tmp[foundIndex].basic_data || basicDatas?.[0]).items.map(\n                (item: any) => ({\n                  id: item.id,\n                  label: <p>{item.name}</p>,\n                  server_id: item.id,\n                  value: item.code,\n                })\n              )\n            : null,\n      };\n      setFormElements([...tmp]);\n      setSelectedField({ ...tmp[foundIndex] });\n    }\n  };\n  // console.log('form',formElements)\n  const saveConditions = (conditions: Condition[]) => {\n    setSavedConditions([...conditions.filter((x) => x.saved)]);\n    console.log(\"[...conditions.filter((x) => x.saved)]\", [\n      ...conditions.filter((x) => x.saved),\n    ]);\n    handleSaveForm(null, [...conditions.filter((x) => x.saved)]);\n  };\n  const handleDeleteItem = async (element: FormField) => {\n    try {\n      //set loading\n      setSaveFormLoading(true);\n      if (element.server_id) {\n        await formService.deleteItem(element.server_id, formId);\n      }\n      //add alert for delete\n      // console.log(\"eleme\", element);\n      let tmp = [...formElements];\n      const index = tmp.indexOf(element);\n      if (index > -1) {\n        tmp.splice(index, 1);\n        setFormElements(tmp);\n        if (element.id == selectedField?.id) {\n          // setTimeout(() => {\n          handleSelectField(undefined);\n          // }, 1);\n        }\n      }\n\n      SnackbarUtils.success(t(\"fieldDeletedSuccessfully\"));\n      setSaveFormLoading(false);\n    } catch (error) {\n      // SnackbarUtils.error(t(\"error\"));\n      setSaveFormLoading(false);\n    }\n  };\n  const handleBack = () => {\n    Navigate(`/products/${code}/steps`);\n  };\n\n  useEffect(() => {\n    if (productStepInfo && formFieldTypes) {\n      if (productStepInfo.forms?.length > 0) {\n        setSaveFormLoading(true);\n        setFormId(productStepInfo.forms?.[0].id);\n        loadForm(productStepInfo.forms?.[0].id);\n      } else {\n        createForm(\n          productStepInfo.global_step,\n          productStepInfo.product?.count_type\n        );\n      }\n    }\n  }, [productStepInfo, formFieldTypes]);\n  const loadForm = async (id: number) => {\n    const response = await formService.getForm(id);\n    handleSetFormElements(response);\n    handleSetFormElements(response, true);\n    handleSetFormConditions(response);\n    setSaveFormLoading(false);\n  };\n\n  const handleSetFormConditions = (response: any) => {\n    let { conditions, fields, id } = response;\n    let tmp: Condition[] = [];\n    //group conditions by form_field_id\n    conditions?.map((item: any) => {\n      //find field\n      let field = fields.find((x: any) => x.id == item.form_field_id);\n\n      console.log(\"fff\", field);\n      //find field options\n      let options = (field?.basicDataItems || field?.options)?.map((x: any) => {\n        return {\n          id: x.id,\n          label: x.label,\n          server_id: x.id,\n          value: x.option,\n        };\n      });\n      console.log(\"fff\", options);\n\n      let foundIndex = tmp.findIndex((x: any) => x.field == item.form_field_id);\n      if (foundIndex > -1) {\n        //find specific option\n        let option = options?.find(\n          (x: any) =>\n            x.id == (item.basic_data_item_id || item.form_field_option_id)\n        );\n        console.log(\"p[topnnnnsss\", options);\n        console.log(\"p[topnnnnsss\", option);\n        console.log(\"p[topnnnnsss\", item);\n\n        tmp[foundIndex]?.values?.push({\n          id: option?.id,\n          label: option?.label,\n          server_id: option?.id,\n          value: option?.value,\n        });\n      } else {\n        //find specific option\n        let option = options?.find(\n          (x: any) =>\n            x.id == (item.basic_data_item_id || item.form_field_option_id)\n        );\n\n        tmp.push({\n          field: item.form_field_id,\n          id: item.id,\n          operation:\n            item.operation == 1\n              ? { name: \"operation\", value: \"show\" }\n              : { name: \"operation\", value: \"hide\" },\n          relationField: item.relational_form_field_id,\n          saved: true,\n          values: [\n            {\n              id: option?.id,\n              label: option?.label,\n              server_id: option?.id,\n              value: option?.value,\n            },\n          ],\n        });\n      }\n    });\n\n    console.log(\"tmp123\", [...tmp]);\n    setSavedConditions([...tmp]);\n  };\n\n  const handleSetFormElements = (form: any, relatedFields?: boolean) => {\n    let tmp: FormField[] = [];\n    let parseableArray = relatedFields ? form.relatedFields : form.fields;\n    console.log(\"formId\", form.id);\n    parseableArray?.forEach((item: any) => {\n      console.log(\"item\", item);\n      let tmpItem: FormField = {\n        id: item.id,\n        name: item.name,\n        type: item.type?.type,\n        typeId: item.form_field_type_id,\n        label: item.label,\n        placeholder: item.placeholder,\n        required: item.required,\n        basic_data: item.basic_data,\n        basic_data_id: item.basic_data?.id || null,\n        form: item.form && item.form?.id != form.id ? item.form : null,\n        fromRelatedFields:\n          item.form?.id && item.form?.id != form.id ? true : false,\n        basicDataItems:\n          ((item.basicDataItems && item.basicDataItems.length > 0) ||\n            item.type?.has_options) &&\n          item.basicDataItems?.map((option: any) => {\n            return {\n              id: option.id,\n              server_id: option.id,\n              value: option.option,\n              label: <p>{option.label}</p>,\n            };\n          }),\n        options:\n          ((item.options && item.options.length > 0) ||\n            item.type?.has_options) &&\n          item.options?.map((option: any) => {\n            return {\n              id: option.id,\n              server_id: option.id,\n              value: option.option,\n              label: <p>{option.label}</p>,\n            };\n          }),\n        onlyImage: JSON.parse(item.validation)?.onlyImage,\n        server_id: item.id,\n        readOnly: JSON.parse(item.validation)?.readOnly,\n      };\n      tmp.push(tmpItem);\n    });\n    relatedFields ? setFormRelatedElements(tmp) : setFormElements(tmp);\n  };\n\n  const createForm = async (globalStepInfo: any, countType: string) => {\n    const stepDesc = globalStepInfo?.description;\n    const response = await formService.createForm({\n      name: \"form\" + productStepInfo?.id,\n      product_id: productStepInfo?.product_id,\n      product_steps: productStepInfo?.id?.toString(),\n    });\n    setFormId(response.id);\n    if (stepDesc === \"initialOrder\" && countType === \"m2\") {\n      //create two items and add to DB readonly\n      await formService.updateForm(response.id, {\n        conditions: [],\n        fields: [\n          {\n            basic_data_id: null,\n            form_field_type_id: formFieldTypes?.find((x) => x.type == \"number\")\n              ?.id,\n            helper_text: 1,\n            label: \"عرض\",\n            max: 100,\n            min: 1,\n            name: \"width\",\n            order: 0,\n            origin_form_id: null,\n            placeholder: \"عرض را وارد کنید\",\n            required: true,\n            validation: `{\"readOnly\":true}`,\n          },\n          {\n            basic_data_id: null,\n            form_field_type_id: formFieldTypes?.find((x) => x.type == \"number\")\n              ?.id,\n            helper_text: 2,\n            label: \"ارتفاع\",\n            max: 100,\n            min: 1,\n            name: \"height\",\n            order: 1,\n            origin_form_id: null,\n            placeholder: \"ارتفاع را وارد کنید\",\n            required: true,\n            validation: `{\"readOnly\":true}`,\n          },\n        ],\n        name: \"form\" + productStepInfo?.id,\n      });\n    }\n    loadForm(response.id);\n\n    setSaveFormLoading(false);\n  };\n\n  const handleSaveForm = async (e?: any, passedConditions?: Condition[]) => {\n    //save form fields and save their ids as server_id\n    setSaveFormLoading(true);\n    let tmp = [...formElements];\n    let condTmp = [...savedConditions];\n    console.log(\"pass\", formElements);\n\n    if (passedConditions) {\n      condTmp = [...passedConditions];\n    }\n    console.log(\"tmp\", tmp);\n    //check if we dont have two field with same name\n    let names = tmp.map((item) => item.name);\n    let duplicateNames = names.filter(\n      (item, index) => names.indexOf(item) != index\n    );\n    if (duplicateNames.length > 0) {\n      //tell in error that which fields are duplicate\n      let duplicateFields = tmp.filter((item) =>\n        duplicateNames.includes(item.name)\n      );\n      let duplicateFieldsNames = duplicateFields.map((item) => item.label);\n      SnackbarUtils.error(\n        t(\"validations:fieldNamesMustBeUnique\") + duplicateFieldsNames\n      );\n      setSaveFormLoading(false);\n      return;\n    }\n    let res = formService.updateForm(formId, {\n      name: \"form\" + productStepInfo?.id,\n      fields: tmp.map((item, index) => {\n        let validationTmp: any = {};\n        if (item.type === \"uploadFile\") {\n          validationTmp.onlyImage = item.onlyImage;\n        }\n        if (item.readOnly) {\n          validationTmp.readOnly = item.readOnly;\n        }\n\n        return {\n          server_id: item.server_id,\n          name: item.name,\n          form_field_type_id: item.typeId,\n          label: item.label,\n          placeholder: item.placeholder,\n          required: item.required,\n          helper_text: item.id,\n          validation: JSON.stringify(validationTmp),\n          min: 1,\n          max: 100,\n          order: index,\n          origin_form_id: item.fromRelatedFields ? item.form.id : null,\n          hasOptions: item.options && item.options.length > 0,\n          basic_data: item.basic_data,\n          basic_data_id: item.basic_data_id || null,\n          // basic_data_id: item.basic_data?.id || null,\n\n          basicDataItems:\n            item.basicDataItems &&\n            item.basicDataItems.length > 0 &&\n            item.basicDataItems?.map((option: any) => {\n              return {\n                id: option.id,\n                server_id: option.id,\n                value: option.option,\n                label: <p>{option.label}</p>,\n              };\n            }),\n          options:\n            item.options &&\n            item.options.length > 0 &&\n            item.options?.map((x) => {\n              return {\n                option: x.value,\n                label: x.label.props.children,\n                id: x.server_id,\n              };\n            }),\n        };\n      }),\n      conditions: condTmp.map((item, index) => {\n        return {\n          form_id: formId,\n          form_field_id: item.field,\n          form_field_options_id: item.values?.map((value) => {\n            return value.id;\n          }),\n          operation: item.operation?.value === \"show\" ? 1 : 0,\n          relational_form_field_id: item.relationField,\n        };\n      }),\n    });\n    res.then((response) => {\n      console.log(\"updated!\", response);\n\n      handleSetFormElements(response);\n      handleSetFormConditions(response);\n      handleSetFormElements(response, true);\n\n      setSaveFormLoading(false);\n      SnackbarUtils.success(t(\"formSavedSuccessfully\"));\n    });\n    res.catch((error) => {\n      setSaveFormLoading(false);\n      SnackbarUtils.error(t(\"formSaveError\"));\n    });\n  };\n\n  return (\n    <div className=\"w-full h-full\">\n      {saveFormLoading && (\n        <FullscreenLoading />\n        // <div className=\"flex-col w-full h-full fixed top-0 left-0 bg-[rgba(0,0,0,0.8)] z-[9999] pointer-events-auto flex justify-center items-center\">\n        //   <CircularProgress />\n        //   <p className=\"text-white mt-4\">لطفا چند لحظه صبر کنید...</p>\n        // </div>\n      )}\n      <Breadcrumb\n        handleBack={handleBack}\n        actions={\n          <>\n            {\" \"}\n            <div className=\"w-[186px]\">\n              <Button\n                icon={<Eye />}\n                text={t(\"viewForm\")}\n                onClick={() => {}}\n                gray\n              />\n            </div>\n            <div className=\"w-[138px] ms-4\">\n              <Button\n                icon={<ArchiveTick />}\n                text={t(\"saveForm\")}\n                onClick={handleSaveForm}\n              />\n            </div>\n          </>\n        }\n        title={`${t(\"formBuilder\")} ${t(\"step\")} ${\n          productStepInfo?.step_name\n        } ${t(\"product\")} ${productStepInfo?.product?.name}`}\n      />\n      <div className=\"w-full flex\">\n        <FormBuilderSidebar\n          handleChangeTab={handleChangeTab}\n          selectedTab={selectedTab}\n          addElement={handleAddElement}\n          selectedField={selectedField}\n          handleUpdateField={handleUpdateField}\n          handleAddOption={handleAddOption}\n          handleUpdateOption={handleUpdateOption}\n          handleDeleteOption={handleDeleteOption}\n          setOnlyImage={setOnlyImage}\n          setRequired={setRequired}\n          formElements={formElements}\n          saveConditions={saveConditions}\n          savedConditions={savedConditions}\n          setFromBasicData={setFromBasicData}\n          relatedFields={formRelatedElements}\n        />\n        <div className=\"basis-3/4 bg-white ms-2\">\n          <FormContent\n            lastId={lastId}\n            setLastId={setLastId}\n            saveFormLoading={saveFormLoading}\n            formElements={formElements}\n            selectedField={selectedField}\n            setFormElements={setFormElements}\n            handleSelectField={handleSelectField}\n            deleteItem={handleDeleteItem}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormBuilder;\n"],"names":["_path","items","value","handleChange","className","map","item","index","onClick","label","checked","setChecked","open","handleClose","field","handleAddOption","selectedOption","initialValues","id","fieldName","fieldValue","server_id","formik","useFormik","onSubmit","values","console","log","setFieldValue","useEffect","_handleClose","SideDialog","headerText","headerIcon","Add","handleSubmit","TextField","name","type","placeholder","Button","text","gray","submitForm","selectedField","handleUpdateField","handleDeleteOption","handleUpdateOption","onlyImage","setOnlyImage","required","setRequired","fromBasicData","setFromBasicData","useState","openAddDropdownItemDialog","setOpenAddDropdownItemDialog","setSelectedOption","basicDatas","useAppSelector","state","basicData","t","useTranslation","Dispatch","useAppDispatch","_handleUpdateField","e","tmp","target","basicDataTmp","find","x","code","basicDatasList","_handleOpenAddOptionDialog","options","findIndex","option","props","children","fromRelatedFields","readOnly","data","toString","basic_data","undefined","update","Edit2","_handleDeleteOption","Trash","icon","_excluded","_extends","Object","assign","bind","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgFrame","_ref","svgRef","title","titleId","width","height","viewBox","fill","xmlns","ref","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_path2","ForwardRef","SvgNumericField","SvgDropdown","formActions","formSlice","addElement","relatedFields","formFieldTypes","forms","dispatch","getState","formService","response","getFormFieldTypes","parseIcon","TextBlock","ExportCurve","TickSquare","Array","from","Skeleton","variant","animation","form","step","step_name","conditionalfields","formElements","condition","setCondition","deleteCondition","saveCondition","setSelectedField","selectedFieldValue","setSelectedFieldValue","operation","setOperation","relationField","setRelationField","selectedFieldTmp","relationFieldTmp","basicDataItems","updateConditions","newCondition","saved","condField","condFieldValue","newSelectedFieldValue","splice","handleDeleteItem","filter","ArchiveTick","saveConditions","savedConditions","conditions","setConditions","newConditions","handleDeleteCondition","SnackbarUtils","handleSaveCondition","condTemp","relationFieldIndex","cond","Math","floor","random","handleChangeTab","selectedTab","handleSaveConditions","basic_data_id","_renderTab","setFormElements","handleSelectField","lastId","setLastId","deleteItem","saveFormLoading","fieldActions","element","Close","handleCopyItem","Copy","dragItem","useRef","dragOverItem","drop","copyListItems","dragItemContent","current","Information","onDragStart","position","onDragEnter","onDragEnd","draggable","HambergerMenu","renderElement","useParams","step_id","setCollapseMenu","setSelectedTab","handleSaveForm","formRelatedElements","setFormRelatedElements","setSavedConditions","setSaveFormLoading","formId","setFormId","productStepInfo","products","Navigate","useNavigate","getProductStepInfo","parseInt","loadForm","createForm","global_step","product","count_type","handleSetFormElements","handleSetFormConditions","fields","form_field_id","foundIndex","basic_data_item_id","form_field_option_id","push","relational_form_field_id","parseableArray","forEach","tmpItem","typeId","form_field_type_id","has_options","JSON","parse","validation","globalStepInfo","countType","stepDesc","description","product_id","product_steps","helper_text","max","min","order","origin_form_id","passedConditions","condTmp","names","duplicateNames","duplicateFields","includes","duplicateFieldsNames","res","validationTmp","stringify","hasOptions","form_id","form_field_options_id","then","catch","error","FullscreenLoading","Breadcrumb","handleBack","actions","Eye","relatedTmp","optionIndex","basicDataId"],"sourceRoot":""}